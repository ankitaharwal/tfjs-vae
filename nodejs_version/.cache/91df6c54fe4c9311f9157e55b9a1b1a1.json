{"dependencies":[{"name":"C:\\Users\\qison\\package.json","includedInParent":true,"mtime":1526331035212},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\ndarray-homography\\package.json","includedInParent":true,"mtime":1411856542000},{"name":"ndarray-warp","loc":{"line":3,"column":19}},{"name":"gl-matrix-invert","loc":{"line":4,"column":21}}],"generated":{"js":"'use strict'\n\nvar warp = require('ndarray-warp')\nvar invert = require('gl-matrix-invert')\n\nmodule.exports = applyHomography\n\nfunction applyHomography(dest, src, Xi) {\n  var n = src.dimension\n  var X = invert([], Xi)\n  warp(dest, src, function(out_c, inp_c) {\n    for(var i=0; i<n; ++i) {\n      out_c[i] = X[(n+1)*n + i]\n      for(var j=0; j<n; ++j) {\n        out_c[i] += X[(n+1)*j+i] * inp_c[j]\n      }\n    }\n    var w = X[(n+1)*(n+1)-1]\n    for(var j=0; j<n; ++j) {\n      w += X[(n+1)*j+n] * inp_c[j]\n    }\n    var wr = 1.0 / w\n    for(var i=0; i<n; ++i) {\n      out_c[i] *= wr\n    }\n    return out_c\n  })\n  return dest\n}","map":{"mappings":[{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"nodejs_version\\node_modules\\ndarray-homography\\xform.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}}],"sources":{"nodejs_version\\node_modules\\ndarray-homography\\xform.js":"'use strict'\n\nvar warp = require('ndarray-warp')\nvar invert = require('gl-matrix-invert')\n\nmodule.exports = applyHomography\n\nfunction applyHomography(dest, src, Xi) {\n  var n = src.dimension\n  var X = invert([], Xi)\n  warp(dest, src, function(out_c, inp_c) {\n    for(var i=0; i<n; ++i) {\n      out_c[i] = X[(n+1)*n + i]\n      for(var j=0; j<n; ++j) {\n        out_c[i] += X[(n+1)*j+i] * inp_c[j]\n      }\n    }\n    var w = X[(n+1)*(n+1)-1]\n    for(var j=0; j<n; ++j) {\n      w += X[(n+1)*j+n] * inp_c[j]\n    }\n    var wr = 1.0 / w\n    for(var i=0; i<n; ++i) {\n      out_c[i] *= wr\n    }\n    return out_c\n  })\n  return dest\n}"},"lineCount":29}},"hash":"28a21473c63c175600a66055721b8387","cacheData":{"env":{}}}