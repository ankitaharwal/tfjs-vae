{"dependencies":[{"name":"C:\\Users\\qison\\package.json","includedInParent":true,"mtime":1526331035212},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\gl-vec4\\package.json","includedInParent":true,"mtime":1431617897000},{"name":"./normalize","loc":{"line":1,"column":27}},{"name":"./scale","loc":{"line":2,"column":23}}],"generated":{"js":"var vecNormalize = require('./normalize')\nvar vecScale = require('./scale')\n\nmodule.exports = random\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nfunction random (out, scale) {\n  scale = scale || 1.0\n\n  // TODO: This is a pretty awful way of doing this. Find something better.\n  out[0] = Math.random()\n  out[1] = Math.random()\n  out[2] = Math.random()\n  out[3] = Math.random()\n  vecNormalize(out, out)\n  vecScale(out, out, scale)\n  return out\n}\n","map":{"mappings":[{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"nodejs_version\\node_modules\\gl-vec4\\random.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}}],"sources":{"nodejs_version\\node_modules\\gl-vec4\\random.js":"var vecNormalize = require('./normalize')\nvar vecScale = require('./scale')\n\nmodule.exports = random\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nfunction random (out, scale) {\n  scale = scale || 1.0\n\n  // TODO: This is a pretty awful way of doing this. Find something better.\n  out[0] = Math.random()\n  out[1] = Math.random()\n  out[2] = Math.random()\n  out[3] = Math.random()\n  vecNormalize(out, out)\n  vecScale(out, out, scale)\n  return out\n}\n"},"lineCount":25}},"hash":"d3760a81713492282e6fd51cc2a2b08a","cacheData":{"env":{}}}