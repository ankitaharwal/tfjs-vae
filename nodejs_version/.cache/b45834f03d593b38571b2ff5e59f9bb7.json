{"dependencies":[{"name":"C:\\Users\\qison\\package.json","includedInParent":true,"mtime":1526331035212},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\delaunay-triangulate\\package.json","includedInParent":true,"mtime":1402347824000},{"name":"incremental-convex-hull","loc":{"line":3,"column":17}},{"name":"uniq","loc":{"line":4,"column":19}}],"generated":{"js":"\"use strict\"\n\nvar ch = require(\"incremental-convex-hull\")\nvar uniq = require(\"uniq\")\n\nmodule.exports = triangulate\n\nfunction LiftedPoint(p, i) {\n  this.point = p\n  this.index = i\n}\n\nfunction compareLifted(a, b) {\n  var ap = a.point\n  var bp = b.point\n  var d = ap.length\n  for(var i=0; i<d; ++i) {\n    var s = bp[i] - ap[i]\n    if(s) {\n      return s\n    }\n  }\n  return 0\n}\n\nfunction triangulate1D(n, points, includePointAtInfinity) {\n  if(n === 1) {\n    if(includePointAtInfinity) {\n      return [ [-1, 0] ]\n    } else {\n      return []\n    }\n  }\n  var lifted = points.map(function(p, i) {\n    return [ p[0], i ]\n  })\n  lifted.sort(function(a,b) {\n    return a[0] - b[0]\n  })\n  var cells = new Array(n - 1)\n  for(var i=1; i<n; ++i) {\n    var a = lifted[i-1]\n    var b = lifted[i]\n    cells[i-1] = [ a[1], b[1] ]\n  }\n  if(includePointAtInfinity) {\n    cells.push(\n      [ -1, cells[0][1], ],\n      [ cells[n-1][1], -1 ])\n  }\n  return cells\n}\n\nfunction triangulate(points, includePointAtInfinity) {\n  var n = points.length\n  if(n === 0) {\n    return []\n  }\n  \n  var d = points[0].length\n  if(d < 1) {\n    return []\n  }\n\n  //Special case:  For 1D we can just sort the points\n  if(d === 1) {\n    return triangulate1D(n, points, includePointAtInfinity)\n  }\n  \n  //Lift points, sort\n  var lifted = new Array(n)\n  var upper = 1.0\n  for(var i=0; i<n; ++i) {\n    var p = points[i]\n    var x = new Array(d+1)\n    var l = 0.0\n    for(var j=0; j<d; ++j) {\n      var v = p[j]\n      x[j] = v\n      l += v * v\n    }\n    x[d] = l\n    lifted[i] = new LiftedPoint(x, i)\n    upper = Math.max(l, upper)\n  }\n  uniq(lifted, compareLifted)\n  \n  //Double points\n  n = lifted.length\n\n  //Create new list of points\n  var dpoints = new Array(n + d + 1)\n  var dindex = new Array(n + d + 1)\n\n  //Add steiner points at top\n  var u = (d+1) * (d+1) * upper\n  var y = new Array(d+1)\n  for(var i=0; i<=d; ++i) {\n    y[i] = 0.0\n  }\n  y[d] = u\n\n  dpoints[0] = y.slice()\n  dindex[0] = -1\n\n  for(var i=0; i<=d; ++i) {\n    var x = y.slice()\n    x[i] = 1\n    dpoints[i+1] = x\n    dindex[i+1] = -1\n  }\n\n  //Copy rest of the points over\n  for(var i=0; i<n; ++i) {\n    var h = lifted[i]\n    dpoints[i + d + 1] = h.point\n    dindex[i + d + 1] =  h.index\n  }\n\n  //Construct convex hull\n  var hull = ch(dpoints, false)\n  if(includePointAtInfinity) {\n    hull = hull.filter(function(cell) {\n      var count = 0\n      for(var j=0; j<=d; ++j) {\n        var v = dindex[cell[j]]\n        if(v < 0) {\n          if(++count >= 2) {\n            return false\n          }\n        }\n        cell[j] = v\n      }\n      return true\n    })\n  } else {\n    hull = hull.filter(function(cell) {\n      for(var i=0; i<=d; ++i) {\n        var v = dindex[cell[i]]\n        if(v < 0) {\n          return false\n        }\n        cell[i] = v\n      }\n      return true\n    })\n  }\n\n  if(d & 1) {\n    for(var i=0; i<hull.length; ++i) {\n      var h = hull[i]\n      var x = h[0]\n      h[0] = h[1]\n      h[1] = x\n    }\n  }\n\n  return hull\n}","map":{"mappings":[{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}}],"sources":{"nodejs_version\\node_modules\\delaunay-triangulate\\triangulate.js":"\"use strict\"\n\nvar ch = require(\"incremental-convex-hull\")\nvar uniq = require(\"uniq\")\n\nmodule.exports = triangulate\n\nfunction LiftedPoint(p, i) {\n  this.point = p\n  this.index = i\n}\n\nfunction compareLifted(a, b) {\n  var ap = a.point\n  var bp = b.point\n  var d = ap.length\n  for(var i=0; i<d; ++i) {\n    var s = bp[i] - ap[i]\n    if(s) {\n      return s\n    }\n  }\n  return 0\n}\n\nfunction triangulate1D(n, points, includePointAtInfinity) {\n  if(n === 1) {\n    if(includePointAtInfinity) {\n      return [ [-1, 0] ]\n    } else {\n      return []\n    }\n  }\n  var lifted = points.map(function(p, i) {\n    return [ p[0], i ]\n  })\n  lifted.sort(function(a,b) {\n    return a[0] - b[0]\n  })\n  var cells = new Array(n - 1)\n  for(var i=1; i<n; ++i) {\n    var a = lifted[i-1]\n    var b = lifted[i]\n    cells[i-1] = [ a[1], b[1] ]\n  }\n  if(includePointAtInfinity) {\n    cells.push(\n      [ -1, cells[0][1], ],\n      [ cells[n-1][1], -1 ])\n  }\n  return cells\n}\n\nfunction triangulate(points, includePointAtInfinity) {\n  var n = points.length\n  if(n === 0) {\n    return []\n  }\n  \n  var d = points[0].length\n  if(d < 1) {\n    return []\n  }\n\n  //Special case:  For 1D we can just sort the points\n  if(d === 1) {\n    return triangulate1D(n, points, includePointAtInfinity)\n  }\n  \n  //Lift points, sort\n  var lifted = new Array(n)\n  var upper = 1.0\n  for(var i=0; i<n; ++i) {\n    var p = points[i]\n    var x = new Array(d+1)\n    var l = 0.0\n    for(var j=0; j<d; ++j) {\n      var v = p[j]\n      x[j] = v\n      l += v * v\n    }\n    x[d] = l\n    lifted[i] = new LiftedPoint(x, i)\n    upper = Math.max(l, upper)\n  }\n  uniq(lifted, compareLifted)\n  \n  //Double points\n  n = lifted.length\n\n  //Create new list of points\n  var dpoints = new Array(n + d + 1)\n  var dindex = new Array(n + d + 1)\n\n  //Add steiner points at top\n  var u = (d+1) * (d+1) * upper\n  var y = new Array(d+1)\n  for(var i=0; i<=d; ++i) {\n    y[i] = 0.0\n  }\n  y[d] = u\n\n  dpoints[0] = y.slice()\n  dindex[0] = -1\n\n  for(var i=0; i<=d; ++i) {\n    var x = y.slice()\n    x[i] = 1\n    dpoints[i+1] = x\n    dindex[i+1] = -1\n  }\n\n  //Copy rest of the points over\n  for(var i=0; i<n; ++i) {\n    var h = lifted[i]\n    dpoints[i + d + 1] = h.point\n    dindex[i + d + 1] =  h.index\n  }\n\n  //Construct convex hull\n  var hull = ch(dpoints, false)\n  if(includePointAtInfinity) {\n    hull = hull.filter(function(cell) {\n      var count = 0\n      for(var j=0; j<=d; ++j) {\n        var v = dindex[cell[j]]\n        if(v < 0) {\n          if(++count >= 2) {\n            return false\n          }\n        }\n        cell[j] = v\n      }\n      return true\n    })\n  } else {\n    hull = hull.filter(function(cell) {\n      for(var i=0; i<=d; ++i) {\n        var v = dindex[cell[i]]\n        if(v < 0) {\n          return false\n        }\n        cell[i] = v\n      }\n      return true\n    })\n  }\n\n  if(d & 1) {\n    for(var i=0; i<hull.length; ++i) {\n      var h = hull[i]\n      var x = h[0]\n      h[0] = h[1]\n      h[1] = x\n    }\n  }\n\n  return hull\n}"},"lineCount":159}},"hash":"feb055bd458143f5643d1ec80802801a","cacheData":{"env":{}}}