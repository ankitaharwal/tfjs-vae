{"dependencies":[{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\package.json","includedInParent":true,"mtime":1528206326997},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\.babelrc","includedInParent":true,"mtime":1528197961732},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\array-normalize\\package.json","includedInParent":true,"mtime":1499875120000},{"name":"array-bounds","loc":{"line":3,"column":24}}],"generated":{"js":"'use strict'\r\n\r\nvar getBounds = require('array-bounds')\r\n\r\nmodule.exports = normalize;\r\n\r\nfunction normalize (arr, dim, bounds) {\r\n\tif (!arr || arr.length == null) throw Error('Argument should be an array')\r\n\r\n\tif (dim == null) dim = 1\r\n\tif (bounds == null) bounds = getBounds(arr, dim)\r\n\r\n\tfor (var offset = 0; offset < dim; offset++) {\r\n\t\tvar max = bounds[dim + offset], min = bounds[offset], i = offset, l = arr.length;\r\n\r\n\t\tif (max === Infinity && min === -Infinity) {\r\n\t\t\tfor (i = offset; i < l; i+=dim) {\r\n\t\t\t\tarr[i] = arr[i] === max ? 1 : arr[i] === min ? 0 : .5\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (max === Infinity) {\r\n\t\t\tfor (i = offset; i < l; i+=dim) {\r\n\t\t\t\tarr[i] = arr[i] === max ? 1 : 0\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (min === -Infinity) {\r\n\t\t\tfor (i = offset; i < l; i+=dim) {\r\n\t\t\t\tarr[i] = arr[i] === min ? 0 : 1\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvar range = max - min\r\n\t\t\tfor (i = offset; i < l; i+=dim) {\r\n\t\t\t\tarr[i] = range === 0 ? .5 : (arr[i] - min) / range\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn arr;\r\n}\r\n","map":{"mappings":[{"source":"node_modules\\array-normalize\\index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\array-normalize\\index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}}],"sources":{"node_modules\\array-normalize\\index.js":"'use strict'\r\n\r\nvar getBounds = require('array-bounds')\r\n\r\nmodule.exports = normalize;\r\n\r\nfunction normalize (arr, dim, bounds) {\r\n\tif (!arr || arr.length == null) throw Error('Argument should be an array')\r\n\r\n\tif (dim == null) dim = 1\r\n\tif (bounds == null) bounds = getBounds(arr, dim)\r\n\r\n\tfor (var offset = 0; offset < dim; offset++) {\r\n\t\tvar max = bounds[dim + offset], min = bounds[offset], i = offset, l = arr.length;\r\n\r\n\t\tif (max === Infinity && min === -Infinity) {\r\n\t\t\tfor (i = offset; i < l; i+=dim) {\r\n\t\t\t\tarr[i] = arr[i] === max ? 1 : arr[i] === min ? 0 : .5\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (max === Infinity) {\r\n\t\t\tfor (i = offset; i < l; i+=dim) {\r\n\t\t\t\tarr[i] = arr[i] === max ? 1 : 0\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (min === -Infinity) {\r\n\t\t\tfor (i = offset; i < l; i+=dim) {\r\n\t\t\t\tarr[i] = arr[i] === min ? 0 : 1\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvar range = max - min\r\n\t\t\tfor (i = offset; i < l; i+=dim) {\r\n\t\t\t\tarr[i] = range === 0 ? .5 : (arr[i] - min) / range\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn arr;\r\n}\r\n"},"lineCount":41}},"hash":"a70b0e9a58a5beb03f4832b47ef5b852","cacheData":{"env":{}}}