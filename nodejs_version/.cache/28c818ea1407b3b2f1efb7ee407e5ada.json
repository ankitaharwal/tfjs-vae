{"dependencies":[{"name":"C:\\Users\\qison\\package.json","includedInParent":true,"mtime":1526331035212},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\plotly.js\\package.json","includedInParent":true,"mtime":499162500000},{"name":"../../lib/extend","loc":{"line":11,"column":25}}],"generated":{"js":"/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\n// pure functions, don't alter but passes on `gd` and parts of `trace` without deep copying\n\nexports.splitToPanels = function(d) {\n    var prevPages = [0, 0];\n    var headerPanel = extendFlat({}, d, {\n        key: 'header',\n        type: 'header',\n        page: 0,\n        prevPages: prevPages,\n        currentRepaint: [null, null],\n        dragHandle: true,\n        values: d.calcdata.headerCells.values[d.specIndex],\n        rowBlocks: d.calcdata.headerRowBlocks,\n        calcdata: extendFlat({}, d.calcdata, {cells: d.calcdata.headerCells})\n    });\n    var revolverPanel1 = extendFlat({}, d, {\n        key: 'cells1',\n        type: 'cells',\n        page: 0,\n        prevPages: prevPages,\n        currentRepaint: [null, null],\n        dragHandle: false,\n        values: d.calcdata.cells.values[d.specIndex],\n        rowBlocks: d.calcdata.rowBlocks\n    });\n    var revolverPanel2 = extendFlat({}, d, {\n        key: 'cells2',\n        type: 'cells',\n        page: 1,\n        prevPages: prevPages,\n        currentRepaint: [null, null],\n        dragHandle: false,\n        values: d.calcdata.cells.values[d.specIndex],\n        rowBlocks: d.calcdata.rowBlocks\n    });\n    // order due to SVG using painter's algo:\n    return [revolverPanel1, revolverPanel2, headerPanel];\n};\n\nexports.splitToCells = function(d) {\n    var fromTo = rowFromTo(d);\n    return (d.values || []).slice(fromTo[0], fromTo[1]).map(function(v, i) {\n        // By keeping identical key, a DOM node removal, creation and addition is spared, important when visible\n        // grid has a lot of elements (quadratic with xcol/ycol count).\n        // But it has to be busted when `svgUtil.convertToTspans` is used as it reshapes cell subtrees asynchronously,\n        // and by that time the user may have scrolled away, resulting in stale overwrites. The real solution will be\n        // to turn `svgUtil.convertToTspans` into a cancelable request, in which case no key busting is needed.\n        var buster = (typeof v === 'string') && v.match(/[<$&> ]/) ? '_keybuster_' + Math.random() : '';\n        return {\n            // keyWithinBlock: /*fromTo[0] + */i, // optimized future version - no busting\n            // keyWithinBlock: fromTo[0] + i, // initial always-unoptimized version - janky scrolling with 5+ columns\n            keyWithinBlock: i + buster, // current compromise: regular content is very fast; async content is possible\n            key: fromTo[0] + i,\n            column: d,\n            calcdata: d.calcdata,\n            page: d.page,\n            rowBlocks: d.rowBlocks,\n            value: v\n        };\n    });\n};\n\nfunction rowFromTo(d) {\n    var rowBlock = d.rowBlocks[d.page];\n    // fixme rowBlock truthiness check is due to ugly hack of placing 2nd panel as d.page = -1\n    var rowFrom = rowBlock ? rowBlock.rows[0].rowIndex : 0;\n    var rowTo = rowBlock ? rowFrom + rowBlock.rows.length : 0;\n    return [rowFrom, rowTo];\n}\n","map":{"mappings":[{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}}],"sources":{"nodejs_version\\node_modules\\plotly.js\\src\\traces\\table\\data_split_helpers.js":"/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\n// pure functions, don't alter but passes on `gd` and parts of `trace` without deep copying\n\nexports.splitToPanels = function(d) {\n    var prevPages = [0, 0];\n    var headerPanel = extendFlat({}, d, {\n        key: 'header',\n        type: 'header',\n        page: 0,\n        prevPages: prevPages,\n        currentRepaint: [null, null],\n        dragHandle: true,\n        values: d.calcdata.headerCells.values[d.specIndex],\n        rowBlocks: d.calcdata.headerRowBlocks,\n        calcdata: extendFlat({}, d.calcdata, {cells: d.calcdata.headerCells})\n    });\n    var revolverPanel1 = extendFlat({}, d, {\n        key: 'cells1',\n        type: 'cells',\n        page: 0,\n        prevPages: prevPages,\n        currentRepaint: [null, null],\n        dragHandle: false,\n        values: d.calcdata.cells.values[d.specIndex],\n        rowBlocks: d.calcdata.rowBlocks\n    });\n    var revolverPanel2 = extendFlat({}, d, {\n        key: 'cells2',\n        type: 'cells',\n        page: 1,\n        prevPages: prevPages,\n        currentRepaint: [null, null],\n        dragHandle: false,\n        values: d.calcdata.cells.values[d.specIndex],\n        rowBlocks: d.calcdata.rowBlocks\n    });\n    // order due to SVG using painter's algo:\n    return [revolverPanel1, revolverPanel2, headerPanel];\n};\n\nexports.splitToCells = function(d) {\n    var fromTo = rowFromTo(d);\n    return (d.values || []).slice(fromTo[0], fromTo[1]).map(function(v, i) {\n        // By keeping identical key, a DOM node removal, creation and addition is spared, important when visible\n        // grid has a lot of elements (quadratic with xcol/ycol count).\n        // But it has to be busted when `svgUtil.convertToTspans` is used as it reshapes cell subtrees asynchronously,\n        // and by that time the user may have scrolled away, resulting in stale overwrites. The real solution will be\n        // to turn `svgUtil.convertToTspans` into a cancelable request, in which case no key busting is needed.\n        var buster = (typeof v === 'string') && v.match(/[<$&> ]/) ? '_keybuster_' + Math.random() : '';\n        return {\n            // keyWithinBlock: /*fromTo[0] + */i, // optimized future version - no busting\n            // keyWithinBlock: fromTo[0] + i, // initial always-unoptimized version - janky scrolling with 5+ columns\n            keyWithinBlock: i + buster, // current compromise: regular content is very fast; async content is possible\n            key: fromTo[0] + i,\n            column: d,\n            calcdata: d.calcdata,\n            page: d.page,\n            rowBlocks: d.rowBlocks,\n            value: v\n        };\n    });\n};\n\nfunction rowFromTo(d) {\n    var rowBlock = d.rowBlocks[d.page];\n    // fixme rowBlock truthiness check is due to ugly hack of placing 2nd panel as d.page = -1\n    var rowFrom = rowBlock ? rowBlock.rows[0].rowIndex : 0;\n    var rowTo = rowBlock ? rowFrom + rowBlock.rows.length : 0;\n    return [rowFrom, rowTo];\n}\n"},"lineCount":82}},"hash":"a7acc533bc874ab30f84f28720f12fe5","cacheData":{"env":{}}}