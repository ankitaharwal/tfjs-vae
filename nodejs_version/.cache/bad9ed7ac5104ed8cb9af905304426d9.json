{"dependencies":[{"name":"C:\\Users\\qison\\package.json","includedInParent":true,"mtime":1526331035212},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\color-rgba\\package.json","includedInParent":true,"mtime":1508872564000},{"name":"color-parse","loc":{"line":5,"column":20}},{"name":"color-space/hsl","loc":{"line":6,"column":18}},{"name":"clamp","loc":{"line":7,"column":20}}],"generated":{"js":"/** @module  color-rgba */\r\n\r\n'use strict'\r\n\r\nvar parse = require('color-parse')\r\nvar hsl = require('color-space/hsl')\r\nvar clamp = require('clamp')\r\n\r\nmodule.exports = function rgba (color) {\r\n\tvar values, i, l\r\n\r\n\tif (typeof color !== 'string') throw Error('Argument should be a string')\r\n\r\n\t//attempt to parse non-array arguments\r\n\tvar parsed = parse(color)\r\n\r\n\tif (!parsed.space) return []\r\n\r\n\tvalues = Array(3)\r\n\tvalues[0] = clamp(parsed.values[0], 0, 255)\r\n\tvalues[1] = clamp(parsed.values[1], 0, 255)\r\n\tvalues[2] = clamp(parsed.values[2], 0, 255)\r\n\r\n\tif (parsed.space[0] === 'h') {\r\n\t\tvalues = hsl.rgb(values)\r\n\t}\r\n\r\n\tvalues.push(clamp(parsed.alpha, 0, 1))\r\n\r\n\treturn values\r\n}\r\n","map":{"mappings":[{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"nodejs_version\\node_modules\\color-rgba\\index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}}],"sources":{"nodejs_version\\node_modules\\color-rgba\\index.js":"/** @module  color-rgba */\r\n\r\n'use strict'\r\n\r\nvar parse = require('color-parse')\r\nvar hsl = require('color-space/hsl')\r\nvar clamp = require('clamp')\r\n\r\nmodule.exports = function rgba (color) {\r\n\tvar values, i, l\r\n\r\n\tif (typeof color !== 'string') throw Error('Argument should be a string')\r\n\r\n\t//attempt to parse non-array arguments\r\n\tvar parsed = parse(color)\r\n\r\n\tif (!parsed.space) return []\r\n\r\n\tvalues = Array(3)\r\n\tvalues[0] = clamp(parsed.values[0], 0, 255)\r\n\tvalues[1] = clamp(parsed.values[1], 0, 255)\r\n\tvalues[2] = clamp(parsed.values[2], 0, 255)\r\n\r\n\tif (parsed.space[0] === 'h') {\r\n\t\tvalues = hsl.rgb(values)\r\n\t}\r\n\r\n\tvalues.push(clamp(parsed.alpha, 0, 1))\r\n\r\n\treturn values\r\n}\r\n"},"lineCount":32}},"hash":"b7df606cd550c542e823bd55deb6ea8a","cacheData":{"env":{}}}