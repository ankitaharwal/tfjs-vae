{"dependencies":[{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\package.json","includedInParent":true,"mtime":1528206326997},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\.babelrc","includedInParent":true,"mtime":1528197961732},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\simplicial-complex-contour\\package.json","includedInParent":true,"mtime":1427230186000},{"name":"ndarray","loc":{"line":5,"column":22}},{"name":"typedarray-pool","loc":{"line":6,"column":22}},{"name":"ndarray-sort","loc":{"line":7,"column":22}},{"name":"./lib/codegen","loc":{"line":9,"column":31}}],"generated":{"js":"'use strict'\n\nmodule.exports = extractContour\n\nvar ndarray = require('ndarray')\nvar pool    = require('typedarray-pool')\nvar ndsort  = require('ndarray-sort')\n\nvar contourAlgorithm = require('./lib/codegen')\n\nfunction getDimension(cells) {\n  var numCells = cells.length\n  var d = 0\n  for(var i=0; i<numCells; ++i) {\n    d = Math.max(d, cells[i].length)|0\n  }\n  return d-1\n}\n\nfunction getSigns(values, level) {\n  var numVerts    = values.length\n  var vertexSigns = pool.mallocUint8(numVerts)\n  for(var i=0; i<numVerts; ++i) {\n    vertexSigns[i] = (values[i] < level)|0\n  }\n  return vertexSigns\n}\n\nfunction getEdges(cells, d) {\n  var numCells = cells.length\n  var maxEdges = ((d * (d+1)/2) * numCells)|0\n  var edges    = pool.mallocUint32(maxEdges*2)\n  var ePtr     = 0\n  for(var i=0; i<numCells; ++i) {\n    var c = cells[i]\n    var d = c.length\n    for(var j=0; j<d; ++j) {\n      for(var k=0; k<j; ++k) {\n        var a = c[k]\n        var b = c[j]\n        edges[ePtr++] = Math.min(a,b)|0\n        edges[ePtr++] = Math.max(a,b)|0\n      }\n    }\n  }\n  var nedges = (ePtr/2)|0\n  ndsort(ndarray(edges, [nedges,2])) \n  var ptr = 2\n  for(var i=2; i<ePtr; i+=2) {\n    if(edges[i-2] === edges[i] &&\n       edges[i-1] === edges[i+1]) {\n      continue\n    }\n    edges[ptr++] = edges[i]\n    edges[ptr++] = edges[i+1]\n  }\n\n  return ndarray(edges, [(ptr/2)|0, 2])\n}\n\nfunction getCrossingWeights(edges, values, signs, level) {\n  var edata     = edges.data\n  var numEdges  = edges.shape[0]\n  var weights   = pool.mallocDouble(numEdges)\n  var ptr       = 0\n  for(var i=0; i<numEdges; ++i) {\n    var a  = edata[2*i]\n    var b  = edata[2*i+1]\n    if(signs[a] === signs[b]) {\n      continue\n    }\n    var va = values[a]\n    var vb = values[b]\n    edata[2*ptr]     = a\n    edata[2*ptr+1]   = b\n    weights[ptr++]   = (vb - level) / (vb - va)\n  }\n  edges.shape[0] = ptr\n  return ndarray(weights, [ptr])\n}\n\nfunction getCascade(edges, numVerts) {\n  var result   = pool.mallocInt32(numVerts*2)\n  var numEdges = edges.shape[0]\n  var edata    = edges.data\n  result[0]    = 0\n  var lastV    = 0\n  for(var i=0; i<numEdges; ++i) {\n    var a = edata[2*i]\n    if(a !== lastV) {\n      result[2*lastV+1] = i\n      while(++lastV < a) {\n        result[2*lastV] = i\n        result[2*lastV+1] = i\n      }\n      result[2*lastV] = i\n    }\n  }\n  result[2*lastV+1] = numEdges\n  while(++lastV < numVerts) {\n    result[2*lastV] = result[2*lastV+1] = numEdges\n  }\n  return result\n}\n\nfunction unpackEdges(edges) {\n  var ne = edges.shape[0]|0\n  var edata = edges.data\n  var result = new Array(ne)\n  for(var i=0; i<ne; ++i) {\n    result[i] = [edata[2*i], edata[2*i+1]]\n  }\n  return result\n}\n\nfunction extractContour(cells, values, level, d) {\n  level = level||0.0\n\n  //If user didn't specify `d`, use brute force scan\n  if(typeof d === 'undefined') {\n    d = getDimension(cells)\n  }\n\n  //Count number of cells\n  var numCells = cells.length\n  if(numCells === 0 || d < 1) {\n    return {\n      cells:         [],\n      vertexIds:     [],\n      vertexWeights: []\n    }\n  }\n\n  //Read in vertex signs\n  var vertexSigns = getSigns(values, +level)\n\n  //First get 1-skeleton, find all crossings\n  var edges   = getEdges(cells, d)\n  var weights = getCrossingWeights(edges, values, vertexSigns, +level)\n\n  //Build vertex cascade to speed up binary search\n  var vcascade = getCascade(edges, values.length|0)\n\n  //Then construct cells\n  var faces = contourAlgorithm(d)(cells, edges.data, vcascade, vertexSigns)\n\n  //Unpack data into pretty format\n  var uedges   = unpackEdges(edges)\n  var uweights = [].slice.call(weights.data, 0, weights.shape[0])\n\n  //Release data\n  pool.free(vertexSigns)\n  pool.free(edges.data)\n  pool.free(weights.data)\n  pool.free(vcascade)\n  \n  return {\n    cells:         faces,\n    vertexIds:     uedges,\n    vertexWeights: uweights\n  }\n}","map":{"mappings":[{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules\\simplicial-complex-contour\\contour.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}}],"sources":{"node_modules\\simplicial-complex-contour\\contour.js":"'use strict'\n\nmodule.exports = extractContour\n\nvar ndarray = require('ndarray')\nvar pool    = require('typedarray-pool')\nvar ndsort  = require('ndarray-sort')\n\nvar contourAlgorithm = require('./lib/codegen')\n\nfunction getDimension(cells) {\n  var numCells = cells.length\n  var d = 0\n  for(var i=0; i<numCells; ++i) {\n    d = Math.max(d, cells[i].length)|0\n  }\n  return d-1\n}\n\nfunction getSigns(values, level) {\n  var numVerts    = values.length\n  var vertexSigns = pool.mallocUint8(numVerts)\n  for(var i=0; i<numVerts; ++i) {\n    vertexSigns[i] = (values[i] < level)|0\n  }\n  return vertexSigns\n}\n\nfunction getEdges(cells, d) {\n  var numCells = cells.length\n  var maxEdges = ((d * (d+1)/2) * numCells)|0\n  var edges    = pool.mallocUint32(maxEdges*2)\n  var ePtr     = 0\n  for(var i=0; i<numCells; ++i) {\n    var c = cells[i]\n    var d = c.length\n    for(var j=0; j<d; ++j) {\n      for(var k=0; k<j; ++k) {\n        var a = c[k]\n        var b = c[j]\n        edges[ePtr++] = Math.min(a,b)|0\n        edges[ePtr++] = Math.max(a,b)|0\n      }\n    }\n  }\n  var nedges = (ePtr/2)|0\n  ndsort(ndarray(edges, [nedges,2])) \n  var ptr = 2\n  for(var i=2; i<ePtr; i+=2) {\n    if(edges[i-2] === edges[i] &&\n       edges[i-1] === edges[i+1]) {\n      continue\n    }\n    edges[ptr++] = edges[i]\n    edges[ptr++] = edges[i+1]\n  }\n\n  return ndarray(edges, [(ptr/2)|0, 2])\n}\n\nfunction getCrossingWeights(edges, values, signs, level) {\n  var edata     = edges.data\n  var numEdges  = edges.shape[0]\n  var weights   = pool.mallocDouble(numEdges)\n  var ptr       = 0\n  for(var i=0; i<numEdges; ++i) {\n    var a  = edata[2*i]\n    var b  = edata[2*i+1]\n    if(signs[a] === signs[b]) {\n      continue\n    }\n    var va = values[a]\n    var vb = values[b]\n    edata[2*ptr]     = a\n    edata[2*ptr+1]   = b\n    weights[ptr++]   = (vb - level) / (vb - va)\n  }\n  edges.shape[0] = ptr\n  return ndarray(weights, [ptr])\n}\n\nfunction getCascade(edges, numVerts) {\n  var result   = pool.mallocInt32(numVerts*2)\n  var numEdges = edges.shape[0]\n  var edata    = edges.data\n  result[0]    = 0\n  var lastV    = 0\n  for(var i=0; i<numEdges; ++i) {\n    var a = edata[2*i]\n    if(a !== lastV) {\n      result[2*lastV+1] = i\n      while(++lastV < a) {\n        result[2*lastV] = i\n        result[2*lastV+1] = i\n      }\n      result[2*lastV] = i\n    }\n  }\n  result[2*lastV+1] = numEdges\n  while(++lastV < numVerts) {\n    result[2*lastV] = result[2*lastV+1] = numEdges\n  }\n  return result\n}\n\nfunction unpackEdges(edges) {\n  var ne = edges.shape[0]|0\n  var edata = edges.data\n  var result = new Array(ne)\n  for(var i=0; i<ne; ++i) {\n    result[i] = [edata[2*i], edata[2*i+1]]\n  }\n  return result\n}\n\nfunction extractContour(cells, values, level, d) {\n  level = level||0.0\n\n  //If user didn't specify `d`, use brute force scan\n  if(typeof d === 'undefined') {\n    d = getDimension(cells)\n  }\n\n  //Count number of cells\n  var numCells = cells.length\n  if(numCells === 0 || d < 1) {\n    return {\n      cells:         [],\n      vertexIds:     [],\n      vertexWeights: []\n    }\n  }\n\n  //Read in vertex signs\n  var vertexSigns = getSigns(values, +level)\n\n  //First get 1-skeleton, find all crossings\n  var edges   = getEdges(cells, d)\n  var weights = getCrossingWeights(edges, values, vertexSigns, +level)\n\n  //Build vertex cascade to speed up binary search\n  var vcascade = getCascade(edges, values.length|0)\n\n  //Then construct cells\n  var faces = contourAlgorithm(d)(cells, edges.data, vcascade, vertexSigns)\n\n  //Unpack data into pretty format\n  var uedges   = unpackEdges(edges)\n  var uweights = [].slice.call(weights.data, 0, weights.shape[0])\n\n  //Release data\n  pool.free(vertexSigns)\n  pool.free(edges.data)\n  pool.free(weights.data)\n  pool.free(vcascade)\n  \n  return {\n    cells:         faces,\n    vertexIds:     uedges,\n    vertexWeights: uweights\n  }\n}"},"lineCount":162}},"hash":"60bf9d57e89eaae70baf486204c2c1ae","cacheData":{"env":{}}}