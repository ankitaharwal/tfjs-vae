{"dependencies":[{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\package.json","includedInParent":true,"mtime":1528206326997},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\.babelrc","includedInParent":true,"mtime":1528197961732},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\gl-vec3\\package.json","includedInParent":true,"mtime":1524326065000}],"generated":{"js":"module.exports = transformQuat;\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nfunction transformQuat(out, a, q) {\n    // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx\n    return out\n}","map":{"mappings":[{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\gl-vec3\\transformQuat.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}}],"sources":{"node_modules\\gl-vec3\\transformQuat.js":"module.exports = transformQuat;\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nfunction transformQuat(out, a, q) {\n    // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx\n    return out\n}"},"lineCount":28}},"hash":"90cc70c5d1d21a204dac944e1ee36770","cacheData":{"env":{}}}