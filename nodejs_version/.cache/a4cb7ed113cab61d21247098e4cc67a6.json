{"dependencies":[{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\package.json","includedInParent":true,"mtime":1528206326997},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\.babelrc","includedInParent":true,"mtime":1528197961732},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\text-cache\\package.json","includedInParent":true,"mtime":1477321569000},{"name":"vectorize-text","loc":{"line":5,"column":28}},{"name":"process"}],"generated":{"js":"var process = require(\"process\");\n'use strict'\n\nmodule.exports = textGet\n\nvar vectorizeText = require('vectorize-text')\n\nvar globals = window || process.global || {}\nvar __TEXT_CACHE  = globals.__TEXT_CACHE || {}\nglobals.__TEXT_CACHE = {}\n\nfunction unwrap(mesh) {\n  var cells     = mesh.cells\n  var positions = mesh.positions\n  var data      = new Float32Array(cells.length * 6)\n  var ptr       = 0\n  var shapeX    = 0\n  for(var i=0; i<cells.length; ++i) {\n    var tri = cells[i]\n    for(var j=0; j<3; ++j) {\n      var point = positions[tri[j]]\n      data[ptr++] = point[0]\n      data[ptr++] = point[1] + 1.4\n      shapeX      = Math.max(point[0], shapeX)\n    }\n  }\n  return {\n    data:  data,\n    shape: shapeX\n  }\n}\n\nfunction textGet(font, text, opts) {\n  var opts = opts || {}\n  var fontcache = __TEXT_CACHE[font]\n   if(!fontcache) {\n     fontcache = __TEXT_CACHE[font] = {\n       ' ': {\n         data:   new Float32Array(0),\n         shape: 0.2\n       }\n     }\n   }\n   var mesh = fontcache[text]\n   if(!mesh) {\n     if(text.length <= 1 || !/\\d/.test(text)) {\n       mesh = fontcache[text] = unwrap(vectorizeText(text, {\n         triangles:     true,\n         font:          font,\n         textAlign:     opts.textAlign || 'left',\n         textBaseline:  'alphabetic'\n       }))\n     } else {\n       var parts = text.split(/(\\d|\\s)/)\n       var buffer = new Array(parts.length)\n       var bufferSize = 0\n       var shapeX = 0\n       for(var i=0; i<parts.length; ++i) {\n         buffer[i] = textGet(font, parts[i])\n         bufferSize += buffer[i].data.length\n         shapeX += buffer[i].shape\n         if(i>0) {\n           shapeX += 0.02\n         }\n       }\n\n       var data = new Float32Array(bufferSize)\n       var ptr     = 0\n       var xOffset = -0.5 * shapeX\n       for(var i=0; i<buffer.length; ++i) {\n         var bdata = buffer[i].data\n         for(var j=0; j<bdata.length; j+=2) {\n           data[ptr++] = bdata[j] + xOffset\n           data[ptr++] = bdata[j+1]\n         }\n         xOffset += buffer[i].shape + 0.02\n       }\n\n       mesh = fontcache[text] = {\n         data:  data,\n         shape: shapeX\n       }\n     }\n   }\n\n   return mesh\n}\n","map":{"mappings":[{"source":"node_modules\\text-cache\\textcache.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\text-cache\\textcache.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}}],"sources":{"node_modules\\text-cache\\textcache.js":"'use strict'\n\nmodule.exports = textGet\n\nvar vectorizeText = require('vectorize-text')\n\nvar globals = window || process.global || {}\nvar __TEXT_CACHE  = globals.__TEXT_CACHE || {}\nglobals.__TEXT_CACHE = {}\n\nfunction unwrap(mesh) {\n  var cells     = mesh.cells\n  var positions = mesh.positions\n  var data      = new Float32Array(cells.length * 6)\n  var ptr       = 0\n  var shapeX    = 0\n  for(var i=0; i<cells.length; ++i) {\n    var tri = cells[i]\n    for(var j=0; j<3; ++j) {\n      var point = positions[tri[j]]\n      data[ptr++] = point[0]\n      data[ptr++] = point[1] + 1.4\n      shapeX      = Math.max(point[0], shapeX)\n    }\n  }\n  return {\n    data:  data,\n    shape: shapeX\n  }\n}\n\nfunction textGet(font, text, opts) {\n  var opts = opts || {}\n  var fontcache = __TEXT_CACHE[font]\n   if(!fontcache) {\n     fontcache = __TEXT_CACHE[font] = {\n       ' ': {\n         data:   new Float32Array(0),\n         shape: 0.2\n       }\n     }\n   }\n   var mesh = fontcache[text]\n   if(!mesh) {\n     if(text.length <= 1 || !/\\d/.test(text)) {\n       mesh = fontcache[text] = unwrap(vectorizeText(text, {\n         triangles:     true,\n         font:          font,\n         textAlign:     opts.textAlign || 'left',\n         textBaseline:  'alphabetic'\n       }))\n     } else {\n       var parts = text.split(/(\\d|\\s)/)\n       var buffer = new Array(parts.length)\n       var bufferSize = 0\n       var shapeX = 0\n       for(var i=0; i<parts.length; ++i) {\n         buffer[i] = textGet(font, parts[i])\n         bufferSize += buffer[i].data.length\n         shapeX += buffer[i].shape\n         if(i>0) {\n           shapeX += 0.02\n         }\n       }\n\n       var data = new Float32Array(bufferSize)\n       var ptr     = 0\n       var xOffset = -0.5 * shapeX\n       for(var i=0; i<buffer.length; ++i) {\n         var bdata = buffer[i].data\n         for(var j=0; j<bdata.length; j+=2) {\n           data[ptr++] = bdata[j] + xOffset\n           data[ptr++] = bdata[j+1]\n         }\n         xOffset += buffer[i].shape + 0.02\n       }\n\n       mesh = fontcache[text] = {\n         data:  data,\n         shape: shapeX\n       }\n     }\n   }\n\n   return mesh\n}\n"},"lineCount":88}},"hash":"9d50507f85853d60afac727e3a3ac465","cacheData":{"env":{}}}