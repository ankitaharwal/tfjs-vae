{"dependencies":[{"name":"C:\\Users\\qison\\package.json","includedInParent":true,"mtime":1526331035212},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\gl-shader\\package.json","includedInParent":true,"mtime":1473263895000}],"generated":{"js":"'use strict'\n\nmodule.exports = makeReflectTypes\n\n//Construct type info for reflection.\n//\n// This iterates over the flattened list of uniform type values and smashes them into a JSON object.\n//\n// The leaves of the resulting object are either indices or type strings representing primitive glslify types\nfunction makeReflectTypes(uniforms, useIndex) {\n  var obj = {}\n  for(var i=0; i<uniforms.length; ++i) {\n    var n = uniforms[i].name\n    var parts = n.split(\".\")\n    var o = obj\n    for(var j=0; j<parts.length; ++j) {\n      var x = parts[j].split(\"[\")\n      if(x.length > 1) {\n        if(!(x[0] in o)) {\n          o[x[0]] = []\n        }\n        o = o[x[0]]\n        for(var k=1; k<x.length; ++k) {\n          var y = parseInt(x[k])\n          if(k<x.length-1 || j<parts.length-1) {\n            if(!(y in o)) {\n              if(k < x.length-1) {\n                o[y] = []\n              } else {\n                o[y] = {}\n              }\n            }\n            o = o[y]\n          } else {\n            if(useIndex) {\n              o[y] = i\n            } else {\n              o[y] = uniforms[i].type\n            }\n          }\n        }\n      } else if(j < parts.length-1) {\n        if(!(x[0] in o)) {\n          o[x[0]] = {}\n        }\n        o = o[x[0]]\n      } else {\n        if(useIndex) {\n          o[x[0]] = i\n        } else {\n          o[x[0]] = uniforms[i].type\n        }\n      }\n    }\n  }\n  return obj\n}","map":{"mappings":[{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}}],"sources":{"nodejs_version\\node_modules\\gl-shader\\lib\\reflect.js":"'use strict'\n\nmodule.exports = makeReflectTypes\n\n//Construct type info for reflection.\n//\n// This iterates over the flattened list of uniform type values and smashes them into a JSON object.\n//\n// The leaves of the resulting object are either indices or type strings representing primitive glslify types\nfunction makeReflectTypes(uniforms, useIndex) {\n  var obj = {}\n  for(var i=0; i<uniforms.length; ++i) {\n    var n = uniforms[i].name\n    var parts = n.split(\".\")\n    var o = obj\n    for(var j=0; j<parts.length; ++j) {\n      var x = parts[j].split(\"[\")\n      if(x.length > 1) {\n        if(!(x[0] in o)) {\n          o[x[0]] = []\n        }\n        o = o[x[0]]\n        for(var k=1; k<x.length; ++k) {\n          var y = parseInt(x[k])\n          if(k<x.length-1 || j<parts.length-1) {\n            if(!(y in o)) {\n              if(k < x.length-1) {\n                o[y] = []\n              } else {\n                o[y] = {}\n              }\n            }\n            o = o[y]\n          } else {\n            if(useIndex) {\n              o[y] = i\n            } else {\n              o[y] = uniforms[i].type\n            }\n          }\n        }\n      } else if(j < parts.length-1) {\n        if(!(x[0] in o)) {\n          o[x[0]] = {}\n        }\n        o = o[x[0]]\n      } else {\n        if(useIndex) {\n          o[x[0]] = i\n        } else {\n          o[x[0]] = uniforms[i].type\n        }\n      }\n    }\n  }\n  return obj\n}"},"lineCount":57}},"hash":"67ba1219931bc1eac4bf272451b983c1","cacheData":{"env":{}}}