{"dependencies":[{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\package.json","includedInParent":true,"mtime":1528206326997},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\.babelrc","includedInParent":true,"mtime":1528197961732},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\plotly.js\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./constants","loc":{"line":11,"column":16}},{"name":"d3","loc":{"line":12,"column":17}},{"name":"../../lib/gup","loc":{"line":14,"column":21}},{"name":"../../lib","loc":{"line":15,"column":22}}],"generated":{"js":"/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar c = require('./constants');\nvar d3 = require('d3');\nvar keyFun = require('../../lib/gup').keyFun;\nvar repeat = require('../../lib/gup').repeat;\nvar sortAsc = require('../../lib').sorterAsc;\n\nvar snapRatio = c.bar.snapRatio;\nfunction snapOvershoot(v, vAdjacent) { return v * (1 - snapRatio) + vAdjacent * snapRatio; }\n\nvar snapClose = c.bar.snapClose;\nfunction closeToCovering(v, vAdjacent) { return v * (1 - snapClose) + vAdjacent * snapClose; }\n\n// snap for the low end of a range on an ordinal scale\n// on an ordinal scale, always show some overshoot from the exact value,\n// so it's clear we're covering it\n// find the interval we're in, and snap to 1/4 the distance to the next\n// these two could be unified at a slight loss of readability / perf\nfunction ordinalScaleSnapLo(a, v, existingRanges) {\n    if(overlappingExisting(v, existingRanges)) return v;\n\n    var aPrev = a[0];\n    var aPrevPrev = aPrev;\n    for(var i = 1; i < a.length; i++) {\n        var aNext = a[i];\n\n        // very close to the previous - snap down to it\n        if(v < closeToCovering(aPrev, aNext)) return snapOvershoot(aPrev, aPrevPrev);\n        if(v < aNext || i === a.length - 1) return snapOvershoot(aNext, aPrev);\n\n        aPrevPrev = aPrev;\n        aPrev = aNext;\n    }\n}\n\nfunction ordinalScaleSnapHi(a, v, existingRanges) {\n    if(overlappingExisting(v, existingRanges)) return v;\n\n    var aPrev = a[a.length - 1];\n    var aPrevPrev = aPrev;\n    for(var i = a.length - 2; i >= 0; i--) {\n        var aNext = a[i];\n\n        // very close to the previous - snap down to it\n        if(v > closeToCovering(aPrev, aNext)) return snapOvershoot(aPrev, aPrevPrev);\n        if(v > aNext || i === a.length - 1) return snapOvershoot(aNext, aPrev);\n\n        aPrevPrev = aPrev;\n        aPrev = aNext;\n    }\n}\n\nfunction overlappingExisting(v, existingRanges) {\n    for(var i = 0; i < existingRanges.length; i++) {\n        if(v >= existingRanges[i][0] && v <= existingRanges[i][1]) return true;\n    }\n    return false;\n}\n\nfunction barHorizontalSetup(selection) {\n    selection\n        .attr('x', -c.bar.captureWidth / 2)\n        .attr('width', c.bar.captureWidth);\n}\n\nfunction backgroundBarHorizontalSetup(selection) {\n    selection\n        .attr('visibility', 'visible')\n        .style('visibility', 'visible')\n        .attr('fill', 'yellow')\n        .attr('opacity', 0);\n}\n\nfunction setHighlight(d) {\n    if(!d.brush.filterSpecified) {\n        return '0,' + d.height;\n    }\n    var pixelRanges = unitToPx(d.brush.filter.getConsolidated(), d.height);\n    var dashArray = [0]; // we start with a 0 length selection as filter ranges are inclusive, not exclusive\n    var p, sectionHeight, iNext;\n    var currentGap = pixelRanges.length ? pixelRanges[0][0] : null;\n    for(var i = 0; i < pixelRanges.length; i++) {\n        p = pixelRanges[i];\n        sectionHeight = p[1] - p[0];\n        dashArray.push(currentGap);\n        dashArray.push(sectionHeight);\n        iNext = i + 1;\n        if(iNext < pixelRanges.length) {\n            currentGap = pixelRanges[iNext][0] - p[1];\n        }\n    }\n    dashArray.push(d.height);\n    // d.height is added at the end to ensure that (1) we have an even number of dasharray points, MDN page says\n    // \"If an odd number of values is provided, then the list of values is repeated to yield an even number of values.\"\n    // and (2) it's _at least_ as long as the full height (even if range is minuscule and at the bottom) though this\n    // may not be necessary, maybe duplicating the last point would do too. But no harm in a longer dasharray than line.\n    return dashArray;\n}\n\nfunction unitToPx(unitRanges, height) {\n    return unitRanges.map(function(pr) {\n        return pr.map(function(v) { return v * height; }).sort(sortAsc);\n    });\n}\n\n// is the cursor over the north, middle, or south of a bar?\n// the end handles extend over the last 10% of the bar\nfunction getRegion(fPix, y) {\n    var pad = c.bar.handleHeight;\n    if(y > fPix[1] + pad || y < fPix[0] - pad) return;\n    if(y >= 0.9 * fPix[1] + 0.1 * fPix[0]) return 'n';\n    if(y <= 0.9 * fPix[0] + 0.1 * fPix[1]) return 's';\n    return 'ns';\n}\n\nfunction clearCursor() {\n    d3.select(document.body)\n        .style('cursor', null);\n}\n\nfunction styleHighlight(selection) {\n    // stroke-dasharray is used to minimize the number of created DOM nodes, because the requirement calls for up to\n    // 1000 individual selections on an axis, and there can be 60 axes per parcoords, and multiple parcoords per\n    // dashboard. The technique is similar to https://codepen.io/monfera/pen/rLYqWR and using a `polyline` with\n    // multiple sections, or a `path` element via its `d` attribute would also be DOM-sparing alternatives.\n    selection.attr('stroke-dasharray', setHighlight);\n}\n\nfunction renderHighlight(root, tweenCallback) {\n    var bar = d3.select(root).selectAll('.highlight, .highlight-shadow');\n    var barToStyle = tweenCallback ? bar.transition().duration(c.bar.snapDuration).each('end', tweenCallback) : bar;\n    styleHighlight(barToStyle);\n}\n\nfunction getInterval(d, y) {\n    var b = d.brush;\n    var active = b.filterSpecified;\n    var closestInterval = NaN;\n    var out = {};\n    var i;\n\n    if(active) {\n        var height = d.height;\n        var intervals = b.filter.getConsolidated();\n        var pixIntervals = unitToPx(intervals, height);\n        var hoveredInterval = NaN;\n        var previousInterval = NaN;\n        var nextInterval = NaN;\n        for(i = 0; i <= pixIntervals.length; i++) {\n            var p = pixIntervals[i];\n            if(p && p[0] <= y && y <= p[1]) {\n                // over a bar\n                hoveredInterval = i;\n                break;\n            } else {\n                // between bars, or before/after the first/last bar\n                previousInterval = i ? i - 1 : NaN;\n                if(p && p[0] > y) {\n                    nextInterval = i;\n                    break; // no point continuing as intervals are non-overlapping and sorted; could use log search\n                }\n            }\n        }\n\n        closestInterval = hoveredInterval;\n        if(isNaN(closestInterval)) {\n            if(isNaN(previousInterval) || isNaN(nextInterval)) {\n                closestInterval = isNaN(previousInterval) ? nextInterval : previousInterval;\n            }\n            else {\n                closestInterval = (y - pixIntervals[previousInterval][1] < pixIntervals[nextInterval][0] - y) ?\n                    previousInterval : nextInterval;\n            }\n        }\n\n        if(!isNaN(closestInterval)) {\n            var fPix = pixIntervals[closestInterval];\n            var region = getRegion(fPix, y);\n\n            if(region) {\n                out.interval = intervals[closestInterval];\n                out.intervalPix = fPix;\n                out.region = region;\n            }\n        }\n    }\n\n    if(d.ordinal && !out.region) {\n        var a = d.unitTickvals;\n        var unitLocation = d.unitToPaddedPx.invert(y);\n        for(i = 0; i < a.length; i++) {\n            var rangei = [\n                a[Math.max(i - 1, 0)] * 0.25 + a[i] * 0.75,\n                a[Math.min(i + 1, a.length - 1)] * 0.25 + a[i] * 0.75\n            ];\n            if(unitLocation >= rangei[0] && unitLocation <= rangei[1]) {\n                out.clickableOrdinalRange = rangei;\n                break;\n            }\n        }\n    }\n\n    return out;\n}\n\nfunction attachDragBehavior(selection) {\n    // There's some fiddling with pointer cursor styling so that the cursor preserves its shape while dragging a brush\n    // even if the cursor strays from the interacting bar, which is bound to happen as bars are thin and the user\n    // will inevitably leave the hotspot strip. In this regard, it does something similar to what the D3 brush would do.\n    selection\n        .on('mousemove', function(d) {\n            d3.event.preventDefault();\n            if(!d.parent.inBrushDrag) {\n                var y = d.height - d3.mouse(this)[1] - 2 * c.verticalPadding;\n                var interval = getInterval(d, y);\n\n                var cursor = 'crosshair';\n                if(interval.clickableOrdinalRange) cursor = 'pointer';\n                else if(interval.region) cursor = interval.region + '-resize';\n                d3.select(document.body)\n                    .style('cursor', cursor);\n            }\n        })\n        .on('mouseleave', function(d) {\n            if(!d.parent.inBrushDrag) clearCursor();\n        })\n        .call(d3.behavior.drag()\n            .on('dragstart', function(d) {\n                d3.event.sourceEvent.stopPropagation();\n                var y = d.height - d3.mouse(this)[1] - 2 * c.verticalPadding;\n                var unitLocation = d.unitToPaddedPx.invert(y);\n                var b = d.brush;\n                var interval = getInterval(d, y);\n                var unitRange = interval.interval;\n                var s = b.svgBrush;\n                s.wasDragged = false; // we start assuming there won't be a drag - useful for reset\n                s.grabbingBar = interval.region === 'ns';\n                if(s.grabbingBar) {\n                    var pixelRange = unitRange.map(d.unitToPaddedPx);\n                    s.grabPoint = y - pixelRange[0] - c.verticalPadding;\n                    s.barLength = pixelRange[1] - pixelRange[0];\n                }\n                s.clickableOrdinalRange = interval.clickableOrdinalRange;\n                s.stayingIntervals = (d.multiselect && b.filterSpecified) ? b.filter.getConsolidated() : [];\n                if(unitRange) {\n                    s.stayingIntervals = s.stayingIntervals.filter(function(int2) {\n                        return int2[0] !== unitRange[0] && int2[1] !== unitRange[1];\n                    });\n                }\n                s.startExtent = interval.region ? unitRange[interval.region === 's' ? 1 : 0] : unitLocation;\n                d.parent.inBrushDrag = true;\n                s.brushStartCallback();\n            })\n            .on('drag', function(d) {\n                d3.event.sourceEvent.stopPropagation();\n                var y = d.height - d3.mouse(this)[1] - 2 * c.verticalPadding;\n                var s = d.brush.svgBrush;\n                s.wasDragged = true;\n\n                if(s.grabbingBar) { // moving the bar\n                    s.newExtent = [y - s.grabPoint, y + s.barLength - s.grabPoint].map(d.unitToPaddedPx.invert);\n                } else { // south/north drag or new bar creation\n                    s.newExtent = [s.startExtent, d.unitToPaddedPx.invert(y)].sort(sortAsc);\n                }\n\n                // take care of the parcoords axis height constraint: bar can't breach it\n                var bottomViolation = Math.max(0, -s.newExtent[0]);\n                var topViolation = Math.max(0, s.newExtent[1] - 1);\n                s.newExtent[0] += bottomViolation;\n                s.newExtent[1] -= topViolation;\n                if(s.grabbingBar) {\n                    // in case of bar dragging (non-resizing interaction, unlike north/south resize or new bar creation)\n                    // the constraint adjustment must apply to the other end of the bar as well, otherwise it'd\n                    // shorten or lengthen\n                    s.newExtent[1] += bottomViolation;\n                    s.newExtent[0] -= topViolation;\n                }\n\n                d.brush.filterSpecified = true;\n                s.extent = s.stayingIntervals.concat([s.newExtent]);\n                s.brushCallback(d);\n                renderHighlight(this.parentNode);\n            })\n            .on('dragend', function(d) {\n                var e = d3.event;\n                e.sourceEvent.stopPropagation();\n                var brush = d.brush;\n                var filter = brush.filter;\n                var s = brush.svgBrush;\n                var grabbingBar = s.grabbingBar;\n                s.grabbingBar = false;\n                s.grabLocation = undefined;\n                d.parent.inBrushDrag = false;\n                clearCursor(); // instead of clearing, a nicer thing would be to set it according to current location\n                if(!s.wasDragged) { // a click+release on the same spot (ie. w/o dragging) means a bar or full reset\n                    s.wasDragged = undefined; // logic-wise unneeded, just shows `wasDragged` has no longer a meaning\n                    if(s.clickableOrdinalRange) {\n                        if(brush.filterSpecified && d.multiselect) {\n                            s.extent.push(s.clickableOrdinalRange);\n                        }\n                        else {\n                            s.extent = [s.clickableOrdinalRange];\n                            brush.filterSpecified = true;\n                        }\n                    }\n                    else if(grabbingBar) {\n                        s.extent = s.stayingIntervals;\n                        if(s.extent.length === 0) {\n                            brushClear(brush);\n                        }\n                    } else {\n                        brushClear(brush);\n                    }\n                    s.brushCallback(d);\n                    renderHighlight(this.parentNode);\n                    s.brushEndCallback(brush.filterSpecified ? filter.getConsolidated() : []);\n                    return; // no need to fuse intervals or snap to ordinals, so we can bail early\n                }\n\n                var mergeIntervals = function() {\n                    // Key piece of logic: once the button is released, possibly overlapping intervals will be fused:\n                    // Here it's done immediately on click release while on ordinal snap transition it's done at the end\n                    filter.set(filter.getConsolidated());\n                };\n\n                if(d.ordinal) {\n                    var a = d.unitTickvals;\n                    if(a[a.length - 1] < a[0]) a.reverse();\n                    s.newExtent = [\n                        ordinalScaleSnapLo(a, s.newExtent[0], s.stayingIntervals),\n                        ordinalScaleSnapHi(a, s.newExtent[1], s.stayingIntervals)\n                    ];\n                    var hasNewExtent = s.newExtent[1] > s.newExtent[0];\n                    s.extent = s.stayingIntervals.concat(hasNewExtent ? [s.newExtent] : []);\n                    if(!s.extent.length) {\n                        brushClear(brush);\n                    }\n                    s.brushCallback(d);\n                    if(hasNewExtent) {\n                        // merging intervals post the snap tween\n                        renderHighlight(this.parentNode, mergeIntervals);\n                    }\n                    else {\n                        // if no new interval, don't animate, just redraw the highlight immediately\n                        mergeIntervals();\n                        renderHighlight(this.parentNode);\n                    }\n                } else {\n                    mergeIntervals(); // merging intervals immediately\n                }\n                s.brushEndCallback(brush.filterSpecified ? filter.getConsolidated() : []);\n            })\n        );\n}\n\nfunction startAsc(a, b) { return a[0] - b[0]; }\n\nfunction renderAxisBrush(axisBrush) {\n\n    var background = axisBrush.selectAll('.background').data(repeat);\n\n    background.enter()\n        .append('rect')\n        .classed('background', true)\n        .call(barHorizontalSetup)\n        .call(backgroundBarHorizontalSetup)\n        .style('pointer-events', 'auto') // parent pointer events are disabled; we must have it to register events\n        .attr('transform', 'translate(0 ' + c.verticalPadding + ')');\n\n    background\n        .call(attachDragBehavior)\n        .attr('height', function(d) {\n            return d.height - c.verticalPadding;\n        });\n\n    var highlightShadow = axisBrush.selectAll('.highlight-shadow').data(repeat); // we have a set here, can't call it `extent`\n\n    highlightShadow.enter()\n        .append('line')\n        .classed('highlight-shadow', true)\n        .attr('x', -c.bar.width / 2)\n        .attr('stroke-width', c.bar.width + c.bar.strokeWidth)\n        .attr('stroke', c.bar.strokeColor)\n        .attr('opacity', c.bar.strokeOpacity)\n        .attr('stroke-linecap', 'butt');\n\n    highlightShadow\n        .attr('y1', function(d) { return d.height; })\n        .call(styleHighlight);\n\n    var highlight = axisBrush.selectAll('.highlight').data(repeat); // we have a set here, can't call it `extent`\n\n    highlight.enter()\n        .append('line')\n        .classed('highlight', true)\n        .attr('x', -c.bar.width / 2)\n        .attr('stroke-width', c.bar.width - c.bar.strokeWidth)\n        .attr('stroke', c.bar.fillColor)\n        .attr('opacity', c.bar.fillOpacity)\n        .attr('stroke-linecap', 'butt');\n\n    highlight\n        .attr('y1', function(d) { return d.height; })\n        .call(styleHighlight);\n}\n\nfunction ensureAxisBrush(axisOverlays) {\n    var axisBrush = axisOverlays.selectAll('.' + c.cn.axisBrush)\n        .data(repeat, keyFun);\n\n    axisBrush.enter()\n        .append('g')\n        .classed(c.cn.axisBrush, true);\n\n    renderAxisBrush(axisBrush);\n}\n\nfunction getBrushExtent(brush) {\n    return brush.svgBrush.extent.map(function(e) {return e.slice();});\n}\n\nfunction brushClear(brush) {\n    brush.filterSpecified = false;\n    brush.svgBrush.extent = [[0, 1]];\n}\n\nfunction axisBrushMoved(callback) {\n    return function axisBrushMoved(dimension) {\n        var brush = dimension.brush;\n        var extent = getBrushExtent(brush);\n        var newExtent = extent.slice();\n        brush.filter.set(newExtent);\n        callback();\n    };\n}\n\nfunction dedupeRealRanges(intervals) {\n    // Fuses elements of intervals if they overlap, yielding discontiguous intervals, results.length <= intervals.length\n    // Currently uses closed intervals, ie. dedupeRealRanges([[400, 800], [300, 400]]) -> [300, 800]\n    var queue = intervals.slice();\n    var result = [];\n    var currentInterval;\n    var current = queue.shift();\n    while(current) { // [].shift === undefined, so we don't descend into an empty array\n        currentInterval = current.slice();\n        while((current = queue.shift()) && current[0] <= /* right-open interval would need `<` */ currentInterval[1]) {\n            currentInterval[1] = Math.max(currentInterval[1], current[1]);\n        }\n        result.push(currentInterval);\n    }\n    return result;\n}\n\nfunction makeFilter() {\n    var filter = [];\n    var consolidated;\n    var bounds;\n    return {\n        set: function(a) {\n            filter = a\n                .map(function(d) { return d.slice().sort(sortAsc); })\n                .sort(startAsc);\n            consolidated = dedupeRealRanges(filter);\n            bounds = filter.reduce(function(p, n) {\n                return [Math.min(p[0], n[0]), Math.max(p[1], n[1])];\n            }, [Infinity, -Infinity]);\n        },\n        get: function() { return filter.slice(); },\n        getConsolidated: function() { return consolidated; },\n        getBounds: function() { return bounds; }\n    };\n}\n\nfunction makeBrush(state, rangeSpecified, initialRange, brushStartCallback, brushCallback, brushEndCallback) {\n    var filter = makeFilter();\n    filter.set(initialRange);\n    return {\n        filter: filter,\n        filterSpecified: rangeSpecified, // there's a difference between not filtering and filtering a non-proper subset\n        svgBrush: {\n            extent: [], // this is where the svgBrush writes contents into\n            brushStartCallback: brushStartCallback,\n            brushCallback: axisBrushMoved(brushCallback),\n            brushEndCallback: brushEndCallback\n        }\n    };\n}\n\n// for use by supplyDefaults, but it needed tons of pieces from here so\n// seemed to make more sense just to put the whole routine here\nfunction cleanRanges(ranges, dimension) {\n    if(Array.isArray(ranges[0])) {\n        ranges = ranges.map(function(ri) { return ri.sort(sortAsc); });\n\n        if(!dimension.multiselect) ranges = [ranges[0]];\n        else ranges = dedupeRealRanges(ranges.sort(startAsc));\n    }\n    else ranges = [ranges.sort(sortAsc)];\n\n    // ordinal snapping\n    if(dimension.tickvals) {\n        var sortedTickVals = dimension.tickvals.slice().sort(sortAsc);\n        ranges = ranges.map(function(ri) {\n            var rSnapped = [\n                ordinalScaleSnapLo(sortedTickVals, ri[0], []),\n                ordinalScaleSnapHi(sortedTickVals, ri[1], [])\n            ];\n            if(rSnapped[1] > rSnapped[0]) return rSnapped;\n        })\n        .filter(function(ri) { return ri; });\n\n        if(!ranges.length) return;\n    }\n    return ranges.length > 1 ? ranges : ranges[0];\n}\n\nmodule.exports = {\n    makeBrush: makeBrush,\n    ensureAxisBrush: ensureAxisBrush,\n    cleanRanges: cleanRanges\n};\n","map":{"mappings":[{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}}],"sources":{"node_modules\\plotly.js\\src\\traces\\parcoords\\axisbrush.js":"/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar c = require('./constants');\nvar d3 = require('d3');\nvar keyFun = require('../../lib/gup').keyFun;\nvar repeat = require('../../lib/gup').repeat;\nvar sortAsc = require('../../lib').sorterAsc;\n\nvar snapRatio = c.bar.snapRatio;\nfunction snapOvershoot(v, vAdjacent) { return v * (1 - snapRatio) + vAdjacent * snapRatio; }\n\nvar snapClose = c.bar.snapClose;\nfunction closeToCovering(v, vAdjacent) { return v * (1 - snapClose) + vAdjacent * snapClose; }\n\n// snap for the low end of a range on an ordinal scale\n// on an ordinal scale, always show some overshoot from the exact value,\n// so it's clear we're covering it\n// find the interval we're in, and snap to 1/4 the distance to the next\n// these two could be unified at a slight loss of readability / perf\nfunction ordinalScaleSnapLo(a, v, existingRanges) {\n    if(overlappingExisting(v, existingRanges)) return v;\n\n    var aPrev = a[0];\n    var aPrevPrev = aPrev;\n    for(var i = 1; i < a.length; i++) {\n        var aNext = a[i];\n\n        // very close to the previous - snap down to it\n        if(v < closeToCovering(aPrev, aNext)) return snapOvershoot(aPrev, aPrevPrev);\n        if(v < aNext || i === a.length - 1) return snapOvershoot(aNext, aPrev);\n\n        aPrevPrev = aPrev;\n        aPrev = aNext;\n    }\n}\n\nfunction ordinalScaleSnapHi(a, v, existingRanges) {\n    if(overlappingExisting(v, existingRanges)) return v;\n\n    var aPrev = a[a.length - 1];\n    var aPrevPrev = aPrev;\n    for(var i = a.length - 2; i >= 0; i--) {\n        var aNext = a[i];\n\n        // very close to the previous - snap down to it\n        if(v > closeToCovering(aPrev, aNext)) return snapOvershoot(aPrev, aPrevPrev);\n        if(v > aNext || i === a.length - 1) return snapOvershoot(aNext, aPrev);\n\n        aPrevPrev = aPrev;\n        aPrev = aNext;\n    }\n}\n\nfunction overlappingExisting(v, existingRanges) {\n    for(var i = 0; i < existingRanges.length; i++) {\n        if(v >= existingRanges[i][0] && v <= existingRanges[i][1]) return true;\n    }\n    return false;\n}\n\nfunction barHorizontalSetup(selection) {\n    selection\n        .attr('x', -c.bar.captureWidth / 2)\n        .attr('width', c.bar.captureWidth);\n}\n\nfunction backgroundBarHorizontalSetup(selection) {\n    selection\n        .attr('visibility', 'visible')\n        .style('visibility', 'visible')\n        .attr('fill', 'yellow')\n        .attr('opacity', 0);\n}\n\nfunction setHighlight(d) {\n    if(!d.brush.filterSpecified) {\n        return '0,' + d.height;\n    }\n    var pixelRanges = unitToPx(d.brush.filter.getConsolidated(), d.height);\n    var dashArray = [0]; // we start with a 0 length selection as filter ranges are inclusive, not exclusive\n    var p, sectionHeight, iNext;\n    var currentGap = pixelRanges.length ? pixelRanges[0][0] : null;\n    for(var i = 0; i < pixelRanges.length; i++) {\n        p = pixelRanges[i];\n        sectionHeight = p[1] - p[0];\n        dashArray.push(currentGap);\n        dashArray.push(sectionHeight);\n        iNext = i + 1;\n        if(iNext < pixelRanges.length) {\n            currentGap = pixelRanges[iNext][0] - p[1];\n        }\n    }\n    dashArray.push(d.height);\n    // d.height is added at the end to ensure that (1) we have an even number of dasharray points, MDN page says\n    // \"If an odd number of values is provided, then the list of values is repeated to yield an even number of values.\"\n    // and (2) it's _at least_ as long as the full height (even if range is minuscule and at the bottom) though this\n    // may not be necessary, maybe duplicating the last point would do too. But no harm in a longer dasharray than line.\n    return dashArray;\n}\n\nfunction unitToPx(unitRanges, height) {\n    return unitRanges.map(function(pr) {\n        return pr.map(function(v) { return v * height; }).sort(sortAsc);\n    });\n}\n\n// is the cursor over the north, middle, or south of a bar?\n// the end handles extend over the last 10% of the bar\nfunction getRegion(fPix, y) {\n    var pad = c.bar.handleHeight;\n    if(y > fPix[1] + pad || y < fPix[0] - pad) return;\n    if(y >= 0.9 * fPix[1] + 0.1 * fPix[0]) return 'n';\n    if(y <= 0.9 * fPix[0] + 0.1 * fPix[1]) return 's';\n    return 'ns';\n}\n\nfunction clearCursor() {\n    d3.select(document.body)\n        .style('cursor', null);\n}\n\nfunction styleHighlight(selection) {\n    // stroke-dasharray is used to minimize the number of created DOM nodes, because the requirement calls for up to\n    // 1000 individual selections on an axis, and there can be 60 axes per parcoords, and multiple parcoords per\n    // dashboard. The technique is similar to https://codepen.io/monfera/pen/rLYqWR and using a `polyline` with\n    // multiple sections, or a `path` element via its `d` attribute would also be DOM-sparing alternatives.\n    selection.attr('stroke-dasharray', setHighlight);\n}\n\nfunction renderHighlight(root, tweenCallback) {\n    var bar = d3.select(root).selectAll('.highlight, .highlight-shadow');\n    var barToStyle = tweenCallback ? bar.transition().duration(c.bar.snapDuration).each('end', tweenCallback) : bar;\n    styleHighlight(barToStyle);\n}\n\nfunction getInterval(d, y) {\n    var b = d.brush;\n    var active = b.filterSpecified;\n    var closestInterval = NaN;\n    var out = {};\n    var i;\n\n    if(active) {\n        var height = d.height;\n        var intervals = b.filter.getConsolidated();\n        var pixIntervals = unitToPx(intervals, height);\n        var hoveredInterval = NaN;\n        var previousInterval = NaN;\n        var nextInterval = NaN;\n        for(i = 0; i <= pixIntervals.length; i++) {\n            var p = pixIntervals[i];\n            if(p && p[0] <= y && y <= p[1]) {\n                // over a bar\n                hoveredInterval = i;\n                break;\n            } else {\n                // between bars, or before/after the first/last bar\n                previousInterval = i ? i - 1 : NaN;\n                if(p && p[0] > y) {\n                    nextInterval = i;\n                    break; // no point continuing as intervals are non-overlapping and sorted; could use log search\n                }\n            }\n        }\n\n        closestInterval = hoveredInterval;\n        if(isNaN(closestInterval)) {\n            if(isNaN(previousInterval) || isNaN(nextInterval)) {\n                closestInterval = isNaN(previousInterval) ? nextInterval : previousInterval;\n            }\n            else {\n                closestInterval = (y - pixIntervals[previousInterval][1] < pixIntervals[nextInterval][0] - y) ?\n                    previousInterval : nextInterval;\n            }\n        }\n\n        if(!isNaN(closestInterval)) {\n            var fPix = pixIntervals[closestInterval];\n            var region = getRegion(fPix, y);\n\n            if(region) {\n                out.interval = intervals[closestInterval];\n                out.intervalPix = fPix;\n                out.region = region;\n            }\n        }\n    }\n\n    if(d.ordinal && !out.region) {\n        var a = d.unitTickvals;\n        var unitLocation = d.unitToPaddedPx.invert(y);\n        for(i = 0; i < a.length; i++) {\n            var rangei = [\n                a[Math.max(i - 1, 0)] * 0.25 + a[i] * 0.75,\n                a[Math.min(i + 1, a.length - 1)] * 0.25 + a[i] * 0.75\n            ];\n            if(unitLocation >= rangei[0] && unitLocation <= rangei[1]) {\n                out.clickableOrdinalRange = rangei;\n                break;\n            }\n        }\n    }\n\n    return out;\n}\n\nfunction attachDragBehavior(selection) {\n    // There's some fiddling with pointer cursor styling so that the cursor preserves its shape while dragging a brush\n    // even if the cursor strays from the interacting bar, which is bound to happen as bars are thin and the user\n    // will inevitably leave the hotspot strip. In this regard, it does something similar to what the D3 brush would do.\n    selection\n        .on('mousemove', function(d) {\n            d3.event.preventDefault();\n            if(!d.parent.inBrushDrag) {\n                var y = d.height - d3.mouse(this)[1] - 2 * c.verticalPadding;\n                var interval = getInterval(d, y);\n\n                var cursor = 'crosshair';\n                if(interval.clickableOrdinalRange) cursor = 'pointer';\n                else if(interval.region) cursor = interval.region + '-resize';\n                d3.select(document.body)\n                    .style('cursor', cursor);\n            }\n        })\n        .on('mouseleave', function(d) {\n            if(!d.parent.inBrushDrag) clearCursor();\n        })\n        .call(d3.behavior.drag()\n            .on('dragstart', function(d) {\n                d3.event.sourceEvent.stopPropagation();\n                var y = d.height - d3.mouse(this)[1] - 2 * c.verticalPadding;\n                var unitLocation = d.unitToPaddedPx.invert(y);\n                var b = d.brush;\n                var interval = getInterval(d, y);\n                var unitRange = interval.interval;\n                var s = b.svgBrush;\n                s.wasDragged = false; // we start assuming there won't be a drag - useful for reset\n                s.grabbingBar = interval.region === 'ns';\n                if(s.grabbingBar) {\n                    var pixelRange = unitRange.map(d.unitToPaddedPx);\n                    s.grabPoint = y - pixelRange[0] - c.verticalPadding;\n                    s.barLength = pixelRange[1] - pixelRange[0];\n                }\n                s.clickableOrdinalRange = interval.clickableOrdinalRange;\n                s.stayingIntervals = (d.multiselect && b.filterSpecified) ? b.filter.getConsolidated() : [];\n                if(unitRange) {\n                    s.stayingIntervals = s.stayingIntervals.filter(function(int2) {\n                        return int2[0] !== unitRange[0] && int2[1] !== unitRange[1];\n                    });\n                }\n                s.startExtent = interval.region ? unitRange[interval.region === 's' ? 1 : 0] : unitLocation;\n                d.parent.inBrushDrag = true;\n                s.brushStartCallback();\n            })\n            .on('drag', function(d) {\n                d3.event.sourceEvent.stopPropagation();\n                var y = d.height - d3.mouse(this)[1] - 2 * c.verticalPadding;\n                var s = d.brush.svgBrush;\n                s.wasDragged = true;\n\n                if(s.grabbingBar) { // moving the bar\n                    s.newExtent = [y - s.grabPoint, y + s.barLength - s.grabPoint].map(d.unitToPaddedPx.invert);\n                } else { // south/north drag or new bar creation\n                    s.newExtent = [s.startExtent, d.unitToPaddedPx.invert(y)].sort(sortAsc);\n                }\n\n                // take care of the parcoords axis height constraint: bar can't breach it\n                var bottomViolation = Math.max(0, -s.newExtent[0]);\n                var topViolation = Math.max(0, s.newExtent[1] - 1);\n                s.newExtent[0] += bottomViolation;\n                s.newExtent[1] -= topViolation;\n                if(s.grabbingBar) {\n                    // in case of bar dragging (non-resizing interaction, unlike north/south resize or new bar creation)\n                    // the constraint adjustment must apply to the other end of the bar as well, otherwise it'd\n                    // shorten or lengthen\n                    s.newExtent[1] += bottomViolation;\n                    s.newExtent[0] -= topViolation;\n                }\n\n                d.brush.filterSpecified = true;\n                s.extent = s.stayingIntervals.concat([s.newExtent]);\n                s.brushCallback(d);\n                renderHighlight(this.parentNode);\n            })\n            .on('dragend', function(d) {\n                var e = d3.event;\n                e.sourceEvent.stopPropagation();\n                var brush = d.brush;\n                var filter = brush.filter;\n                var s = brush.svgBrush;\n                var grabbingBar = s.grabbingBar;\n                s.grabbingBar = false;\n                s.grabLocation = undefined;\n                d.parent.inBrushDrag = false;\n                clearCursor(); // instead of clearing, a nicer thing would be to set it according to current location\n                if(!s.wasDragged) { // a click+release on the same spot (ie. w/o dragging) means a bar or full reset\n                    s.wasDragged = undefined; // logic-wise unneeded, just shows `wasDragged` has no longer a meaning\n                    if(s.clickableOrdinalRange) {\n                        if(brush.filterSpecified && d.multiselect) {\n                            s.extent.push(s.clickableOrdinalRange);\n                        }\n                        else {\n                            s.extent = [s.clickableOrdinalRange];\n                            brush.filterSpecified = true;\n                        }\n                    }\n                    else if(grabbingBar) {\n                        s.extent = s.stayingIntervals;\n                        if(s.extent.length === 0) {\n                            brushClear(brush);\n                        }\n                    } else {\n                        brushClear(brush);\n                    }\n                    s.brushCallback(d);\n                    renderHighlight(this.parentNode);\n                    s.brushEndCallback(brush.filterSpecified ? filter.getConsolidated() : []);\n                    return; // no need to fuse intervals or snap to ordinals, so we can bail early\n                }\n\n                var mergeIntervals = function() {\n                    // Key piece of logic: once the button is released, possibly overlapping intervals will be fused:\n                    // Here it's done immediately on click release while on ordinal snap transition it's done at the end\n                    filter.set(filter.getConsolidated());\n                };\n\n                if(d.ordinal) {\n                    var a = d.unitTickvals;\n                    if(a[a.length - 1] < a[0]) a.reverse();\n                    s.newExtent = [\n                        ordinalScaleSnapLo(a, s.newExtent[0], s.stayingIntervals),\n                        ordinalScaleSnapHi(a, s.newExtent[1], s.stayingIntervals)\n                    ];\n                    var hasNewExtent = s.newExtent[1] > s.newExtent[0];\n                    s.extent = s.stayingIntervals.concat(hasNewExtent ? [s.newExtent] : []);\n                    if(!s.extent.length) {\n                        brushClear(brush);\n                    }\n                    s.brushCallback(d);\n                    if(hasNewExtent) {\n                        // merging intervals post the snap tween\n                        renderHighlight(this.parentNode, mergeIntervals);\n                    }\n                    else {\n                        // if no new interval, don't animate, just redraw the highlight immediately\n                        mergeIntervals();\n                        renderHighlight(this.parentNode);\n                    }\n                } else {\n                    mergeIntervals(); // merging intervals immediately\n                }\n                s.brushEndCallback(brush.filterSpecified ? filter.getConsolidated() : []);\n            })\n        );\n}\n\nfunction startAsc(a, b) { return a[0] - b[0]; }\n\nfunction renderAxisBrush(axisBrush) {\n\n    var background = axisBrush.selectAll('.background').data(repeat);\n\n    background.enter()\n        .append('rect')\n        .classed('background', true)\n        .call(barHorizontalSetup)\n        .call(backgroundBarHorizontalSetup)\n        .style('pointer-events', 'auto') // parent pointer events are disabled; we must have it to register events\n        .attr('transform', 'translate(0 ' + c.verticalPadding + ')');\n\n    background\n        .call(attachDragBehavior)\n        .attr('height', function(d) {\n            return d.height - c.verticalPadding;\n        });\n\n    var highlightShadow = axisBrush.selectAll('.highlight-shadow').data(repeat); // we have a set here, can't call it `extent`\n\n    highlightShadow.enter()\n        .append('line')\n        .classed('highlight-shadow', true)\n        .attr('x', -c.bar.width / 2)\n        .attr('stroke-width', c.bar.width + c.bar.strokeWidth)\n        .attr('stroke', c.bar.strokeColor)\n        .attr('opacity', c.bar.strokeOpacity)\n        .attr('stroke-linecap', 'butt');\n\n    highlightShadow\n        .attr('y1', function(d) { return d.height; })\n        .call(styleHighlight);\n\n    var highlight = axisBrush.selectAll('.highlight').data(repeat); // we have a set here, can't call it `extent`\n\n    highlight.enter()\n        .append('line')\n        .classed('highlight', true)\n        .attr('x', -c.bar.width / 2)\n        .attr('stroke-width', c.bar.width - c.bar.strokeWidth)\n        .attr('stroke', c.bar.fillColor)\n        .attr('opacity', c.bar.fillOpacity)\n        .attr('stroke-linecap', 'butt');\n\n    highlight\n        .attr('y1', function(d) { return d.height; })\n        .call(styleHighlight);\n}\n\nfunction ensureAxisBrush(axisOverlays) {\n    var axisBrush = axisOverlays.selectAll('.' + c.cn.axisBrush)\n        .data(repeat, keyFun);\n\n    axisBrush.enter()\n        .append('g')\n        .classed(c.cn.axisBrush, true);\n\n    renderAxisBrush(axisBrush);\n}\n\nfunction getBrushExtent(brush) {\n    return brush.svgBrush.extent.map(function(e) {return e.slice();});\n}\n\nfunction brushClear(brush) {\n    brush.filterSpecified = false;\n    brush.svgBrush.extent = [[0, 1]];\n}\n\nfunction axisBrushMoved(callback) {\n    return function axisBrushMoved(dimension) {\n        var brush = dimension.brush;\n        var extent = getBrushExtent(brush);\n        var newExtent = extent.slice();\n        brush.filter.set(newExtent);\n        callback();\n    };\n}\n\nfunction dedupeRealRanges(intervals) {\n    // Fuses elements of intervals if they overlap, yielding discontiguous intervals, results.length <= intervals.length\n    // Currently uses closed intervals, ie. dedupeRealRanges([[400, 800], [300, 400]]) -> [300, 800]\n    var queue = intervals.slice();\n    var result = [];\n    var currentInterval;\n    var current = queue.shift();\n    while(current) { // [].shift === undefined, so we don't descend into an empty array\n        currentInterval = current.slice();\n        while((current = queue.shift()) && current[0] <= /* right-open interval would need `<` */ currentInterval[1]) {\n            currentInterval[1] = Math.max(currentInterval[1], current[1]);\n        }\n        result.push(currentInterval);\n    }\n    return result;\n}\n\nfunction makeFilter() {\n    var filter = [];\n    var consolidated;\n    var bounds;\n    return {\n        set: function(a) {\n            filter = a\n                .map(function(d) { return d.slice().sort(sortAsc); })\n                .sort(startAsc);\n            consolidated = dedupeRealRanges(filter);\n            bounds = filter.reduce(function(p, n) {\n                return [Math.min(p[0], n[0]), Math.max(p[1], n[1])];\n            }, [Infinity, -Infinity]);\n        },\n        get: function() { return filter.slice(); },\n        getConsolidated: function() { return consolidated; },\n        getBounds: function() { return bounds; }\n    };\n}\n\nfunction makeBrush(state, rangeSpecified, initialRange, brushStartCallback, brushCallback, brushEndCallback) {\n    var filter = makeFilter();\n    filter.set(initialRange);\n    return {\n        filter: filter,\n        filterSpecified: rangeSpecified, // there's a difference between not filtering and filtering a non-proper subset\n        svgBrush: {\n            extent: [], // this is where the svgBrush writes contents into\n            brushStartCallback: brushStartCallback,\n            brushCallback: axisBrushMoved(brushCallback),\n            brushEndCallback: brushEndCallback\n        }\n    };\n}\n\n// for use by supplyDefaults, but it needed tons of pieces from here so\n// seemed to make more sense just to put the whole routine here\nfunction cleanRanges(ranges, dimension) {\n    if(Array.isArray(ranges[0])) {\n        ranges = ranges.map(function(ri) { return ri.sort(sortAsc); });\n\n        if(!dimension.multiselect) ranges = [ranges[0]];\n        else ranges = dedupeRealRanges(ranges.sort(startAsc));\n    }\n    else ranges = [ranges.sort(sortAsc)];\n\n    // ordinal snapping\n    if(dimension.tickvals) {\n        var sortedTickVals = dimension.tickvals.slice().sort(sortAsc);\n        ranges = ranges.map(function(ri) {\n            var rSnapped = [\n                ordinalScaleSnapLo(sortedTickVals, ri[0], []),\n                ordinalScaleSnapHi(sortedTickVals, ri[1], [])\n            ];\n            if(rSnapped[1] > rSnapped[0]) return rSnapped;\n        })\n        .filter(function(ri) { return ri; });\n\n        if(!ranges.length) return;\n    }\n    return ranges.length > 1 ? ranges : ranges[0];\n}\n\nmodule.exports = {\n    makeBrush: makeBrush,\n    ensureAxisBrush: ensureAxisBrush,\n    cleanRanges: cleanRanges\n};\n"},"lineCount":531}},"hash":"07f0a9afcc9e2f12e356b4b299ada091","cacheData":{"env":{}}}