{"dependencies":[{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\package.json","includedInParent":true,"mtime":1528206326997},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\.babelrc","includedInParent":true,"mtime":1528197961732},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\to-px\\package.json","includedInParent":true,"mtime":1424208241000},{"name":"parse-unit","loc":{"line":3,"column":24}}],"generated":{"js":"'use strict'\n\nvar parseUnit = require('parse-unit')\n\nmodule.exports = toPX\n\nvar PIXELS_PER_INCH = 96\n\nfunction getPropertyInPX(element, prop) {\n  var parts = parseUnit(getComputedStyle(element).getPropertyValue(prop))\n  return parts[0] * toPX(parts[1], element)\n}\n\n//This brutal hack is needed\nfunction getSizeBrutal(unit, element) {\n  var testDIV = document.createElement('div')\n  testDIV.style['font-size'] = '128' + unit\n  element.appendChild(testDIV)\n  var size = getPropertyInPX(testDIV, 'font-size') / 128\n  element.removeChild(testDIV)\n  return size\n}\n\nfunction toPX(str, element) {\n  element = element || document.body\n  str = (str || 'px').trim().toLowerCase()\n  if(element === window || element === document) {\n    element = document.body \n  }\n  switch(str) {\n    case '%':  //Ambiguous, not sure if we should use width or height\n      return element.clientHeight / 100.0\n    case 'ch':\n    case 'ex':\n      return getSizeBrutal(str, element)\n    case 'em':\n      return getPropertyInPX(element, 'font-size')\n    case 'rem':\n      return getPropertyInPX(document.body, 'font-size')\n    case 'vw':\n      return window.innerWidth/100\n    case 'vh':\n      return window.innerHeight/100\n    case 'vmin':\n      return Math.min(window.innerWidth, window.innerHeight) / 100\n    case 'vmax':\n      return Math.max(window.innerWidth, window.innerHeight) / 100\n    case 'in':\n      return PIXELS_PER_INCH\n    case 'cm':\n      return PIXELS_PER_INCH / 2.54\n    case 'mm':\n      return PIXELS_PER_INCH / 25.4\n    case 'pt':\n      return PIXELS_PER_INCH / 72\n    case 'pc':\n      return PIXELS_PER_INCH / 6\n  }\n  return 1\n}","map":{"mappings":[{"source":"node_modules\\to-px\\topx.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\to-px\\topx.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}}],"sources":{"node_modules\\to-px\\topx.js":"'use strict'\n\nvar parseUnit = require('parse-unit')\n\nmodule.exports = toPX\n\nvar PIXELS_PER_INCH = 96\n\nfunction getPropertyInPX(element, prop) {\n  var parts = parseUnit(getComputedStyle(element).getPropertyValue(prop))\n  return parts[0] * toPX(parts[1], element)\n}\n\n//This brutal hack is needed\nfunction getSizeBrutal(unit, element) {\n  var testDIV = document.createElement('div')\n  testDIV.style['font-size'] = '128' + unit\n  element.appendChild(testDIV)\n  var size = getPropertyInPX(testDIV, 'font-size') / 128\n  element.removeChild(testDIV)\n  return size\n}\n\nfunction toPX(str, element) {\n  element = element || document.body\n  str = (str || 'px').trim().toLowerCase()\n  if(element === window || element === document) {\n    element = document.body \n  }\n  switch(str) {\n    case '%':  //Ambiguous, not sure if we should use width or height\n      return element.clientHeight / 100.0\n    case 'ch':\n    case 'ex':\n      return getSizeBrutal(str, element)\n    case 'em':\n      return getPropertyInPX(element, 'font-size')\n    case 'rem':\n      return getPropertyInPX(document.body, 'font-size')\n    case 'vw':\n      return window.innerWidth/100\n    case 'vh':\n      return window.innerHeight/100\n    case 'vmin':\n      return Math.min(window.innerWidth, window.innerHeight) / 100\n    case 'vmax':\n      return Math.max(window.innerWidth, window.innerHeight) / 100\n    case 'in':\n      return PIXELS_PER_INCH\n    case 'cm':\n      return PIXELS_PER_INCH / 2.54\n    case 'mm':\n      return PIXELS_PER_INCH / 25.4\n    case 'pt':\n      return PIXELS_PER_INCH / 72\n    case 'pc':\n      return PIXELS_PER_INCH / 6\n  }\n  return 1\n}"},"lineCount":60}},"hash":"0782918e985fdf27da08aad6214ccaa9","cacheData":{"env":{}}}