{"dependencies":[{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\package.json","includedInParent":true,"mtime":1528206326997},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\.babelrc","includedInParent":true,"mtime":1528197961732},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\gl-axes3d\\package.json","includedInParent":true,"mtime":1517604952000},{"name":"gl-buffer","loc":{"line":5,"column":28}},{"name":"gl-vao","loc":{"line":6,"column":28}},{"name":"./shaders","loc":{"line":7,"column":28}}],"generated":{"js":"'use strict'\r\n\r\nmodule.exports    = createLines\r\n\r\nvar createBuffer  = require('gl-buffer')\r\nvar createVAO     = require('gl-vao')\r\nvar createShader  = require('./shaders').line\r\n\r\nvar MAJOR_AXIS = [0,0,0]\r\nvar MINOR_AXIS = [0,0,0]\r\nvar SCREEN_AXIS = [0,0,0]\r\nvar OFFSET_VEC = [0,0,0]\r\nvar SHAPE = [1,1]\r\n\r\nfunction zeroVec(a) {\r\n  a[0] = a[1] = a[2] = 0\r\n  return a\r\n}\r\n\r\nfunction copyVec(a,b) {\r\n  a[0] = b[0]\r\n  a[1] = b[1]\r\n  a[2] = b[2]\r\n  return a\r\n}\r\n\r\nfunction Lines(gl, vertBuffer, vao, shader, tickCount, tickOffset, gridCount, gridOffset) {\r\n  this.gl         = gl\r\n  this.vertBuffer = vertBuffer\r\n  this.vao        = vao\r\n  this.shader     = shader\r\n  this.tickCount  = tickCount\r\n  this.tickOffset = tickOffset\r\n  this.gridCount  = gridCount\r\n  this.gridOffset = gridOffset\r\n}\r\n\r\nvar proto = Lines.prototype\r\n\r\nproto.bind = function(model, view, projection) {\r\n  this.shader.bind()\r\n  this.shader.uniforms.model = model\r\n  this.shader.uniforms.view = view\r\n  this.shader.uniforms.projection = projection\r\n\r\n  SHAPE[0] = this.gl.drawingBufferWidth\r\n  SHAPE[1] = this.gl.drawingBufferHeight\r\n\r\n  this.shader.uniforms.screenShape = SHAPE\r\n  this.vao.bind()\r\n}\r\n\r\nproto.unbind = function() {\r\n  this.vao.unbind()\r\n}\r\n\r\nproto.drawAxisLine = function(j, bounds, offset, color, lineWidth) {\r\n  var minorAxis = zeroVec(MINOR_AXIS)\r\n  this.shader.uniforms.majorAxis = MINOR_AXIS\r\n\r\n  minorAxis[j] = bounds[1][j] - bounds[0][j]\r\n  this.shader.uniforms.minorAxis = minorAxis\r\n\r\n  var noffset = copyVec(OFFSET_VEC, offset)\r\n  noffset[j] += bounds[0][j]\r\n  this.shader.uniforms.offset = noffset\r\n\r\n  this.shader.uniforms.lineWidth = lineWidth\r\n\r\n  this.shader.uniforms.color = color\r\n\r\n  var screenAxis = zeroVec(SCREEN_AXIS)\r\n  screenAxis[(j+2)%3] = 1\r\n  this.shader.uniforms.screenAxis = screenAxis\r\n  this.vao.draw(this.gl.TRIANGLES, 6)\r\n\r\n  var screenAxis = zeroVec(SCREEN_AXIS)\r\n  screenAxis[(j+1)%3] = 1\r\n  this.shader.uniforms.screenAxis = screenAxis\r\n  this.vao.draw(this.gl.TRIANGLES, 6)\r\n}\r\n\r\nproto.drawAxisTicks = function(j, offset, minorAxis, color, lineWidth) {\r\n  if(!this.tickCount[j]) {\r\n    return\r\n  }\r\n\r\n  var majorAxis = zeroVec(MAJOR_AXIS)\r\n  majorAxis[j]  = 1\r\n  this.shader.uniforms.majorAxis = majorAxis\r\n  this.shader.uniforms.offset    = offset\r\n  this.shader.uniforms.minorAxis = minorAxis\r\n  this.shader.uniforms.color     = color\r\n  this.shader.uniforms.lineWidth = lineWidth\r\n\r\n  var screenAxis = zeroVec(SCREEN_AXIS)\r\n  screenAxis[j] = 1\r\n  this.shader.uniforms.screenAxis = screenAxis\r\n  this.vao.draw(this.gl.TRIANGLES, this.tickCount[j], this.tickOffset[j])\r\n}\r\n\r\n\r\nproto.drawGrid = function(i, j, bounds, offset, color, lineWidth) {\r\n  if(!this.gridCount[i]) {\r\n    return\r\n  }\r\n\r\n  var minorAxis = zeroVec(MINOR_AXIS)\r\n  minorAxis[j]  = bounds[1][j] - bounds[0][j]\r\n  this.shader.uniforms.minorAxis = minorAxis\r\n\r\n  var noffset = copyVec(OFFSET_VEC, offset)\r\n  noffset[j] += bounds[0][j]\r\n  this.shader.uniforms.offset = noffset\r\n\r\n  var majorAxis = zeroVec(MAJOR_AXIS)\r\n  majorAxis[i]  = 1\r\n  this.shader.uniforms.majorAxis = majorAxis\r\n\r\n  var screenAxis = zeroVec(SCREEN_AXIS)\r\n  screenAxis[i] = 1\r\n  this.shader.uniforms.screenAxis = screenAxis\r\n  this.shader.uniforms.lineWidth = lineWidth\r\n\r\n  this.shader.uniforms.color = color\r\n  this.vao.draw(this.gl.TRIANGLES, this.gridCount[i], this.gridOffset[i])\r\n}\r\n\r\nproto.drawZero = function(j, i, bounds, offset, color, lineWidth) {\r\n  var minorAxis = zeroVec(MINOR_AXIS)\r\n  this.shader.uniforms.majorAxis = minorAxis\r\n\r\n  minorAxis[j] = bounds[1][j] - bounds[0][j]\r\n  this.shader.uniforms.minorAxis = minorAxis\r\n\r\n  var noffset = copyVec(OFFSET_VEC, offset)\r\n  noffset[j] += bounds[0][j]\r\n  this.shader.uniforms.offset = noffset\r\n\r\n  var screenAxis = zeroVec(SCREEN_AXIS)\r\n  screenAxis[i] = 1\r\n  this.shader.uniforms.screenAxis = screenAxis\r\n  this.shader.uniforms.lineWidth = lineWidth\r\n\r\n  this.shader.uniforms.color = color\r\n  this.vao.draw(this.gl.TRIANGLES, 6)\r\n}\r\n\r\nproto.dispose = function() {\r\n  this.vao.dispose()\r\n  this.vertBuffer.dispose()\r\n  this.shader.dispose()\r\n}\r\n\r\nfunction createLines(gl, bounds, ticks) {\r\n  var vertices    = []\r\n  var tickOffset  = [0,0,0]\r\n  var tickCount   = [0,0,0]\r\n\r\n  //Create grid lines for each axis/direction\r\n  var gridOffset = [0,0,0]\r\n  var gridCount  = [0,0,0]\r\n\r\n  //Add zero line\r\n  vertices.push(\r\n    0,0,1,   0,1,1,   0,0,-1,\r\n    0,0,-1,  0,1,1,   0,1,-1)\r\n\r\n  for(var i=0; i<3; ++i) {\r\n    //Axis tick marks\r\n    var start = ((vertices.length / 3)|0)\r\n    for(var j=0; j<ticks[i].length; ++j) {\r\n      var x = +ticks[i][j].x\r\n      vertices.push(\r\n        x,0,1,   x,1,1,   x,0,-1,\r\n        x,0,-1,  x,1,1,   x,1,-1)\r\n    }\r\n    var end = ((vertices.length / 3)|0)\r\n    tickOffset[i] = start\r\n    tickCount[i]  = end - start\r\n\r\n    //Grid lines\r\n    var start = ((vertices.length / 3)|0)\r\n    for(var k=0; k<ticks[i].length; ++k) {\r\n      var x = +ticks[i][k].x\r\n      vertices.push(\r\n        x,0,1,   x,1,1,   x,0,-1,\r\n        x,0,-1,  x,1,1,   x,1,-1)\r\n    }\r\n    var end = ((vertices.length / 3)|0)\r\n    gridOffset[i] = start\r\n    gridCount[i]  = end - start\r\n  }\r\n\r\n  //Create cube VAO\r\n  var vertBuf = createBuffer(gl, new Float32Array(vertices))\r\n  var vao = createVAO(gl, [\r\n    { \"buffer\": vertBuf,\r\n      \"type\": gl.FLOAT,\r\n      \"size\": 3,\r\n      \"stride\": 0,\r\n      \"offset\": 0\r\n    }\r\n  ])\r\n  var shader = createShader(gl)\r\n  shader.attributes.position.location = 0\r\n  return new Lines(gl, vertBuf, vao, shader, tickCount, tickOffset, gridCount, gridOffset)\r\n}\r\n","map":{"mappings":[{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\lines.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}}],"sources":{"node_modules\\gl-axes3d\\lib\\lines.js":"'use strict'\r\n\r\nmodule.exports    = createLines\r\n\r\nvar createBuffer  = require('gl-buffer')\r\nvar createVAO     = require('gl-vao')\r\nvar createShader  = require('./shaders').line\r\n\r\nvar MAJOR_AXIS = [0,0,0]\r\nvar MINOR_AXIS = [0,0,0]\r\nvar SCREEN_AXIS = [0,0,0]\r\nvar OFFSET_VEC = [0,0,0]\r\nvar SHAPE = [1,1]\r\n\r\nfunction zeroVec(a) {\r\n  a[0] = a[1] = a[2] = 0\r\n  return a\r\n}\r\n\r\nfunction copyVec(a,b) {\r\n  a[0] = b[0]\r\n  a[1] = b[1]\r\n  a[2] = b[2]\r\n  return a\r\n}\r\n\r\nfunction Lines(gl, vertBuffer, vao, shader, tickCount, tickOffset, gridCount, gridOffset) {\r\n  this.gl         = gl\r\n  this.vertBuffer = vertBuffer\r\n  this.vao        = vao\r\n  this.shader     = shader\r\n  this.tickCount  = tickCount\r\n  this.tickOffset = tickOffset\r\n  this.gridCount  = gridCount\r\n  this.gridOffset = gridOffset\r\n}\r\n\r\nvar proto = Lines.prototype\r\n\r\nproto.bind = function(model, view, projection) {\r\n  this.shader.bind()\r\n  this.shader.uniforms.model = model\r\n  this.shader.uniforms.view = view\r\n  this.shader.uniforms.projection = projection\r\n\r\n  SHAPE[0] = this.gl.drawingBufferWidth\r\n  SHAPE[1] = this.gl.drawingBufferHeight\r\n\r\n  this.shader.uniforms.screenShape = SHAPE\r\n  this.vao.bind()\r\n}\r\n\r\nproto.unbind = function() {\r\n  this.vao.unbind()\r\n}\r\n\r\nproto.drawAxisLine = function(j, bounds, offset, color, lineWidth) {\r\n  var minorAxis = zeroVec(MINOR_AXIS)\r\n  this.shader.uniforms.majorAxis = MINOR_AXIS\r\n\r\n  minorAxis[j] = bounds[1][j] - bounds[0][j]\r\n  this.shader.uniforms.minorAxis = minorAxis\r\n\r\n  var noffset = copyVec(OFFSET_VEC, offset)\r\n  noffset[j] += bounds[0][j]\r\n  this.shader.uniforms.offset = noffset\r\n\r\n  this.shader.uniforms.lineWidth = lineWidth\r\n\r\n  this.shader.uniforms.color = color\r\n\r\n  var screenAxis = zeroVec(SCREEN_AXIS)\r\n  screenAxis[(j+2)%3] = 1\r\n  this.shader.uniforms.screenAxis = screenAxis\r\n  this.vao.draw(this.gl.TRIANGLES, 6)\r\n\r\n  var screenAxis = zeroVec(SCREEN_AXIS)\r\n  screenAxis[(j+1)%3] = 1\r\n  this.shader.uniforms.screenAxis = screenAxis\r\n  this.vao.draw(this.gl.TRIANGLES, 6)\r\n}\r\n\r\nproto.drawAxisTicks = function(j, offset, minorAxis, color, lineWidth) {\r\n  if(!this.tickCount[j]) {\r\n    return\r\n  }\r\n\r\n  var majorAxis = zeroVec(MAJOR_AXIS)\r\n  majorAxis[j]  = 1\r\n  this.shader.uniforms.majorAxis = majorAxis\r\n  this.shader.uniforms.offset    = offset\r\n  this.shader.uniforms.minorAxis = minorAxis\r\n  this.shader.uniforms.color     = color\r\n  this.shader.uniforms.lineWidth = lineWidth\r\n\r\n  var screenAxis = zeroVec(SCREEN_AXIS)\r\n  screenAxis[j] = 1\r\n  this.shader.uniforms.screenAxis = screenAxis\r\n  this.vao.draw(this.gl.TRIANGLES, this.tickCount[j], this.tickOffset[j])\r\n}\r\n\r\n\r\nproto.drawGrid = function(i, j, bounds, offset, color, lineWidth) {\r\n  if(!this.gridCount[i]) {\r\n    return\r\n  }\r\n\r\n  var minorAxis = zeroVec(MINOR_AXIS)\r\n  minorAxis[j]  = bounds[1][j] - bounds[0][j]\r\n  this.shader.uniforms.minorAxis = minorAxis\r\n\r\n  var noffset = copyVec(OFFSET_VEC, offset)\r\n  noffset[j] += bounds[0][j]\r\n  this.shader.uniforms.offset = noffset\r\n\r\n  var majorAxis = zeroVec(MAJOR_AXIS)\r\n  majorAxis[i]  = 1\r\n  this.shader.uniforms.majorAxis = majorAxis\r\n\r\n  var screenAxis = zeroVec(SCREEN_AXIS)\r\n  screenAxis[i] = 1\r\n  this.shader.uniforms.screenAxis = screenAxis\r\n  this.shader.uniforms.lineWidth = lineWidth\r\n\r\n  this.shader.uniforms.color = color\r\n  this.vao.draw(this.gl.TRIANGLES, this.gridCount[i], this.gridOffset[i])\r\n}\r\n\r\nproto.drawZero = function(j, i, bounds, offset, color, lineWidth) {\r\n  var minorAxis = zeroVec(MINOR_AXIS)\r\n  this.shader.uniforms.majorAxis = minorAxis\r\n\r\n  minorAxis[j] = bounds[1][j] - bounds[0][j]\r\n  this.shader.uniforms.minorAxis = minorAxis\r\n\r\n  var noffset = copyVec(OFFSET_VEC, offset)\r\n  noffset[j] += bounds[0][j]\r\n  this.shader.uniforms.offset = noffset\r\n\r\n  var screenAxis = zeroVec(SCREEN_AXIS)\r\n  screenAxis[i] = 1\r\n  this.shader.uniforms.screenAxis = screenAxis\r\n  this.shader.uniforms.lineWidth = lineWidth\r\n\r\n  this.shader.uniforms.color = color\r\n  this.vao.draw(this.gl.TRIANGLES, 6)\r\n}\r\n\r\nproto.dispose = function() {\r\n  this.vao.dispose()\r\n  this.vertBuffer.dispose()\r\n  this.shader.dispose()\r\n}\r\n\r\nfunction createLines(gl, bounds, ticks) {\r\n  var vertices    = []\r\n  var tickOffset  = [0,0,0]\r\n  var tickCount   = [0,0,0]\r\n\r\n  //Create grid lines for each axis/direction\r\n  var gridOffset = [0,0,0]\r\n  var gridCount  = [0,0,0]\r\n\r\n  //Add zero line\r\n  vertices.push(\r\n    0,0,1,   0,1,1,   0,0,-1,\r\n    0,0,-1,  0,1,1,   0,1,-1)\r\n\r\n  for(var i=0; i<3; ++i) {\r\n    //Axis tick marks\r\n    var start = ((vertices.length / 3)|0)\r\n    for(var j=0; j<ticks[i].length; ++j) {\r\n      var x = +ticks[i][j].x\r\n      vertices.push(\r\n        x,0,1,   x,1,1,   x,0,-1,\r\n        x,0,-1,  x,1,1,   x,1,-1)\r\n    }\r\n    var end = ((vertices.length / 3)|0)\r\n    tickOffset[i] = start\r\n    tickCount[i]  = end - start\r\n\r\n    //Grid lines\r\n    var start = ((vertices.length / 3)|0)\r\n    for(var k=0; k<ticks[i].length; ++k) {\r\n      var x = +ticks[i][k].x\r\n      vertices.push(\r\n        x,0,1,   x,1,1,   x,0,-1,\r\n        x,0,-1,  x,1,1,   x,1,-1)\r\n    }\r\n    var end = ((vertices.length / 3)|0)\r\n    gridOffset[i] = start\r\n    gridCount[i]  = end - start\r\n  }\r\n\r\n  //Create cube VAO\r\n  var vertBuf = createBuffer(gl, new Float32Array(vertices))\r\n  var vao = createVAO(gl, [\r\n    { \"buffer\": vertBuf,\r\n      \"type\": gl.FLOAT,\r\n      \"size\": 3,\r\n      \"stride\": 0,\r\n      \"offset\": 0\r\n    }\r\n  ])\r\n  var shader = createShader(gl)\r\n  shader.attributes.position.location = 0\r\n  return new Lines(gl, vertBuf, vao, shader, tickCount, tickOffset, gridCount, gridOffset)\r\n}\r\n"},"lineCount":209}},"hash":"80a191f3f7266c826b4145e83f7bc48d","cacheData":{"env":{}}}