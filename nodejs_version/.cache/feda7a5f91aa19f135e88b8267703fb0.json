{"dependencies":[{"name":"C:\\Users\\qison\\package.json","includedInParent":true,"mtime":1526331035212},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\alpha-complex\\package.json","includedInParent":true,"mtime":1425948471000},{"name":"delaunay-triangulate","loc":{"line":5,"column":23}},{"name":"circumradius","loc":{"line":6,"column":27}}],"generated":{"js":"'use strict'\n\nmodule.exports = alphaComplex\n\nvar delaunay = require('delaunay-triangulate')\nvar circumradius = require('circumradius')\n\nfunction alphaComplex(alpha, points) {\n  return delaunay(points).filter(function(cell) {\n    var simplex = new Array(cell.length)\n    for(var i=0; i<cell.length; ++i) {\n      simplex[i] = points[cell[i]]\n    }\n    return circumradius(simplex) * alpha < 1\n  })\n}","map":{"mappings":[{"source":"nodejs_version\\node_modules\\alpha-complex\\alpha.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"nodejs_version\\node_modules\\alpha-complex\\alpha.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"nodejs_version\\node_modules\\alpha-complex\\alpha.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"nodejs_version\\node_modules\\alpha-complex\\alpha.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"nodejs_version\\node_modules\\alpha-complex\\alpha.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"nodejs_version\\node_modules\\alpha-complex\\alpha.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"nodejs_version\\node_modules\\alpha-complex\\alpha.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"nodejs_version\\node_modules\\alpha-complex\\alpha.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"nodejs_version\\node_modules\\alpha-complex\\alpha.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"nodejs_version\\node_modules\\alpha-complex\\alpha.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"nodejs_version\\node_modules\\alpha-complex\\alpha.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"nodejs_version\\node_modules\\alpha-complex\\alpha.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"nodejs_version\\node_modules\\alpha-complex\\alpha.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"nodejs_version\\node_modules\\alpha-complex\\alpha.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"nodejs_version\\node_modules\\alpha-complex\\alpha.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"nodejs_version\\node_modules\\alpha-complex\\alpha.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}}],"sources":{"nodejs_version\\node_modules\\alpha-complex\\alpha.js":"'use strict'\n\nmodule.exports = alphaComplex\n\nvar delaunay = require('delaunay-triangulate')\nvar circumradius = require('circumradius')\n\nfunction alphaComplex(alpha, points) {\n  return delaunay(points).filter(function(cell) {\n    var simplex = new Array(cell.length)\n    for(var i=0; i<cell.length; ++i) {\n      simplex[i] = points[cell[i]]\n    }\n    return circumradius(simplex) * alpha < 1\n  })\n}"},"lineCount":16}},"hash":"b52396adc19c37ee7c25560449d36b2c","cacheData":{"env":{}}}