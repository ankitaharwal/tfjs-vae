{"dependencies":[{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\package.json","includedInParent":true,"mtime":1528206326997},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\.babelrc","includedInParent":true,"mtime":1528197961732},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\gl-buffer\\package.json","includedInParent":true,"mtime":1433967275000},{"name":"typedarray-pool","loc":{"line":3,"column":19}},{"name":"ndarray-ops","loc":{"line":4,"column":18}},{"name":"ndarray","loc":{"line":5,"column":22}}],"generated":{"js":"\"use strict\"\n\nvar pool = require(\"typedarray-pool\")\nvar ops = require(\"ndarray-ops\")\nvar ndarray = require(\"ndarray\")\n\nvar SUPPORTED_TYPES = [\n  \"uint8\",\n  \"uint8_clamped\",\n  \"uint16\",\n  \"uint32\",\n  \"int8\",\n  \"int16\",\n  \"int32\",\n  \"float32\" ]\n\nfunction GLBuffer(gl, type, handle, length, usage) {\n  this.gl = gl\n  this.type = type\n  this.handle = handle\n  this.length = length\n  this.usage = usage\n}\n\nvar proto = GLBuffer.prototype\n\nproto.bind = function() {\n  this.gl.bindBuffer(this.type, this.handle)\n}\n\nproto.unbind = function() {\n  this.gl.bindBuffer(this.type, null)\n}\n\nproto.dispose = function() {\n  this.gl.deleteBuffer(this.handle)\n}\n\nfunction updateTypeArray(gl, type, len, usage, data, offset) {\n  var dataLen = data.length * data.BYTES_PER_ELEMENT\n  if(offset < 0) {\n    gl.bufferData(type, data, usage)\n    return dataLen\n  }\n  if(dataLen + offset > len) {\n    throw new Error(\"gl-buffer: If resizing buffer, must not specify offset\")\n  }\n  gl.bufferSubData(type, offset, data)\n  return len\n}\n\nfunction makeScratchTypeArray(array, dtype) {\n  var res = pool.malloc(array.length, dtype)\n  var n = array.length\n  for(var i=0; i<n; ++i) {\n    res[i] = array[i]\n  }\n  return res\n}\n\nfunction isPacked(shape, stride) {\n  var n = 1\n  for(var i=stride.length-1; i>=0; --i) {\n    if(stride[i] !== n) {\n      return false\n    }\n    n *= shape[i]\n  }\n  return true\n}\n\nproto.update = function(array, offset) {\n  if(typeof offset !== \"number\") {\n    offset = -1\n  }\n  this.bind()\n  if(typeof array === \"object\" && typeof array.shape !== \"undefined\") { //ndarray\n    var dtype = array.dtype\n    if(SUPPORTED_TYPES.indexOf(dtype) < 0) {\n      dtype = \"float32\"\n    }\n    if(this.type === this.gl.ELEMENT_ARRAY_BUFFER) {\n      var ext = gl.getExtension('OES_element_index_uint')\n      if(ext && dtype !== \"uint16\") {\n        dtype = \"uint32\"\n      } else {\n        dtype = \"uint16\"\n      }\n    }\n    if(dtype === array.dtype && isPacked(array.shape, array.stride)) {\n      if(array.offset === 0 && array.data.length === array.shape[0]) {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array.data, offset)\n      } else {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array.data.subarray(array.offset, array.shape[0]), offset)\n      }\n    } else {\n      var tmp = pool.malloc(array.size, dtype)\n      var ndt = ndarray(tmp, array.shape)\n      ops.assign(ndt, array)\n      if(offset < 0) {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, tmp, offset)\n      } else {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, tmp.subarray(0, array.size), offset)\n      }\n      pool.free(tmp)\n    }\n  } else if(Array.isArray(array)) { //Vanilla array\n    var t\n    if(this.type === this.gl.ELEMENT_ARRAY_BUFFER) {\n      t = makeScratchTypeArray(array, \"uint16\")\n    } else {\n      t = makeScratchTypeArray(array, \"float32\")\n    }\n    if(offset < 0) {\n      this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, t, offset)\n    } else {\n      this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, t.subarray(0, array.length), offset)\n    }\n    pool.free(t)\n  } else if(typeof array === \"object\" && typeof array.length === \"number\") { //Typed array\n    this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array, offset)\n  } else if(typeof array === \"number\" || array === undefined) { //Number/default\n    if(offset >= 0) {\n      throw new Error(\"gl-buffer: Cannot specify offset when resizing buffer\")\n    }\n    array = array | 0\n    if(array <= 0) {\n      array = 1\n    }\n    this.gl.bufferData(this.type, array|0, this.usage)\n    this.length = array\n  } else { //Error, case should not happen\n    throw new Error(\"gl-buffer: Invalid data type\")\n  }\n}\n\nfunction createBuffer(gl, data, type, usage) {\n  type = type || gl.ARRAY_BUFFER\n  usage = usage || gl.DYNAMIC_DRAW\n  if(type !== gl.ARRAY_BUFFER && type !== gl.ELEMENT_ARRAY_BUFFER) {\n    throw new Error(\"gl-buffer: Invalid type for webgl buffer, must be either gl.ARRAY_BUFFER or gl.ELEMENT_ARRAY_BUFFER\")\n  }\n  if(usage !== gl.DYNAMIC_DRAW && usage !== gl.STATIC_DRAW && usage !== gl.STREAM_DRAW) {\n    throw new Error(\"gl-buffer: Invalid usage for buffer, must be either gl.DYNAMIC_DRAW, gl.STATIC_DRAW or gl.STREAM_DRAW\")\n  }\n  var handle = gl.createBuffer()\n  var result = new GLBuffer(gl, type, handle, 0, usage)\n  result.update(data)\n  return result\n}\n\nmodule.exports = createBuffer\n","map":{"mappings":[{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules\\gl-buffer\\buffer.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}}],"sources":{"node_modules\\gl-buffer\\buffer.js":"\"use strict\"\n\nvar pool = require(\"typedarray-pool\")\nvar ops = require(\"ndarray-ops\")\nvar ndarray = require(\"ndarray\")\n\nvar SUPPORTED_TYPES = [\n  \"uint8\",\n  \"uint8_clamped\",\n  \"uint16\",\n  \"uint32\",\n  \"int8\",\n  \"int16\",\n  \"int32\",\n  \"float32\" ]\n\nfunction GLBuffer(gl, type, handle, length, usage) {\n  this.gl = gl\n  this.type = type\n  this.handle = handle\n  this.length = length\n  this.usage = usage\n}\n\nvar proto = GLBuffer.prototype\n\nproto.bind = function() {\n  this.gl.bindBuffer(this.type, this.handle)\n}\n\nproto.unbind = function() {\n  this.gl.bindBuffer(this.type, null)\n}\n\nproto.dispose = function() {\n  this.gl.deleteBuffer(this.handle)\n}\n\nfunction updateTypeArray(gl, type, len, usage, data, offset) {\n  var dataLen = data.length * data.BYTES_PER_ELEMENT\n  if(offset < 0) {\n    gl.bufferData(type, data, usage)\n    return dataLen\n  }\n  if(dataLen + offset > len) {\n    throw new Error(\"gl-buffer: If resizing buffer, must not specify offset\")\n  }\n  gl.bufferSubData(type, offset, data)\n  return len\n}\n\nfunction makeScratchTypeArray(array, dtype) {\n  var res = pool.malloc(array.length, dtype)\n  var n = array.length\n  for(var i=0; i<n; ++i) {\n    res[i] = array[i]\n  }\n  return res\n}\n\nfunction isPacked(shape, stride) {\n  var n = 1\n  for(var i=stride.length-1; i>=0; --i) {\n    if(stride[i] !== n) {\n      return false\n    }\n    n *= shape[i]\n  }\n  return true\n}\n\nproto.update = function(array, offset) {\n  if(typeof offset !== \"number\") {\n    offset = -1\n  }\n  this.bind()\n  if(typeof array === \"object\" && typeof array.shape !== \"undefined\") { //ndarray\n    var dtype = array.dtype\n    if(SUPPORTED_TYPES.indexOf(dtype) < 0) {\n      dtype = \"float32\"\n    }\n    if(this.type === this.gl.ELEMENT_ARRAY_BUFFER) {\n      var ext = gl.getExtension('OES_element_index_uint')\n      if(ext && dtype !== \"uint16\") {\n        dtype = \"uint32\"\n      } else {\n        dtype = \"uint16\"\n      }\n    }\n    if(dtype === array.dtype && isPacked(array.shape, array.stride)) {\n      if(array.offset === 0 && array.data.length === array.shape[0]) {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array.data, offset)\n      } else {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array.data.subarray(array.offset, array.shape[0]), offset)\n      }\n    } else {\n      var tmp = pool.malloc(array.size, dtype)\n      var ndt = ndarray(tmp, array.shape)\n      ops.assign(ndt, array)\n      if(offset < 0) {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, tmp, offset)\n      } else {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, tmp.subarray(0, array.size), offset)\n      }\n      pool.free(tmp)\n    }\n  } else if(Array.isArray(array)) { //Vanilla array\n    var t\n    if(this.type === this.gl.ELEMENT_ARRAY_BUFFER) {\n      t = makeScratchTypeArray(array, \"uint16\")\n    } else {\n      t = makeScratchTypeArray(array, \"float32\")\n    }\n    if(offset < 0) {\n      this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, t, offset)\n    } else {\n      this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, t.subarray(0, array.length), offset)\n    }\n    pool.free(t)\n  } else if(typeof array === \"object\" && typeof array.length === \"number\") { //Typed array\n    this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array, offset)\n  } else if(typeof array === \"number\" || array === undefined) { //Number/default\n    if(offset >= 0) {\n      throw new Error(\"gl-buffer: Cannot specify offset when resizing buffer\")\n    }\n    array = array | 0\n    if(array <= 0) {\n      array = 1\n    }\n    this.gl.bufferData(this.type, array|0, this.usage)\n    this.length = array\n  } else { //Error, case should not happen\n    throw new Error(\"gl-buffer: Invalid data type\")\n  }\n}\n\nfunction createBuffer(gl, data, type, usage) {\n  type = type || gl.ARRAY_BUFFER\n  usage = usage || gl.DYNAMIC_DRAW\n  if(type !== gl.ARRAY_BUFFER && type !== gl.ELEMENT_ARRAY_BUFFER) {\n    throw new Error(\"gl-buffer: Invalid type for webgl buffer, must be either gl.ARRAY_BUFFER or gl.ELEMENT_ARRAY_BUFFER\")\n  }\n  if(usage !== gl.DYNAMIC_DRAW && usage !== gl.STATIC_DRAW && usage !== gl.STREAM_DRAW) {\n    throw new Error(\"gl-buffer: Invalid usage for buffer, must be either gl.DYNAMIC_DRAW, gl.STATIC_DRAW or gl.STREAM_DRAW\")\n  }\n  var handle = gl.createBuffer()\n  var result = new GLBuffer(gl, type, handle, 0, usage)\n  result.update(data)\n  return result\n}\n\nmodule.exports = createBuffer\n"},"lineCount":153}},"hash":"cc5dcb5329e0bf39d4a825075b63f76e","cacheData":{"env":{}}}