{"dependencies":[{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\package.json","includedInParent":true,"mtime":1528206326997},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\.babelrc","includedInParent":true,"mtime":1528197961732},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\cwise-parser\\node_modules\\esprima\\package.json","includedInParent":true,"mtime":1425184488000}],"generated":{"js":"/*\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/*jslint bitwise:true plusplus:true */\n/*global esprima:true, define:true, exports:true, window: true,\nthrowErrorTolerant: true,\nthrowError: true, generateStatement: true, peek: true,\nparseAssignmentExpression: true, parseBlock: true, parseExpression: true,\nparseFunctionDeclaration: true, parseFunctionExpression: true,\nparseFunctionSourceElements: true, parseVariableIdentifier: true,\nparseLeftHandSideExpression: true,\nparseUnaryExpression: true,\nparseStatement: true, parseSourceElement: true */\n\n(function (root, factory) {\n    'use strict';\n\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js,\n    // Rhino, and plain browser loading.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.esprima = {}));\n    }\n}(this, function (exports) {\n    'use strict';\n\n    var Token,\n        TokenName,\n        FnExprTokens,\n        Syntax,\n        PropertyKind,\n        Messages,\n        Regex,\n        SyntaxTreeDelegate,\n        source,\n        strict,\n        index,\n        lineNumber,\n        lineStart,\n        length,\n        delegate,\n        lookahead,\n        state,\n        extra;\n\n    Token = {\n        BooleanLiteral: 1,\n        EOF: 2,\n        Identifier: 3,\n        Keyword: 4,\n        NullLiteral: 5,\n        NumericLiteral: 6,\n        Punctuator: 7,\n        StringLiteral: 8,\n        RegularExpression: 9\n    };\n\n    TokenName = {};\n    TokenName[Token.BooleanLiteral] = 'Boolean';\n    TokenName[Token.EOF] = '<end>';\n    TokenName[Token.Identifier] = 'Identifier';\n    TokenName[Token.Keyword] = 'Keyword';\n    TokenName[Token.NullLiteral] = 'Null';\n    TokenName[Token.NumericLiteral] = 'Numeric';\n    TokenName[Token.Punctuator] = 'Punctuator';\n    TokenName[Token.StringLiteral] = 'String';\n    TokenName[Token.RegularExpression] = 'RegularExpression';\n\n    // A function following one of those tokens is an expression.\n    FnExprTokens = ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\n                    'return', 'case', 'delete', 'throw', 'void',\n                    // assignment operators\n                    '=', '+=', '-=', '*=', '/=', '%=', '<<=', '>>=', '>>>=',\n                    '&=', '|=', '^=', ',',\n                    // binary/unary operators\n                    '+', '-', '*', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\n                    '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\n                    '<=', '<', '>', '!=', '!=='];\n\n    Syntax = {\n        AssignmentExpression: 'AssignmentExpression',\n        ArrayExpression: 'ArrayExpression',\n        BlockStatement: 'BlockStatement',\n        BinaryExpression: 'BinaryExpression',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DoWhileStatement: 'DoWhileStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExpressionStatement: 'ExpressionStatement',\n        ForStatement: 'ForStatement',\n        ForInStatement: 'ForInStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        Literal: 'Literal',\n        LabeledStatement: 'LabeledStatement',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        NewExpression: 'NewExpression',\n        ObjectExpression: 'ObjectExpression',\n        Program: 'Program',\n        Property: 'Property',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SwitchStatement: 'SwitchStatement',\n        SwitchCase: 'SwitchCase',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TryStatement: 'TryStatement',\n        UnaryExpression: 'UnaryExpression',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement'\n    };\n\n    PropertyKind = {\n        Data: 1,\n        Get: 2,\n        Set: 4\n    };\n\n    // Error messages should be identical to V8.\n    Messages = {\n        UnexpectedToken:  'Unexpected token %0',\n        UnexpectedNumber:  'Unexpected number',\n        UnexpectedString:  'Unexpected string',\n        UnexpectedIdentifier:  'Unexpected identifier',\n        UnexpectedReserved:  'Unexpected reserved word',\n        UnexpectedEOS:  'Unexpected end of input',\n        NewlineAfterThrow:  'Illegal newline after throw',\n        InvalidRegExp: 'Invalid regular expression',\n        UnterminatedRegExp:  'Invalid regular expression: missing /',\n        InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n        InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n        MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n        NoCatchOrFinally:  'Missing catch or finally after try',\n        UnknownLabel: 'Undefined label \\'%0\\'',\n        Redeclaration: '%0 \\'%1\\' has already been declared',\n        IllegalContinue: 'Illegal continue statement',\n        IllegalBreak: 'Illegal break statement',\n        IllegalReturn: 'Illegal return statement',\n        StrictModeWith:  'Strict mode code may not include a with statement',\n        StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n        StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n        StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n        StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n        StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n        StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n        StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n        StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n        AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n        AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n        StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n        StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n        StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n        StrictReservedWord:  'Use of future reserved word in strict mode'\n    };\n\n    // See also tools/generate-unicode-regex.py.\n    Regex = {\n        NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n        NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0\\u08A2-\\u08AC\\u08E4-\\u08FE\\u0900-\\u0963\\u0966-\\u096F\\u0971-\\u0977\\u0979-\\u097F\\u0981-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C82\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1D00-\\u1DE6\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA697\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7B\\uAA80-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE26\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n    };\n\n    // Ensure the condition is true, otherwise throw an error.\n    // This is only to have a better contract semantic, i.e. another safety net\n    // to catch a logic error. The condition shall be fulfilled in normal case.\n    // Do NOT use this to enforce a certain condition on any user input.\n\n    function assert(condition, message) {\n        /* istanbul ignore if */\n        if (!condition) {\n            throw new Error('ASSERT: ' + message);\n        }\n    }\n\n    function isDecimalDigit(ch) {\n        return (ch >= 48 && ch <= 57);   // 0..9\n    }\n\n    function isHexDigit(ch) {\n        return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n    }\n\n    function isOctalDigit(ch) {\n        return '01234567'.indexOf(ch) >= 0;\n    }\n\n\n    // 7.2 White Space\n\n    function isWhiteSpace(ch) {\n        return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n            (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n    }\n\n    // 7.3 Line Terminators\n\n    function isLineTerminator(ch) {\n        return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n    }\n\n    // 7.6 Identifier Names and Identifiers\n\n    function isIdentifierStart(ch) {\n        return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n            (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n            (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n            (ch === 0x5C) ||                      // \\ (backslash)\n            ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n    }\n\n    function isIdentifierPart(ch) {\n        return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n            (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n            (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n            (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n            (ch === 0x5C) ||                      // \\ (backslash)\n            ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n    }\n\n    // 7.6.1.2 Future Reserved Words\n\n    function isFutureReservedWord(id) {\n        switch (id) {\n        case 'class':\n        case 'enum':\n        case 'export':\n        case 'extends':\n        case 'import':\n        case 'super':\n            return true;\n        default:\n            return false;\n        }\n    }\n\n    function isStrictModeReservedWord(id) {\n        switch (id) {\n        case 'implements':\n        case 'interface':\n        case 'package':\n        case 'private':\n        case 'protected':\n        case 'public':\n        case 'static':\n        case 'yield':\n        case 'let':\n            return true;\n        default:\n            return false;\n        }\n    }\n\n    function isRestrictedWord(id) {\n        return id === 'eval' || id === 'arguments';\n    }\n\n    // 7.6.1.1 Keywords\n\n    function isKeyword(id) {\n        if (strict && isStrictModeReservedWord(id)) {\n            return true;\n        }\n\n        // 'const' is specialized as Keyword in V8.\n        // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n        // Some others are from future reserved words.\n\n        switch (id.length) {\n        case 2:\n            return (id === 'if') || (id === 'in') || (id === 'do');\n        case 3:\n            return (id === 'var') || (id === 'for') || (id === 'new') ||\n                (id === 'try') || (id === 'let');\n        case 4:\n            return (id === 'this') || (id === 'else') || (id === 'case') ||\n                (id === 'void') || (id === 'with') || (id === 'enum');\n        case 5:\n            return (id === 'while') || (id === 'break') || (id === 'catch') ||\n                (id === 'throw') || (id === 'const') || (id === 'yield') ||\n                (id === 'class') || (id === 'super');\n        case 6:\n            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n                (id === 'switch') || (id === 'export') || (id === 'import');\n        case 7:\n            return (id === 'default') || (id === 'finally') || (id === 'extends');\n        case 8:\n            return (id === 'function') || (id === 'continue') || (id === 'debugger');\n        case 10:\n            return (id === 'instanceof');\n        default:\n            return false;\n        }\n    }\n\n    // 7.4 Comments\n\n    function addComment(type, value, start, end, loc) {\n        var comment, attacher;\n\n        assert(typeof start === 'number', 'Comment must have valid position');\n\n        // Because the way the actual token is scanned, often the comments\n        // (if any) are skipped twice during the lexical analysis.\n        // Thus, we need to skip adding a comment if the comment array already\n        // handled it.\n        if (state.lastCommentStart >= start) {\n            return;\n        }\n        state.lastCommentStart = start;\n\n        comment = {\n            type: type,\n            value: value\n        };\n        if (extra.range) {\n            comment.range = [start, end];\n        }\n        if (extra.loc) {\n            comment.loc = loc;\n        }\n        extra.comments.push(comment);\n        if (extra.attachComment) {\n            extra.leadingComments.push(comment);\n            extra.trailingComments.push(comment);\n        }\n    }\n\n    function skipSingleLineComment(offset) {\n        var start, loc, ch, comment;\n\n        start = index - offset;\n        loc = {\n            start: {\n                line: lineNumber,\n                column: index - lineStart - offset\n            }\n        };\n\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            ++index;\n            if (isLineTerminator(ch)) {\n                if (extra.comments) {\n                    comment = source.slice(start + offset, index - 1);\n                    loc.end = {\n                        line: lineNumber,\n                        column: index - lineStart - 1\n                    };\n                    addComment('Line', comment, start, index - 1, loc);\n                }\n                if (ch === 13 && source.charCodeAt(index) === 10) {\n                    ++index;\n                }\n                ++lineNumber;\n                lineStart = index;\n                return;\n            }\n        }\n\n        if (extra.comments) {\n            comment = source.slice(start + offset, index);\n            loc.end = {\n                line: lineNumber,\n                column: index - lineStart\n            };\n            addComment('Line', comment, start, index, loc);\n        }\n    }\n\n    function skipMultiLineComment() {\n        var start, loc, ch, comment;\n\n        if (extra.comments) {\n            start = index - 2;\n            loc = {\n                start: {\n                    line: lineNumber,\n                    column: index - lineStart - 2\n                }\n            };\n        }\n\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (isLineTerminator(ch)) {\n                if (ch === 0x0D && source.charCodeAt(index + 1) === 0x0A) {\n                    ++index;\n                }\n                ++lineNumber;\n                ++index;\n                lineStart = index;\n                if (index >= length) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n            } else if (ch === 0x2A) {\n                // Block comment ends with '*/'.\n                if (source.charCodeAt(index + 1) === 0x2F) {\n                    ++index;\n                    ++index;\n                    if (extra.comments) {\n                        comment = source.slice(start + 2, index - 2);\n                        loc.end = {\n                            line: lineNumber,\n                            column: index - lineStart\n                        };\n                        addComment('Block', comment, start, index, loc);\n                    }\n                    return;\n                }\n                ++index;\n            } else {\n                ++index;\n            }\n        }\n\n        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n    }\n\n    function skipComment() {\n        var ch, start;\n\n        start = (index === 0);\n        while (index < length) {\n            ch = source.charCodeAt(index);\n\n            if (isWhiteSpace(ch)) {\n                ++index;\n            } else if (isLineTerminator(ch)) {\n                ++index;\n                if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                    ++index;\n                }\n                ++lineNumber;\n                lineStart = index;\n                start = true;\n            } else if (ch === 0x2F) { // U+002F is '/'\n                ch = source.charCodeAt(index + 1);\n                if (ch === 0x2F) {\n                    ++index;\n                    ++index;\n                    skipSingleLineComment(2);\n                    start = true;\n                } else if (ch === 0x2A) {  // U+002A is '*'\n                    ++index;\n                    ++index;\n                    skipMultiLineComment();\n                } else {\n                    break;\n                }\n            } else if (start && ch === 0x2D) { // U+002D is '-'\n                // U+003E is '>'\n                if ((source.charCodeAt(index + 1) === 0x2D) && (source.charCodeAt(index + 2) === 0x3E)) {\n                    // '-->' is a single-line comment\n                    index += 3;\n                    skipSingleLineComment(3);\n                } else {\n                    break;\n                }\n            } else if (ch === 0x3C) { // U+003C is '<'\n                if (source.slice(index + 1, index + 4) === '!--') {\n                    ++index; // `<`\n                    ++index; // `!`\n                    ++index; // `-`\n                    ++index; // `-`\n                    skipSingleLineComment(4);\n                } else {\n                    break;\n                }\n            } else {\n                break;\n            }\n        }\n    }\n\n    function scanHexEscape(prefix) {\n        var i, len, ch, code = 0;\n\n        len = (prefix === 'u') ? 4 : 2;\n        for (i = 0; i < len; ++i) {\n            if (index < length && isHexDigit(source[index])) {\n                ch = source[index++];\n                code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n            } else {\n                return '';\n            }\n        }\n        return String.fromCharCode(code);\n    }\n\n    function getEscapedIdentifier() {\n        var ch, id;\n\n        ch = source.charCodeAt(index++);\n        id = String.fromCharCode(ch);\n\n        // '\\u' (U+005C, U+0075) denotes an escaped character.\n        if (ch === 0x5C) {\n            if (source.charCodeAt(index) !== 0x75) {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n            ++index;\n            ch = scanHexEscape('u');\n            if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n            id = ch;\n        }\n\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (!isIdentifierPart(ch)) {\n                break;\n            }\n            ++index;\n            id += String.fromCharCode(ch);\n\n            // '\\u' (U+005C, U+0075) denotes an escaped character.\n            if (ch === 0x5C) {\n                id = id.substr(0, id.length - 1);\n                if (source.charCodeAt(index) !== 0x75) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n                ++index;\n                ch = scanHexEscape('u');\n                if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n                id += ch;\n            }\n        }\n\n        return id;\n    }\n\n    function getIdentifier() {\n        var start, ch;\n\n        start = index++;\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (ch === 0x5C) {\n                // Blackslash (U+005C) marks Unicode escape sequence.\n                index = start;\n                return getEscapedIdentifier();\n            }\n            if (isIdentifierPart(ch)) {\n                ++index;\n            } else {\n                break;\n            }\n        }\n\n        return source.slice(start, index);\n    }\n\n    function scanIdentifier() {\n        var start, id, type;\n\n        start = index;\n\n        // Backslash (U+005C) starts an escaped character.\n        id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n        // There is no keyword or literal with only one character.\n        // Thus, it must be an identifier.\n        if (id.length === 1) {\n            type = Token.Identifier;\n        } else if (isKeyword(id)) {\n            type = Token.Keyword;\n        } else if (id === 'null') {\n            type = Token.NullLiteral;\n        } else if (id === 'true' || id === 'false') {\n            type = Token.BooleanLiteral;\n        } else {\n            type = Token.Identifier;\n        }\n\n        return {\n            type: type,\n            value: id,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            start: start,\n            end: index\n        };\n    }\n\n\n    // 7.7 Punctuators\n\n    function scanPunctuator() {\n        var start = index,\n            code = source.charCodeAt(index),\n            code2,\n            ch1 = source[index],\n            ch2,\n            ch3,\n            ch4;\n\n        switch (code) {\n\n        // Check for most common single-character punctuators.\n        case 0x2E:  // . dot\n        case 0x28:  // ( open bracket\n        case 0x29:  // ) close bracket\n        case 0x3B:  // ; semicolon\n        case 0x2C:  // , comma\n        case 0x7B:  // { open curly brace\n        case 0x7D:  // } close curly brace\n        case 0x5B:  // [\n        case 0x5D:  // ]\n        case 0x3A:  // :\n        case 0x3F:  // ?\n        case 0x7E:  // ~\n            ++index;\n            if (extra.tokenize) {\n                if (code === 0x28) {\n                    extra.openParenToken = extra.tokens.length;\n                } else if (code === 0x7B) {\n                    extra.openCurlyToken = extra.tokens.length;\n                }\n            }\n            return {\n                type: Token.Punctuator,\n                value: String.fromCharCode(code),\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n\n        default:\n            code2 = source.charCodeAt(index + 1);\n\n            // '=' (U+003D) marks an assignment or comparison operator.\n            if (code2 === 0x3D) {\n                switch (code) {\n                case 0x2B:  // +\n                case 0x2D:  // -\n                case 0x2F:  // /\n                case 0x3C:  // <\n                case 0x3E:  // >\n                case 0x5E:  // ^\n                case 0x7C:  // |\n                case 0x25:  // %\n                case 0x26:  // &\n                case 0x2A:  // *\n                    index += 2;\n                    return {\n                        type: Token.Punctuator,\n                        value: String.fromCharCode(code) + String.fromCharCode(code2),\n                        lineNumber: lineNumber,\n                        lineStart: lineStart,\n                        start: start,\n                        end: index\n                    };\n\n                case 0x21: // !\n                case 0x3D: // =\n                    index += 2;\n\n                    // !== and ===\n                    if (source.charCodeAt(index) === 0x3D) {\n                        ++index;\n                    }\n                    return {\n                        type: Token.Punctuator,\n                        value: source.slice(start, index),\n                        lineNumber: lineNumber,\n                        lineStart: lineStart,\n                        start: start,\n                        end: index\n                    };\n                }\n            }\n        }\n\n        // 4-character punctuator: >>>=\n\n        ch4 = source.substr(index, 4);\n\n        if (ch4 === '>>>=') {\n            index += 4;\n            return {\n                type: Token.Punctuator,\n                value: ch4,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n        }\n\n        // 3-character punctuators: === !== >>> <<= >>=\n\n        ch3 = ch4.substr(0, 3);\n\n        if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n            index += 3;\n            return {\n                type: Token.Punctuator,\n                value: ch3,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n        }\n\n        // Other 2-character punctuators: ++ -- << >> && ||\n        ch2 = ch3.substr(0, 2);\n\n        if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n            index += 2;\n            return {\n                type: Token.Punctuator,\n                value: ch2,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n        }\n\n        // 1-character punctuators: < > = ! + - * % & | ^ /\n        if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n            ++index;\n            return {\n                type: Token.Punctuator,\n                value: ch1,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n        }\n\n        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n    }\n\n    // 7.8.3 Numeric Literals\n\n    function scanHexLiteral(start) {\n        var number = '';\n\n        while (index < length) {\n            if (!isHexDigit(source[index])) {\n                break;\n            }\n            number += source[index++];\n        }\n\n        if (number.length === 0) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        if (isIdentifierStart(source.charCodeAt(index))) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseInt('0x' + number, 16),\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            start: start,\n            end: index\n        };\n    }\n\n    function scanOctalLiteral(start) {\n        var number = '0' + source[index++];\n        while (index < length) {\n            if (!isOctalDigit(source[index])) {\n                break;\n            }\n            number += source[index++];\n        }\n\n        if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseInt(number, 8),\n            octal: true,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            start: start,\n            end: index\n        };\n    }\n\n    function isImplicitOctalLiteral() {\n        var i, ch;\n\n        // Implicit octal, unless there is a non-octal digit.\n        // (Annex B.1.1 on Numeric Literals)\n        for (i = index + 1; i < length; ++i) {\n            ch = source[i];\n            if (ch === '8' || ch === '9') {\n                return false;\n            }\n            if (!isOctalDigit(ch)) {\n                return true;\n            }\n        }\n\n        return true;\n    }\n\n    function scanNumericLiteral() {\n        var number, start, ch;\n\n        ch = source[index];\n        assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n            'Numeric literal must start with a decimal digit or a decimal point');\n\n        start = index;\n        number = '';\n        if (ch !== '.') {\n            number = source[index++];\n            ch = source[index];\n\n            // Hex number starts with '0x'.\n            // Octal number starts with '0'.\n            if (number === '0') {\n                if (ch === 'x' || ch === 'X') {\n                    ++index;\n                    return scanHexLiteral(start);\n                }\n                if (isOctalDigit(ch)) {\n                    if (isImplicitOctalLiteral()) {\n                        return scanOctalLiteral(start);\n                    }\n                }\n            }\n\n            while (isDecimalDigit(source.charCodeAt(index))) {\n                number += source[index++];\n            }\n            ch = source[index];\n        }\n\n        if (ch === '.') {\n            number += source[index++];\n            while (isDecimalDigit(source.charCodeAt(index))) {\n                number += source[index++];\n            }\n            ch = source[index];\n        }\n\n        if (ch === 'e' || ch === 'E') {\n            number += source[index++];\n\n            ch = source[index];\n            if (ch === '+' || ch === '-') {\n                number += source[index++];\n            }\n            if (isDecimalDigit(source.charCodeAt(index))) {\n                while (isDecimalDigit(source.charCodeAt(index))) {\n                    number += source[index++];\n                }\n            } else {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n        }\n\n        if (isIdentifierStart(source.charCodeAt(index))) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseFloat(number),\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            start: start,\n            end: index\n        };\n    }\n\n    // 7.8.4 String Literals\n\n    function scanStringLiteral() {\n        var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n        startLineNumber = lineNumber;\n        startLineStart = lineStart;\n\n        quote = source[index];\n        assert((quote === '\\'' || quote === '\"'),\n            'String literal must starts with a quote');\n\n        start = index;\n        ++index;\n\n        while (index < length) {\n            ch = source[index++];\n\n            if (ch === quote) {\n                quote = '';\n                break;\n            } else if (ch === '\\\\') {\n                ch = source[index++];\n                if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                    switch (ch) {\n                    case 'u':\n                    case 'x':\n                        restore = index;\n                        unescaped = scanHexEscape(ch);\n                        if (unescaped) {\n                            str += unescaped;\n                        } else {\n                            index = restore;\n                            str += ch;\n                        }\n                        break;\n                    case 'n':\n                        str += '\\n';\n                        break;\n                    case 'r':\n                        str += '\\r';\n                        break;\n                    case 't':\n                        str += '\\t';\n                        break;\n                    case 'b':\n                        str += '\\b';\n                        break;\n                    case 'f':\n                        str += '\\f';\n                        break;\n                    case 'v':\n                        str += '\\x0B';\n                        break;\n\n                    default:\n                        if (isOctalDigit(ch)) {\n                            code = '01234567'.indexOf(ch);\n\n                            // \\0 is not octal escape sequence\n                            if (code !== 0) {\n                                octal = true;\n                            }\n\n                            if (index < length && isOctalDigit(source[index])) {\n                                octal = true;\n                                code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                                // 3 digits are only allowed when string starts\n                                // with 0, 1, 2, 3\n                                if ('0123'.indexOf(ch) >= 0 &&\n                                        index < length &&\n                                        isOctalDigit(source[index])) {\n                                    code = code * 8 + '01234567'.indexOf(source[index++]);\n                                }\n                            }\n                            str += String.fromCharCode(code);\n                        } else {\n                            str += ch;\n                        }\n                        break;\n                    }\n                } else {\n                    ++lineNumber;\n                    if (ch ===  '\\r' && source[index] === '\\n') {\n                        ++index;\n                    }\n                    lineStart = index;\n                }\n            } else if (isLineTerminator(ch.charCodeAt(0))) {\n                break;\n            } else {\n                str += ch;\n            }\n        }\n\n        if (quote !== '') {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.StringLiteral,\n            value: str,\n            octal: octal,\n            startLineNumber: startLineNumber,\n            startLineStart: startLineStart,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            start: start,\n            end: index\n        };\n    }\n\n    function testRegExp(pattern, flags) {\n        var value;\n        try {\n            value = new RegExp(pattern, flags);\n        } catch (e) {\n            throwError({}, Messages.InvalidRegExp);\n        }\n        return value;\n    }\n\n    function scanRegExpBody() {\n        var ch, str, classMarker, terminated, body;\n\n        ch = source[index];\n        assert(ch === '/', 'Regular expression literal must start with a slash');\n        str = source[index++];\n\n        classMarker = false;\n        terminated = false;\n        while (index < length) {\n            ch = source[index++];\n            str += ch;\n            if (ch === '\\\\') {\n                ch = source[index++];\n                // ECMA-262 7.8.5\n                if (isLineTerminator(ch.charCodeAt(0))) {\n                    throwError({}, Messages.UnterminatedRegExp);\n                }\n                str += ch;\n            } else if (isLineTerminator(ch.charCodeAt(0))) {\n                throwError({}, Messages.UnterminatedRegExp);\n            } else if (classMarker) {\n                if (ch === ']') {\n                    classMarker = false;\n                }\n            } else {\n                if (ch === '/') {\n                    terminated = true;\n                    break;\n                } else if (ch === '[') {\n                    classMarker = true;\n                }\n            }\n        }\n\n        if (!terminated) {\n            throwError({}, Messages.UnterminatedRegExp);\n        }\n\n        // Exclude leading and trailing slash.\n        body = str.substr(1, str.length - 2);\n        return {\n            value: body,\n            literal: str\n        };\n    }\n\n    function scanRegExpFlags() {\n        var ch, str, flags, restore;\n\n        str = '';\n        flags = '';\n        while (index < length) {\n            ch = source[index];\n            if (!isIdentifierPart(ch.charCodeAt(0))) {\n                break;\n            }\n\n            ++index;\n            if (ch === '\\\\' && index < length) {\n                ch = source[index];\n                if (ch === 'u') {\n                    ++index;\n                    restore = index;\n                    ch = scanHexEscape('u');\n                    if (ch) {\n                        flags += ch;\n                        for (str += '\\\\u'; restore < index; ++restore) {\n                            str += source[restore];\n                        }\n                    } else {\n                        index = restore;\n                        flags += 'u';\n                        str += '\\\\u';\n                    }\n                    throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n                } else {\n                    str += '\\\\';\n                    throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n            } else {\n                flags += ch;\n                str += ch;\n            }\n        }\n\n        return {\n            value: flags,\n            literal: str\n        };\n    }\n\n    function scanRegExp() {\n        var start, body, flags, pattern, value;\n\n        lookahead = null;\n        skipComment();\n        start = index;\n\n        body = scanRegExpBody();\n        flags = scanRegExpFlags();\n        value = testRegExp(body.value, flags.value);\n\n        if (extra.tokenize) {\n            return {\n                type: Token.RegularExpression,\n                value: value,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n        }\n\n        return {\n            literal: body.literal + flags.literal,\n            value: value,\n            start: start,\n            end: index\n        };\n    }\n\n    function collectRegex() {\n        var pos, loc, regex, token;\n\n        skipComment();\n\n        pos = index;\n        loc = {\n            start: {\n                line: lineNumber,\n                column: index - lineStart\n            }\n        };\n\n        regex = scanRegExp();\n        loc.end = {\n            line: lineNumber,\n            column: index - lineStart\n        };\n\n        /* istanbul ignore next */\n        if (!extra.tokenize) {\n            // Pop the previous token, which is likely '/' or '/='\n            if (extra.tokens.length > 0) {\n                token = extra.tokens[extra.tokens.length - 1];\n                if (token.range[0] === pos && token.type === 'Punctuator') {\n                    if (token.value === '/' || token.value === '/=') {\n                        extra.tokens.pop();\n                    }\n                }\n            }\n\n            extra.tokens.push({\n                type: 'RegularExpression',\n                value: regex.literal,\n                range: [pos, index],\n                loc: loc\n            });\n        }\n\n        return regex;\n    }\n\n    function isIdentifierName(token) {\n        return token.type === Token.Identifier ||\n            token.type === Token.Keyword ||\n            token.type === Token.BooleanLiteral ||\n            token.type === Token.NullLiteral;\n    }\n\n    function advanceSlash() {\n        var prevToken,\n            checkToken;\n        // Using the following algorithm:\n        // https://github.com/mozilla/sweet.js/wiki/design\n        prevToken = extra.tokens[extra.tokens.length - 1];\n        if (!prevToken) {\n            // Nothing before that: it cannot be a division.\n            return collectRegex();\n        }\n        if (prevToken.type === 'Punctuator') {\n            if (prevToken.value === ']') {\n                return scanPunctuator();\n            }\n            if (prevToken.value === ')') {\n                checkToken = extra.tokens[extra.openParenToken - 1];\n                if (checkToken &&\n                        checkToken.type === 'Keyword' &&\n                        (checkToken.value === 'if' ||\n                         checkToken.value === 'while' ||\n                         checkToken.value === 'for' ||\n                         checkToken.value === 'with')) {\n                    return collectRegex();\n                }\n                return scanPunctuator();\n            }\n            if (prevToken.value === '}') {\n                // Dividing a function by anything makes little sense,\n                // but we have to check for that.\n                if (extra.tokens[extra.openCurlyToken - 3] &&\n                        extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                    // Anonymous function.\n                    checkToken = extra.tokens[extra.openCurlyToken - 4];\n                    if (!checkToken) {\n                        return scanPunctuator();\n                    }\n                } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                        extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                    // Named function.\n                    checkToken = extra.tokens[extra.openCurlyToken - 5];\n                    if (!checkToken) {\n                        return collectRegex();\n                    }\n                } else {\n                    return scanPunctuator();\n                }\n                // checkToken determines whether the function is\n                // a declaration or an expression.\n                if (FnExprTokens.indexOf(checkToken.value) >= 0) {\n                    // It is an expression.\n                    return scanPunctuator();\n                }\n                // It is a declaration.\n                return collectRegex();\n            }\n            return collectRegex();\n        }\n        if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n            return collectRegex();\n        }\n        return scanPunctuator();\n    }\n\n    function advance() {\n        var ch;\n\n        skipComment();\n\n        if (index >= length) {\n            return {\n                type: Token.EOF,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: index,\n                end: index\n            };\n        }\n\n        ch = source.charCodeAt(index);\n\n        if (isIdentifierStart(ch)) {\n            return scanIdentifier();\n        }\n\n        // Very common: ( and ) and ;\n        if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n            return scanPunctuator();\n        }\n\n        // String literal starts with single quote (U+0027) or double quote (U+0022).\n        if (ch === 0x27 || ch === 0x22) {\n            return scanStringLiteral();\n        }\n\n\n        // Dot (.) U+002E can also start a floating-point number, hence the need\n        // to check the next character.\n        if (ch === 0x2E) {\n            if (isDecimalDigit(source.charCodeAt(index + 1))) {\n                return scanNumericLiteral();\n            }\n            return scanPunctuator();\n        }\n\n        if (isDecimalDigit(ch)) {\n            return scanNumericLiteral();\n        }\n\n        // Slash (/) U+002F can also start a regex.\n        if (extra.tokenize && ch === 0x2F) {\n            return advanceSlash();\n        }\n\n        return scanPunctuator();\n    }\n\n    function collectToken() {\n        var loc, token, range, value;\n\n        skipComment();\n        loc = {\n            start: {\n                line: lineNumber,\n                column: index - lineStart\n            }\n        };\n\n        token = advance();\n        loc.end = {\n            line: lineNumber,\n            column: index - lineStart\n        };\n\n        if (token.type !== Token.EOF) {\n            value = source.slice(token.start, token.end);\n            extra.tokens.push({\n                type: TokenName[token.type],\n                value: value,\n                range: [token.start, token.end],\n                loc: loc\n            });\n        }\n\n        return token;\n    }\n\n    function lex() {\n        var token;\n\n        token = lookahead;\n        index = token.end;\n        lineNumber = token.lineNumber;\n        lineStart = token.lineStart;\n\n        lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n        index = token.end;\n        lineNumber = token.lineNumber;\n        lineStart = token.lineStart;\n\n        return token;\n    }\n\n    function peek() {\n        var pos, line, start;\n\n        pos = index;\n        line = lineNumber;\n        start = lineStart;\n        lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n        index = pos;\n        lineNumber = line;\n        lineStart = start;\n    }\n\n    function Position(line, column) {\n        this.line = line;\n        this.column = column;\n    }\n\n    function SourceLocation(startLine, startColumn, line, column) {\n        this.start = new Position(startLine, startColumn);\n        this.end = new Position(line, column);\n    }\n\n    SyntaxTreeDelegate = {\n\n        name: 'SyntaxTree',\n\n        processComment: function (node) {\n            var lastChild, trailingComments;\n\n            if (node.type === Syntax.Program) {\n                if (node.body.length > 0) {\n                    return;\n                }\n            }\n\n            if (extra.trailingComments.length > 0) {\n                if (extra.trailingComments[0].range[0] >= node.range[1]) {\n                    trailingComments = extra.trailingComments;\n                    extra.trailingComments = [];\n                } else {\n                    extra.trailingComments.length = 0;\n                }\n            } else {\n                if (extra.bottomRightStack.length > 0 &&\n                        extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments &&\n                        extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments[0].range[0] >= node.range[1]) {\n                    trailingComments = extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments;\n                    delete extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments;\n                }\n            }\n\n            // Eating the stack.\n            while (extra.bottomRightStack.length > 0 && extra.bottomRightStack[extra.bottomRightStack.length - 1].range[0] >= node.range[0]) {\n                lastChild = extra.bottomRightStack.pop();\n            }\n\n            if (lastChild) {\n                if (lastChild.leadingComments && lastChild.leadingComments[lastChild.leadingComments.length - 1].range[1] <= node.range[0]) {\n                    node.leadingComments = lastChild.leadingComments;\n                    delete lastChild.leadingComments;\n                }\n            } else if (extra.leadingComments.length > 0 && extra.leadingComments[extra.leadingComments.length - 1].range[1] <= node.range[0]) {\n                node.leadingComments = extra.leadingComments;\n                extra.leadingComments = [];\n            }\n\n\n            if (trailingComments) {\n                node.trailingComments = trailingComments;\n            }\n\n            extra.bottomRightStack.push(node);\n        },\n\n        markEnd: function (node, startToken) {\n            if (extra.range) {\n                node.range = [startToken.start, index];\n            }\n            if (extra.loc) {\n                node.loc = new SourceLocation(\n                    startToken.startLineNumber === undefined ?  startToken.lineNumber : startToken.startLineNumber,\n                    startToken.start - (startToken.startLineStart === undefined ?  startToken.lineStart : startToken.startLineStart),\n                    lineNumber,\n                    index - lineStart\n                );\n                this.postProcess(node);\n            }\n\n            if (extra.attachComment) {\n                this.processComment(node);\n            }\n            return node;\n        },\n\n        postProcess: function (node) {\n            if (extra.source) {\n                node.loc.source = extra.source;\n            }\n            return node;\n        },\n\n        createArrayExpression: function (elements) {\n            return {\n                type: Syntax.ArrayExpression,\n                elements: elements\n            };\n        },\n\n        createAssignmentExpression: function (operator, left, right) {\n            return {\n                type: Syntax.AssignmentExpression,\n                operator: operator,\n                left: left,\n                right: right\n            };\n        },\n\n        createBinaryExpression: function (operator, left, right) {\n            var type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression :\n                        Syntax.BinaryExpression;\n            return {\n                type: type,\n                operator: operator,\n                left: left,\n                right: right\n            };\n        },\n\n        createBlockStatement: function (body) {\n            return {\n                type: Syntax.BlockStatement,\n                body: body\n            };\n        },\n\n        createBreakStatement: function (label) {\n            return {\n                type: Syntax.BreakStatement,\n                label: label\n            };\n        },\n\n        createCallExpression: function (callee, args) {\n            return {\n                type: Syntax.CallExpression,\n                callee: callee,\n                'arguments': args\n            };\n        },\n\n        createCatchClause: function (param, body) {\n            return {\n                type: Syntax.CatchClause,\n                param: param,\n                body: body\n            };\n        },\n\n        createConditionalExpression: function (test, consequent, alternate) {\n            return {\n                type: Syntax.ConditionalExpression,\n                test: test,\n                consequent: consequent,\n                alternate: alternate\n            };\n        },\n\n        createContinueStatement: function (label) {\n            return {\n                type: Syntax.ContinueStatement,\n                label: label\n            };\n        },\n\n        createDebuggerStatement: function () {\n            return {\n                type: Syntax.DebuggerStatement\n            };\n        },\n\n        createDoWhileStatement: function (body, test) {\n            return {\n                type: Syntax.DoWhileStatement,\n                body: body,\n                test: test\n            };\n        },\n\n        createEmptyStatement: function () {\n            return {\n                type: Syntax.EmptyStatement\n            };\n        },\n\n        createExpressionStatement: function (expression) {\n            return {\n                type: Syntax.ExpressionStatement,\n                expression: expression\n            };\n        },\n\n        createForStatement: function (init, test, update, body) {\n            return {\n                type: Syntax.ForStatement,\n                init: init,\n                test: test,\n                update: update,\n                body: body\n            };\n        },\n\n        createForInStatement: function (left, right, body) {\n            return {\n                type: Syntax.ForInStatement,\n                left: left,\n                right: right,\n                body: body,\n                each: false\n            };\n        },\n\n        createFunctionDeclaration: function (id, params, defaults, body) {\n            return {\n                type: Syntax.FunctionDeclaration,\n                id: id,\n                params: params,\n                defaults: defaults,\n                body: body,\n                rest: null,\n                generator: false,\n                expression: false\n            };\n        },\n\n        createFunctionExpression: function (id, params, defaults, body) {\n            return {\n                type: Syntax.FunctionExpression,\n                id: id,\n                params: params,\n                defaults: defaults,\n                body: body,\n                rest: null,\n                generator: false,\n                expression: false\n            };\n        },\n\n        createIdentifier: function (name) {\n            return {\n                type: Syntax.Identifier,\n                name: name\n            };\n        },\n\n        createIfStatement: function (test, consequent, alternate) {\n            return {\n                type: Syntax.IfStatement,\n                test: test,\n                consequent: consequent,\n                alternate: alternate\n            };\n        },\n\n        createLabeledStatement: function (label, body) {\n            return {\n                type: Syntax.LabeledStatement,\n                label: label,\n                body: body\n            };\n        },\n\n        createLiteral: function (token) {\n            return {\n                type: Syntax.Literal,\n                value: token.value,\n                raw: source.slice(token.start, token.end)\n            };\n        },\n\n        createMemberExpression: function (accessor, object, property) {\n            return {\n                type: Syntax.MemberExpression,\n                computed: accessor === '[',\n                object: object,\n                property: property\n            };\n        },\n\n        createNewExpression: function (callee, args) {\n            return {\n                type: Syntax.NewExpression,\n                callee: callee,\n                'arguments': args\n            };\n        },\n\n        createObjectExpression: function (properties) {\n            return {\n                type: Syntax.ObjectExpression,\n                properties: properties\n            };\n        },\n\n        createPostfixExpression: function (operator, argument) {\n            return {\n                type: Syntax.UpdateExpression,\n                operator: operator,\n                argument: argument,\n                prefix: false\n            };\n        },\n\n        createProgram: function (body) {\n            return {\n                type: Syntax.Program,\n                body: body\n            };\n        },\n\n        createProperty: function (kind, key, value) {\n            return {\n                type: Syntax.Property,\n                key: key,\n                value: value,\n                kind: kind\n            };\n        },\n\n        createReturnStatement: function (argument) {\n            return {\n                type: Syntax.ReturnStatement,\n                argument: argument\n            };\n        },\n\n        createSequenceExpression: function (expressions) {\n            return {\n                type: Syntax.SequenceExpression,\n                expressions: expressions\n            };\n        },\n\n        createSwitchCase: function (test, consequent) {\n            return {\n                type: Syntax.SwitchCase,\n                test: test,\n                consequent: consequent\n            };\n        },\n\n        createSwitchStatement: function (discriminant, cases) {\n            return {\n                type: Syntax.SwitchStatement,\n                discriminant: discriminant,\n                cases: cases\n            };\n        },\n\n        createThisExpression: function () {\n            return {\n                type: Syntax.ThisExpression\n            };\n        },\n\n        createThrowStatement: function (argument) {\n            return {\n                type: Syntax.ThrowStatement,\n                argument: argument\n            };\n        },\n\n        createTryStatement: function (block, guardedHandlers, handlers, finalizer) {\n            return {\n                type: Syntax.TryStatement,\n                block: block,\n                guardedHandlers: guardedHandlers,\n                handlers: handlers,\n                finalizer: finalizer\n            };\n        },\n\n        createUnaryExpression: function (operator, argument) {\n            if (operator === '++' || operator === '--') {\n                return {\n                    type: Syntax.UpdateExpression,\n                    operator: operator,\n                    argument: argument,\n                    prefix: true\n                };\n            }\n            return {\n                type: Syntax.UnaryExpression,\n                operator: operator,\n                argument: argument,\n                prefix: true\n            };\n        },\n\n        createVariableDeclaration: function (declarations, kind) {\n            return {\n                type: Syntax.VariableDeclaration,\n                declarations: declarations,\n                kind: kind\n            };\n        },\n\n        createVariableDeclarator: function (id, init) {\n            return {\n                type: Syntax.VariableDeclarator,\n                id: id,\n                init: init\n            };\n        },\n\n        createWhileStatement: function (test, body) {\n            return {\n                type: Syntax.WhileStatement,\n                test: test,\n                body: body\n            };\n        },\n\n        createWithStatement: function (object, body) {\n            return {\n                type: Syntax.WithStatement,\n                object: object,\n                body: body\n            };\n        }\n    };\n\n    // Return true if there is a line terminator before the next token.\n\n    function peekLineTerminator() {\n        var pos, line, start, found;\n\n        pos = index;\n        line = lineNumber;\n        start = lineStart;\n        skipComment();\n        found = lineNumber !== line;\n        index = pos;\n        lineNumber = line;\n        lineStart = start;\n\n        return found;\n    }\n\n    // Throw an exception\n\n    function throwError(token, messageFormat) {\n        var error,\n            args = Array.prototype.slice.call(arguments, 2),\n            msg = messageFormat.replace(\n                /%(\\d)/g,\n                function (whole, index) {\n                    assert(index < args.length, 'Message reference must be in range');\n                    return args[index];\n                }\n            );\n\n        if (typeof token.lineNumber === 'number') {\n            error = new Error('Line ' + token.lineNumber + ': ' + msg);\n            error.index = token.start;\n            error.lineNumber = token.lineNumber;\n            error.column = token.start - lineStart + 1;\n        } else {\n            error = new Error('Line ' + lineNumber + ': ' + msg);\n            error.index = index;\n            error.lineNumber = lineNumber;\n            error.column = index - lineStart + 1;\n        }\n\n        error.description = msg;\n        throw error;\n    }\n\n    function throwErrorTolerant() {\n        try {\n            throwError.apply(null, arguments);\n        } catch (e) {\n            if (extra.errors) {\n                extra.errors.push(e);\n            } else {\n                throw e;\n            }\n        }\n    }\n\n\n    // Throw an exception because of the token.\n\n    function throwUnexpected(token) {\n        if (token.type === Token.EOF) {\n            throwError(token, Messages.UnexpectedEOS);\n        }\n\n        if (token.type === Token.NumericLiteral) {\n            throwError(token, Messages.UnexpectedNumber);\n        }\n\n        if (token.type === Token.StringLiteral) {\n            throwError(token, Messages.UnexpectedString);\n        }\n\n        if (token.type === Token.Identifier) {\n            throwError(token, Messages.UnexpectedIdentifier);\n        }\n\n        if (token.type === Token.Keyword) {\n            if (isFutureReservedWord(token.value)) {\n                throwError(token, Messages.UnexpectedReserved);\n            } else if (strict && isStrictModeReservedWord(token.value)) {\n                throwErrorTolerant(token, Messages.StrictReservedWord);\n                return;\n            }\n            throwError(token, Messages.UnexpectedToken, token.value);\n        }\n\n        // BooleanLiteral, NullLiteral, or Punctuator.\n        throwError(token, Messages.UnexpectedToken, token.value);\n    }\n\n    // Expect the next token to match the specified punctuator.\n    // If not, an exception will be thrown.\n\n    function expect(value) {\n        var token = lex();\n        if (token.type !== Token.Punctuator || token.value !== value) {\n            throwUnexpected(token);\n        }\n    }\n\n    // Expect the next token to match the specified keyword.\n    // If not, an exception will be thrown.\n\n    function expectKeyword(keyword) {\n        var token = lex();\n        if (token.type !== Token.Keyword || token.value !== keyword) {\n            throwUnexpected(token);\n        }\n    }\n\n    // Return true if the next token matches the specified punctuator.\n\n    function match(value) {\n        return lookahead.type === Token.Punctuator && lookahead.value === value;\n    }\n\n    // Return true if the next token matches the specified keyword\n\n    function matchKeyword(keyword) {\n        return lookahead.type === Token.Keyword && lookahead.value === keyword;\n    }\n\n    // Return true if the next token is an assignment operator\n\n    function matchAssign() {\n        var op;\n\n        if (lookahead.type !== Token.Punctuator) {\n            return false;\n        }\n        op = lookahead.value;\n        return op === '=' ||\n            op === '*=' ||\n            op === '/=' ||\n            op === '%=' ||\n            op === '+=' ||\n            op === '-=' ||\n            op === '<<=' ||\n            op === '>>=' ||\n            op === '>>>=' ||\n            op === '&=' ||\n            op === '^=' ||\n            op === '|=';\n    }\n\n    function consumeSemicolon() {\n        var line, oldIndex = index, oldLineNumber = lineNumber,\n            oldLineStart = lineStart, oldLookahead = lookahead;\n\n        // Catch the very common case first: immediately a semicolon (U+003B).\n        if (source.charCodeAt(index) === 0x3B || match(';')) {\n            lex();\n            return;\n        }\n\n        line = lineNumber;\n        skipComment();\n        if (lineNumber !== line) {\n            index = oldIndex;\n            lineNumber = oldLineNumber;\n            lineStart = oldLineStart;\n            lookahead = oldLookahead;\n            return;\n        }\n\n        if (lookahead.type !== Token.EOF && !match('}')) {\n            throwUnexpected(lookahead);\n        }\n    }\n\n    // Return true if provided expression is LeftHandSideExpression\n\n    function isLeftHandSide(expr) {\n        return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n    }\n\n    // 11.1.4 Array Initialiser\n\n    function parseArrayInitialiser() {\n        var elements = [], startToken;\n\n        startToken = lookahead;\n        expect('[');\n\n        while (!match(']')) {\n            if (match(',')) {\n                lex();\n                elements.push(null);\n            } else {\n                elements.push(parseAssignmentExpression());\n\n                if (!match(']')) {\n                    expect(',');\n                }\n            }\n        }\n\n        lex();\n\n        return delegate.markEnd(delegate.createArrayExpression(elements), startToken);\n    }\n\n    // 11.1.5 Object Initialiser\n\n    function parsePropertyFunction(param, first) {\n        var previousStrict, body, startToken;\n\n        previousStrict = strict;\n        startToken = lookahead;\n        body = parseFunctionSourceElements();\n        if (first && strict && isRestrictedWord(param[0].name)) {\n            throwErrorTolerant(first, Messages.StrictParamName);\n        }\n        strict = previousStrict;\n        return delegate.markEnd(delegate.createFunctionExpression(null, param, [], body), startToken);\n    }\n\n    function parseObjectPropertyKey() {\n        var token, startToken;\n\n        startToken = lookahead;\n        token = lex();\n\n        // Note: This function is called only from parseObjectProperty(), where\n        // EOF and Punctuator tokens are already filtered out.\n\n        if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n            if (strict && token.octal) {\n                throwErrorTolerant(token, Messages.StrictOctalLiteral);\n            }\n            return delegate.markEnd(delegate.createLiteral(token), startToken);\n        }\n\n        return delegate.markEnd(delegate.createIdentifier(token.value), startToken);\n    }\n\n    function parseObjectProperty() {\n        var token, key, id, value, param, startToken;\n\n        token = lookahead;\n        startToken = lookahead;\n\n        if (token.type === Token.Identifier) {\n\n            id = parseObjectPropertyKey();\n\n            // Property Assignment: Getter and Setter.\n\n            if (token.value === 'get' && !match(':')) {\n                key = parseObjectPropertyKey();\n                expect('(');\n                expect(')');\n                value = parsePropertyFunction([]);\n                return delegate.markEnd(delegate.createProperty('get', key, value), startToken);\n            }\n            if (token.value === 'set' && !match(':')) {\n                key = parseObjectPropertyKey();\n                expect('(');\n                token = lookahead;\n                if (token.type !== Token.Identifier) {\n                    expect(')');\n                    throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n                    value = parsePropertyFunction([]);\n                } else {\n                    param = [ parseVariableIdentifier() ];\n                    expect(')');\n                    value = parsePropertyFunction(param, token);\n                }\n                return delegate.markEnd(delegate.createProperty('set', key, value), startToken);\n            }\n            expect(':');\n            value = parseAssignmentExpression();\n            return delegate.markEnd(delegate.createProperty('init', id, value), startToken);\n        }\n        if (token.type === Token.EOF || token.type === Token.Punctuator) {\n            throwUnexpected(token);\n        } else {\n            key = parseObjectPropertyKey();\n            expect(':');\n            value = parseAssignmentExpression();\n            return delegate.markEnd(delegate.createProperty('init', key, value), startToken);\n        }\n    }\n\n    function parseObjectInitialiser() {\n        var properties = [], property, name, key, kind, map = {}, toString = String, startToken;\n\n        startToken = lookahead;\n\n        expect('{');\n\n        while (!match('}')) {\n            property = parseObjectProperty();\n\n            if (property.key.type === Syntax.Identifier) {\n                name = property.key.name;\n            } else {\n                name = toString(property.key.value);\n            }\n            kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n            key = '$' + name;\n            if (Object.prototype.hasOwnProperty.call(map, key)) {\n                if (map[key] === PropertyKind.Data) {\n                    if (strict && kind === PropertyKind.Data) {\n                        throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                    } else if (kind !== PropertyKind.Data) {\n                        throwErrorTolerant({}, Messages.AccessorDataProperty);\n                    }\n                } else {\n                    if (kind === PropertyKind.Data) {\n                        throwErrorTolerant({}, Messages.AccessorDataProperty);\n                    } else if (map[key] & kind) {\n                        throwErrorTolerant({}, Messages.AccessorGetSet);\n                    }\n                }\n                map[key] |= kind;\n            } else {\n                map[key] = kind;\n            }\n\n            properties.push(property);\n\n            if (!match('}')) {\n                expect(',');\n            }\n        }\n\n        expect('}');\n\n        return delegate.markEnd(delegate.createObjectExpression(properties), startToken);\n    }\n\n    // 11.1.6 The Grouping Operator\n\n    function parseGroupExpression() {\n        var expr;\n\n        expect('(');\n\n        expr = parseExpression();\n\n        expect(')');\n\n        return expr;\n    }\n\n\n    // 11.1 Primary Expressions\n\n    function parsePrimaryExpression() {\n        var type, token, expr, startToken;\n\n        if (match('(')) {\n            return parseGroupExpression();\n        }\n\n        if (match('[')) {\n            return parseArrayInitialiser();\n        }\n\n        if (match('{')) {\n            return parseObjectInitialiser();\n        }\n\n        type = lookahead.type;\n        startToken = lookahead;\n\n        if (type === Token.Identifier) {\n            expr =  delegate.createIdentifier(lex().value);\n        } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n            if (strict && lookahead.octal) {\n                throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n            }\n            expr = delegate.createLiteral(lex());\n        } else if (type === Token.Keyword) {\n            if (matchKeyword('function')) {\n                return parseFunctionExpression();\n            }\n            if (matchKeyword('this')) {\n                lex();\n                expr = delegate.createThisExpression();\n            } else {\n                throwUnexpected(lex());\n            }\n        } else if (type === Token.BooleanLiteral) {\n            token = lex();\n            token.value = (token.value === 'true');\n            expr = delegate.createLiteral(token);\n        } else if (type === Token.NullLiteral) {\n            token = lex();\n            token.value = null;\n            expr = delegate.createLiteral(token);\n        } else if (match('/') || match('/=')) {\n            if (typeof extra.tokens !== 'undefined') {\n                expr = delegate.createLiteral(collectRegex());\n            } else {\n                expr = delegate.createLiteral(scanRegExp());\n            }\n            peek();\n        } else {\n            throwUnexpected(lex());\n        }\n\n        return delegate.markEnd(expr, startToken);\n    }\n\n    // 11.2 Left-Hand-Side Expressions\n\n    function parseArguments() {\n        var args = [];\n\n        expect('(');\n\n        if (!match(')')) {\n            while (index < length) {\n                args.push(parseAssignmentExpression());\n                if (match(')')) {\n                    break;\n                }\n                expect(',');\n            }\n        }\n\n        expect(')');\n\n        return args;\n    }\n\n    function parseNonComputedProperty() {\n        var token, startToken;\n\n        startToken = lookahead;\n        token = lex();\n\n        if (!isIdentifierName(token)) {\n            throwUnexpected(token);\n        }\n\n        return delegate.markEnd(delegate.createIdentifier(token.value), startToken);\n    }\n\n    function parseNonComputedMember() {\n        expect('.');\n\n        return parseNonComputedProperty();\n    }\n\n    function parseComputedMember() {\n        var expr;\n\n        expect('[');\n\n        expr = parseExpression();\n\n        expect(']');\n\n        return expr;\n    }\n\n    function parseNewExpression() {\n        var callee, args, startToken;\n\n        startToken = lookahead;\n        expectKeyword('new');\n        callee = parseLeftHandSideExpression();\n        args = match('(') ? parseArguments() : [];\n\n        return delegate.markEnd(delegate.createNewExpression(callee, args), startToken);\n    }\n\n    function parseLeftHandSideExpressionAllowCall() {\n        var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n        startToken = lookahead;\n        state.allowIn = true;\n        expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\n\n        for (;;) {\n            if (match('.')) {\n                property = parseNonComputedMember();\n                expr = delegate.createMemberExpression('.', expr, property);\n            } else if (match('(')) {\n                args = parseArguments();\n                expr = delegate.createCallExpression(expr, args);\n            } else if (match('[')) {\n                property = parseComputedMember();\n                expr = delegate.createMemberExpression('[', expr, property);\n            } else {\n                break;\n            }\n            delegate.markEnd(expr, startToken);\n        }\n        state.allowIn = previousAllowIn;\n\n        return expr;\n    }\n\n    function parseLeftHandSideExpression() {\n        var expr, property, startToken;\n        assert(state.allowIn, 'callee of new expression always allow in keyword.');\n\n        startToken = lookahead;\n\n        expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\n\n        while (match('.') || match('[')) {\n            if (match('[')) {\n                property = parseComputedMember();\n                expr = delegate.createMemberExpression('[', expr, property);\n            } else {\n                property = parseNonComputedMember();\n                expr = delegate.createMemberExpression('.', expr, property);\n            }\n            delegate.markEnd(expr, startToken);\n        }\n        return expr;\n    }\n\n    // 11.3 Postfix Expressions\n\n    function parsePostfixExpression() {\n        var expr, token, startToken = lookahead;\n\n        expr = parseLeftHandSideExpressionAllowCall();\n\n        if (lookahead.type === Token.Punctuator) {\n            if ((match('++') || match('--')) && !peekLineTerminator()) {\n                // 11.3.1, 11.3.2\n                if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\n                    throwErrorTolerant({}, Messages.StrictLHSPostfix);\n                }\n\n                if (!isLeftHandSide(expr)) {\n                    throwErrorTolerant({}, Messages.InvalidLHSInAssignment);\n                }\n\n                token = lex();\n                expr = delegate.markEnd(delegate.createPostfixExpression(token.value, expr), startToken);\n            }\n        }\n\n        return expr;\n    }\n\n    // 11.4 Unary Operators\n\n    function parseUnaryExpression() {\n        var token, expr, startToken;\n\n        if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n            expr = parsePostfixExpression();\n        } else if (match('++') || match('--')) {\n            startToken = lookahead;\n            token = lex();\n            expr = parseUnaryExpression();\n            // 11.4.4, 11.4.5\n            if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\n                throwErrorTolerant({}, Messages.StrictLHSPrefix);\n            }\n\n            if (!isLeftHandSide(expr)) {\n                throwErrorTolerant({}, Messages.InvalidLHSInAssignment);\n            }\n\n            expr = delegate.createUnaryExpression(token.value, expr);\n            expr = delegate.markEnd(expr, startToken);\n        } else if (match('+') || match('-') || match('~') || match('!')) {\n            startToken = lookahead;\n            token = lex();\n            expr = parseUnaryExpression();\n            expr = delegate.createUnaryExpression(token.value, expr);\n            expr = delegate.markEnd(expr, startToken);\n        } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n            startToken = lookahead;\n            token = lex();\n            expr = parseUnaryExpression();\n            expr = delegate.createUnaryExpression(token.value, expr);\n            expr = delegate.markEnd(expr, startToken);\n            if (strict && expr.operator === 'delete' && expr.argument.type === Syntax.Identifier) {\n                throwErrorTolerant({}, Messages.StrictDelete);\n            }\n        } else {\n            expr = parsePostfixExpression();\n        }\n\n        return expr;\n    }\n\n    function binaryPrecedence(token, allowIn) {\n        var prec = 0;\n\n        if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n            return 0;\n        }\n\n        switch (token.value) {\n        case '||':\n            prec = 1;\n            break;\n\n        case '&&':\n            prec = 2;\n            break;\n\n        case '|':\n            prec = 3;\n            break;\n\n        case '^':\n            prec = 4;\n            break;\n\n        case '&':\n            prec = 5;\n            break;\n\n        case '==':\n        case '!=':\n        case '===':\n        case '!==':\n            prec = 6;\n            break;\n\n        case '<':\n        case '>':\n        case '<=':\n        case '>=':\n        case 'instanceof':\n            prec = 7;\n            break;\n\n        case 'in':\n            prec = allowIn ? 7 : 0;\n            break;\n\n        case '<<':\n        case '>>':\n        case '>>>':\n            prec = 8;\n            break;\n\n        case '+':\n        case '-':\n            prec = 9;\n            break;\n\n        case '*':\n        case '/':\n        case '%':\n            prec = 11;\n            break;\n\n        default:\n            break;\n        }\n\n        return prec;\n    }\n\n    // 11.5 Multiplicative Operators\n    // 11.6 Additive Operators\n    // 11.7 Bitwise Shift Operators\n    // 11.8 Relational Operators\n    // 11.9 Equality Operators\n    // 11.10 Binary Bitwise Operators\n    // 11.11 Binary Logical Operators\n\n    function parseBinaryExpression() {\n        var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n        marker = lookahead;\n        left = parseUnaryExpression();\n\n        token = lookahead;\n        prec = binaryPrecedence(token, state.allowIn);\n        if (prec === 0) {\n            return left;\n        }\n        token.prec = prec;\n        lex();\n\n        markers = [marker, lookahead];\n        right = parseUnaryExpression();\n\n        stack = [left, token, right];\n\n        while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n            // Reduce: make a binary expression from the three topmost entries.\n            while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n                right = stack.pop();\n                operator = stack.pop().value;\n                left = stack.pop();\n                expr = delegate.createBinaryExpression(operator, left, right);\n                markers.pop();\n                marker = markers[markers.length - 1];\n                delegate.markEnd(expr, marker);\n                stack.push(expr);\n            }\n\n            // Shift.\n            token = lex();\n            token.prec = prec;\n            stack.push(token);\n            markers.push(lookahead);\n            expr = parseUnaryExpression();\n            stack.push(expr);\n        }\n\n        // Final reduce to clean-up the stack.\n        i = stack.length - 1;\n        expr = stack[i];\n        markers.pop();\n        while (i > 1) {\n            expr = delegate.createBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n            i -= 2;\n            marker = markers.pop();\n            delegate.markEnd(expr, marker);\n        }\n\n        return expr;\n    }\n\n\n    // 11.12 Conditional Operator\n\n    function parseConditionalExpression() {\n        var expr, previousAllowIn, consequent, alternate, startToken;\n\n        startToken = lookahead;\n\n        expr = parseBinaryExpression();\n\n        if (match('?')) {\n            lex();\n            previousAllowIn = state.allowIn;\n            state.allowIn = true;\n            consequent = parseAssignmentExpression();\n            state.allowIn = previousAllowIn;\n            expect(':');\n            alternate = parseAssignmentExpression();\n\n            expr = delegate.createConditionalExpression(expr, consequent, alternate);\n            delegate.markEnd(expr, startToken);\n        }\n\n        return expr;\n    }\n\n    // 11.13 Assignment Operators\n\n    function parseAssignmentExpression() {\n        var token, left, right, node, startToken;\n\n        token = lookahead;\n        startToken = lookahead;\n\n        node = left = parseConditionalExpression();\n\n        if (matchAssign()) {\n            // LeftHandSideExpression\n            if (!isLeftHandSide(left)) {\n                throwErrorTolerant({}, Messages.InvalidLHSInAssignment);\n            }\n\n            // 11.13.1\n            if (strict && left.type === Syntax.Identifier && isRestrictedWord(left.name)) {\n                throwErrorTolerant(token, Messages.StrictLHSAssignment);\n            }\n\n            token = lex();\n            right = parseAssignmentExpression();\n            node = delegate.markEnd(delegate.createAssignmentExpression(token.value, left, right), startToken);\n        }\n\n        return node;\n    }\n\n    // 11.14 Comma Operator\n\n    function parseExpression() {\n        var expr, startToken = lookahead;\n\n        expr = parseAssignmentExpression();\n\n        if (match(',')) {\n            expr = delegate.createSequenceExpression([ expr ]);\n\n            while (index < length) {\n                if (!match(',')) {\n                    break;\n                }\n                lex();\n                expr.expressions.push(parseAssignmentExpression());\n            }\n\n            delegate.markEnd(expr, startToken);\n        }\n\n        return expr;\n    }\n\n    // 12.1 Block\n\n    function parseStatementList() {\n        var list = [],\n            statement;\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            statement = parseSourceElement();\n            if (typeof statement === 'undefined') {\n                break;\n            }\n            list.push(statement);\n        }\n\n        return list;\n    }\n\n    function parseBlock() {\n        var block, startToken;\n\n        startToken = lookahead;\n        expect('{');\n\n        block = parseStatementList();\n\n        expect('}');\n\n        return delegate.markEnd(delegate.createBlockStatement(block), startToken);\n    }\n\n    // 12.2 Variable Statement\n\n    function parseVariableIdentifier() {\n        var token, startToken;\n\n        startToken = lookahead;\n        token = lex();\n\n        if (token.type !== Token.Identifier) {\n            throwUnexpected(token);\n        }\n\n        return delegate.markEnd(delegate.createIdentifier(token.value), startToken);\n    }\n\n    function parseVariableDeclaration(kind) {\n        var init = null, id, startToken;\n\n        startToken = lookahead;\n        id = parseVariableIdentifier();\n\n        // 12.2.1\n        if (strict && isRestrictedWord(id.name)) {\n            throwErrorTolerant({}, Messages.StrictVarName);\n        }\n\n        if (kind === 'const') {\n            expect('=');\n            init = parseAssignmentExpression();\n        } else if (match('=')) {\n            lex();\n            init = parseAssignmentExpression();\n        }\n\n        return delegate.markEnd(delegate.createVariableDeclarator(id, init), startToken);\n    }\n\n    function parseVariableDeclarationList(kind) {\n        var list = [];\n\n        do {\n            list.push(parseVariableDeclaration(kind));\n            if (!match(',')) {\n                break;\n            }\n            lex();\n        } while (index < length);\n\n        return list;\n    }\n\n    function parseVariableStatement() {\n        var declarations;\n\n        expectKeyword('var');\n\n        declarations = parseVariableDeclarationList();\n\n        consumeSemicolon();\n\n        return delegate.createVariableDeclaration(declarations, 'var');\n    }\n\n    // kind may be `const` or `let`\n    // Both are experimental and not in the specification yet.\n    // see http://wiki.ecmascript.org/doku.php?id=harmony:const\n    // and http://wiki.ecmascript.org/doku.php?id=harmony:let\n    function parseConstLetDeclaration(kind) {\n        var declarations, startToken;\n\n        startToken = lookahead;\n\n        expectKeyword(kind);\n\n        declarations = parseVariableDeclarationList(kind);\n\n        consumeSemicolon();\n\n        return delegate.markEnd(delegate.createVariableDeclaration(declarations, kind), startToken);\n    }\n\n    // 12.3 Empty Statement\n\n    function parseEmptyStatement() {\n        expect(';');\n        return delegate.createEmptyStatement();\n    }\n\n    // 12.4 Expression Statement\n\n    function parseExpressionStatement() {\n        var expr = parseExpression();\n        consumeSemicolon();\n        return delegate.createExpressionStatement(expr);\n    }\n\n    // 12.5 If statement\n\n    function parseIfStatement() {\n        var test, consequent, alternate;\n\n        expectKeyword('if');\n\n        expect('(');\n\n        test = parseExpression();\n\n        expect(')');\n\n        consequent = parseStatement();\n\n        if (matchKeyword('else')) {\n            lex();\n            alternate = parseStatement();\n        } else {\n            alternate = null;\n        }\n\n        return delegate.createIfStatement(test, consequent, alternate);\n    }\n\n    // 12.6 Iteration Statements\n\n    function parseDoWhileStatement() {\n        var body, test, oldInIteration;\n\n        expectKeyword('do');\n\n        oldInIteration = state.inIteration;\n        state.inIteration = true;\n\n        body = parseStatement();\n\n        state.inIteration = oldInIteration;\n\n        expectKeyword('while');\n\n        expect('(');\n\n        test = parseExpression();\n\n        expect(')');\n\n        if (match(';')) {\n            lex();\n        }\n\n        return delegate.createDoWhileStatement(body, test);\n    }\n\n    function parseWhileStatement() {\n        var test, body, oldInIteration;\n\n        expectKeyword('while');\n\n        expect('(');\n\n        test = parseExpression();\n\n        expect(')');\n\n        oldInIteration = state.inIteration;\n        state.inIteration = true;\n\n        body = parseStatement();\n\n        state.inIteration = oldInIteration;\n\n        return delegate.createWhileStatement(test, body);\n    }\n\n    function parseForVariableDeclaration() {\n        var token, declarations, startToken;\n\n        startToken = lookahead;\n        token = lex();\n        declarations = parseVariableDeclarationList();\n\n        return delegate.markEnd(delegate.createVariableDeclaration(declarations, token.value), startToken);\n    }\n\n    function parseForStatement() {\n        var init, test, update, left, right, body, oldInIteration, previousAllowIn = state.allowIn;\n\n        init = test = update = null;\n\n        expectKeyword('for');\n\n        expect('(');\n\n        if (match(';')) {\n            lex();\n        } else {\n            if (matchKeyword('var') || matchKeyword('let')) {\n                state.allowIn = false;\n                init = parseForVariableDeclaration();\n                state.allowIn = previousAllowIn;\n\n                if (init.declarations.length === 1 && matchKeyword('in')) {\n                    lex();\n                    left = init;\n                    right = parseExpression();\n                    init = null;\n                }\n            } else {\n                state.allowIn = false;\n                init = parseExpression();\n                state.allowIn = previousAllowIn;\n\n                if (matchKeyword('in')) {\n                    // LeftHandSideExpression\n                    if (!isLeftHandSide(init)) {\n                        throwErrorTolerant({}, Messages.InvalidLHSInForIn);\n                    }\n\n                    lex();\n                    left = init;\n                    right = parseExpression();\n                    init = null;\n                }\n            }\n\n            if (typeof left === 'undefined') {\n                expect(';');\n            }\n        }\n\n        if (typeof left === 'undefined') {\n\n            if (!match(';')) {\n                test = parseExpression();\n            }\n            expect(';');\n\n            if (!match(')')) {\n                update = parseExpression();\n            }\n        }\n\n        expect(')');\n\n        oldInIteration = state.inIteration;\n        state.inIteration = true;\n\n        body = parseStatement();\n\n        state.inIteration = oldInIteration;\n\n        return (typeof left === 'undefined') ?\n                delegate.createForStatement(init, test, update, body) :\n                delegate.createForInStatement(left, right, body);\n    }\n\n    // 12.7 The continue statement\n\n    function parseContinueStatement() {\n        var label = null, key;\n\n        expectKeyword('continue');\n\n        // Optimize the most common form: 'continue;'.\n        if (source.charCodeAt(index) === 0x3B) {\n            lex();\n\n            if (!state.inIteration) {\n                throwError({}, Messages.IllegalContinue);\n            }\n\n            return delegate.createContinueStatement(null);\n        }\n\n        if (peekLineTerminator()) {\n            if (!state.inIteration) {\n                throwError({}, Messages.IllegalContinue);\n            }\n\n            return delegate.createContinueStatement(null);\n        }\n\n        if (lookahead.type === Token.Identifier) {\n            label = parseVariableIdentifier();\n\n            key = '$' + label.name;\n            if (!Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\n                throwError({}, Messages.UnknownLabel, label.name);\n            }\n        }\n\n        consumeSemicolon();\n\n        if (label === null && !state.inIteration) {\n            throwError({}, Messages.IllegalContinue);\n        }\n\n        return delegate.createContinueStatement(label);\n    }\n\n    // 12.8 The break statement\n\n    function parseBreakStatement() {\n        var label = null, key;\n\n        expectKeyword('break');\n\n        // Catch the very common case first: immediately a semicolon (U+003B).\n        if (source.charCodeAt(index) === 0x3B) {\n            lex();\n\n            if (!(state.inIteration || state.inSwitch)) {\n                throwError({}, Messages.IllegalBreak);\n            }\n\n            return delegate.createBreakStatement(null);\n        }\n\n        if (peekLineTerminator()) {\n            if (!(state.inIteration || state.inSwitch)) {\n                throwError({}, Messages.IllegalBreak);\n            }\n\n            return delegate.createBreakStatement(null);\n        }\n\n        if (lookahead.type === Token.Identifier) {\n            label = parseVariableIdentifier();\n\n            key = '$' + label.name;\n            if (!Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\n                throwError({}, Messages.UnknownLabel, label.name);\n            }\n        }\n\n        consumeSemicolon();\n\n        if (label === null && !(state.inIteration || state.inSwitch)) {\n            throwError({}, Messages.IllegalBreak);\n        }\n\n        return delegate.createBreakStatement(label);\n    }\n\n    // 12.9 The return statement\n\n    function parseReturnStatement() {\n        var argument = null;\n\n        expectKeyword('return');\n\n        if (!state.inFunctionBody) {\n            throwErrorTolerant({}, Messages.IllegalReturn);\n        }\n\n        // 'return' followed by a space and an identifier is very common.\n        if (source.charCodeAt(index) === 0x20) {\n            if (isIdentifierStart(source.charCodeAt(index + 1))) {\n                argument = parseExpression();\n                consumeSemicolon();\n                return delegate.createReturnStatement(argument);\n            }\n        }\n\n        if (peekLineTerminator()) {\n            return delegate.createReturnStatement(null);\n        }\n\n        if (!match(';')) {\n            if (!match('}') && lookahead.type !== Token.EOF) {\n                argument = parseExpression();\n            }\n        }\n\n        consumeSemicolon();\n\n        return delegate.createReturnStatement(argument);\n    }\n\n    // 12.10 The with statement\n\n    function parseWithStatement() {\n        var object, body;\n\n        if (strict) {\n            // TODO(ikarienator): Should we update the test cases instead?\n            skipComment();\n            throwErrorTolerant({}, Messages.StrictModeWith);\n        }\n\n        expectKeyword('with');\n\n        expect('(');\n\n        object = parseExpression();\n\n        expect(')');\n\n        body = parseStatement();\n\n        return delegate.createWithStatement(object, body);\n    }\n\n    // 12.10 The swith statement\n\n    function parseSwitchCase() {\n        var test, consequent = [], statement, startToken;\n\n        startToken = lookahead;\n        if (matchKeyword('default')) {\n            lex();\n            test = null;\n        } else {\n            expectKeyword('case');\n            test = parseExpression();\n        }\n        expect(':');\n\n        while (index < length) {\n            if (match('}') || matchKeyword('default') || matchKeyword('case')) {\n                break;\n            }\n            statement = parseStatement();\n            consequent.push(statement);\n        }\n\n        return delegate.markEnd(delegate.createSwitchCase(test, consequent), startToken);\n    }\n\n    function parseSwitchStatement() {\n        var discriminant, cases, clause, oldInSwitch, defaultFound;\n\n        expectKeyword('switch');\n\n        expect('(');\n\n        discriminant = parseExpression();\n\n        expect(')');\n\n        expect('{');\n\n        cases = [];\n\n        if (match('}')) {\n            lex();\n            return delegate.createSwitchStatement(discriminant, cases);\n        }\n\n        oldInSwitch = state.inSwitch;\n        state.inSwitch = true;\n        defaultFound = false;\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            clause = parseSwitchCase();\n            if (clause.test === null) {\n                if (defaultFound) {\n                    throwError({}, Messages.MultipleDefaultsInSwitch);\n                }\n                defaultFound = true;\n            }\n            cases.push(clause);\n        }\n\n        state.inSwitch = oldInSwitch;\n\n        expect('}');\n\n        return delegate.createSwitchStatement(discriminant, cases);\n    }\n\n    // 12.13 The throw statement\n\n    function parseThrowStatement() {\n        var argument;\n\n        expectKeyword('throw');\n\n        if (peekLineTerminator()) {\n            throwError({}, Messages.NewlineAfterThrow);\n        }\n\n        argument = parseExpression();\n\n        consumeSemicolon();\n\n        return delegate.createThrowStatement(argument);\n    }\n\n    // 12.14 The try statement\n\n    function parseCatchClause() {\n        var param, body, startToken;\n\n        startToken = lookahead;\n        expectKeyword('catch');\n\n        expect('(');\n        if (match(')')) {\n            throwUnexpected(lookahead);\n        }\n\n        param = parseVariableIdentifier();\n        // 12.14.1\n        if (strict && isRestrictedWord(param.name)) {\n            throwErrorTolerant({}, Messages.StrictCatchVariable);\n        }\n\n        expect(')');\n        body = parseBlock();\n        return delegate.markEnd(delegate.createCatchClause(param, body), startToken);\n    }\n\n    function parseTryStatement() {\n        var block, handlers = [], finalizer = null;\n\n        expectKeyword('try');\n\n        block = parseBlock();\n\n        if (matchKeyword('catch')) {\n            handlers.push(parseCatchClause());\n        }\n\n        if (matchKeyword('finally')) {\n            lex();\n            finalizer = parseBlock();\n        }\n\n        if (handlers.length === 0 && !finalizer) {\n            throwError({}, Messages.NoCatchOrFinally);\n        }\n\n        return delegate.createTryStatement(block, [], handlers, finalizer);\n    }\n\n    // 12.15 The debugger statement\n\n    function parseDebuggerStatement() {\n        expectKeyword('debugger');\n\n        consumeSemicolon();\n\n        return delegate.createDebuggerStatement();\n    }\n\n    // 12 Statements\n\n    function parseStatement() {\n        var type = lookahead.type,\n            expr,\n            labeledBody,\n            key,\n            startToken;\n\n        if (type === Token.EOF) {\n            throwUnexpected(lookahead);\n        }\n\n        if (type === Token.Punctuator && lookahead.value === '{') {\n            return parseBlock();\n        }\n\n        startToken = lookahead;\n\n        if (type === Token.Punctuator) {\n            switch (lookahead.value) {\n            case ';':\n                return delegate.markEnd(parseEmptyStatement(), startToken);\n            case '(':\n                return delegate.markEnd(parseExpressionStatement(), startToken);\n            default:\n                break;\n            }\n        }\n\n        if (type === Token.Keyword) {\n            switch (lookahead.value) {\n            case 'break':\n                return delegate.markEnd(parseBreakStatement(), startToken);\n            case 'continue':\n                return delegate.markEnd(parseContinueStatement(), startToken);\n            case 'debugger':\n                return delegate.markEnd(parseDebuggerStatement(), startToken);\n            case 'do':\n                return delegate.markEnd(parseDoWhileStatement(), startToken);\n            case 'for':\n                return delegate.markEnd(parseForStatement(), startToken);\n            case 'function':\n                return delegate.markEnd(parseFunctionDeclaration(), startToken);\n            case 'if':\n                return delegate.markEnd(parseIfStatement(), startToken);\n            case 'return':\n                return delegate.markEnd(parseReturnStatement(), startToken);\n            case 'switch':\n                return delegate.markEnd(parseSwitchStatement(), startToken);\n            case 'throw':\n                return delegate.markEnd(parseThrowStatement(), startToken);\n            case 'try':\n                return delegate.markEnd(parseTryStatement(), startToken);\n            case 'var':\n                return delegate.markEnd(parseVariableStatement(), startToken);\n            case 'while':\n                return delegate.markEnd(parseWhileStatement(), startToken);\n            case 'with':\n                return delegate.markEnd(parseWithStatement(), startToken);\n            default:\n                break;\n            }\n        }\n\n        expr = parseExpression();\n\n        // 12.12 Labelled Statements\n        if ((expr.type === Syntax.Identifier) && match(':')) {\n            lex();\n\n            key = '$' + expr.name;\n            if (Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\n                throwError({}, Messages.Redeclaration, 'Label', expr.name);\n            }\n\n            state.labelSet[key] = true;\n            labeledBody = parseStatement();\n            delete state.labelSet[key];\n            return delegate.markEnd(delegate.createLabeledStatement(expr, labeledBody), startToken);\n        }\n\n        consumeSemicolon();\n\n        return delegate.markEnd(delegate.createExpressionStatement(expr), startToken);\n    }\n\n    // 13 Function Definition\n\n    function parseFunctionSourceElements() {\n        var sourceElement, sourceElements = [], token, directive, firstRestricted,\n            oldLabelSet, oldInIteration, oldInSwitch, oldInFunctionBody, startToken;\n\n        startToken = lookahead;\n        expect('{');\n\n        while (index < length) {\n            if (lookahead.type !== Token.StringLiteral) {\n                break;\n            }\n            token = lookahead;\n\n            sourceElement = parseSourceElement();\n            sourceElements.push(sourceElement);\n            if (sourceElement.expression.type !== Syntax.Literal) {\n                // this is not directive\n                break;\n            }\n            directive = source.slice(token.start + 1, token.end - 1);\n            if (directive === 'use strict') {\n                strict = true;\n                if (firstRestricted) {\n                    throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n                }\n            } else {\n                if (!firstRestricted && token.octal) {\n                    firstRestricted = token;\n                }\n            }\n        }\n\n        oldLabelSet = state.labelSet;\n        oldInIteration = state.inIteration;\n        oldInSwitch = state.inSwitch;\n        oldInFunctionBody = state.inFunctionBody;\n\n        state.labelSet = {};\n        state.inIteration = false;\n        state.inSwitch = false;\n        state.inFunctionBody = true;\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            sourceElement = parseSourceElement();\n            if (typeof sourceElement === 'undefined') {\n                break;\n            }\n            sourceElements.push(sourceElement);\n        }\n\n        expect('}');\n\n        state.labelSet = oldLabelSet;\n        state.inIteration = oldInIteration;\n        state.inSwitch = oldInSwitch;\n        state.inFunctionBody = oldInFunctionBody;\n\n        return delegate.markEnd(delegate.createBlockStatement(sourceElements), startToken);\n    }\n\n    function parseParams(firstRestricted) {\n        var param, params = [], token, stricted, paramSet, key, message;\n        expect('(');\n\n        if (!match(')')) {\n            paramSet = {};\n            while (index < length) {\n                token = lookahead;\n                param = parseVariableIdentifier();\n                key = '$' + token.value;\n                if (strict) {\n                    if (isRestrictedWord(token.value)) {\n                        stricted = token;\n                        message = Messages.StrictParamName;\n                    }\n                    if (Object.prototype.hasOwnProperty.call(paramSet, key)) {\n                        stricted = token;\n                        message = Messages.StrictParamDupe;\n                    }\n                } else if (!firstRestricted) {\n                    if (isRestrictedWord(token.value)) {\n                        firstRestricted = token;\n                        message = Messages.StrictParamName;\n                    } else if (isStrictModeReservedWord(token.value)) {\n                        firstRestricted = token;\n                        message = Messages.StrictReservedWord;\n                    } else if (Object.prototype.hasOwnProperty.call(paramSet, key)) {\n                        firstRestricted = token;\n                        message = Messages.StrictParamDupe;\n                    }\n                }\n                params.push(param);\n                paramSet[key] = true;\n                if (match(')')) {\n                    break;\n                }\n                expect(',');\n            }\n        }\n\n        expect(')');\n\n        return {\n            params: params,\n            stricted: stricted,\n            firstRestricted: firstRestricted,\n            message: message\n        };\n    }\n\n    function parseFunctionDeclaration() {\n        var id, params = [], body, token, stricted, tmp, firstRestricted, message, previousStrict, startToken;\n\n        startToken = lookahead;\n\n        expectKeyword('function');\n        token = lookahead;\n        id = parseVariableIdentifier();\n        if (strict) {\n            if (isRestrictedWord(token.value)) {\n                throwErrorTolerant(token, Messages.StrictFunctionName);\n            }\n        } else {\n            if (isRestrictedWord(token.value)) {\n                firstRestricted = token;\n                message = Messages.StrictFunctionName;\n            } else if (isStrictModeReservedWord(token.value)) {\n                firstRestricted = token;\n                message = Messages.StrictReservedWord;\n            }\n        }\n\n        tmp = parseParams(firstRestricted);\n        params = tmp.params;\n        stricted = tmp.stricted;\n        firstRestricted = tmp.firstRestricted;\n        if (tmp.message) {\n            message = tmp.message;\n        }\n\n        previousStrict = strict;\n        body = parseFunctionSourceElements();\n        if (strict && firstRestricted) {\n            throwError(firstRestricted, message);\n        }\n        if (strict && stricted) {\n            throwErrorTolerant(stricted, message);\n        }\n        strict = previousStrict;\n\n        return delegate.markEnd(delegate.createFunctionDeclaration(id, params, [], body), startToken);\n    }\n\n    function parseFunctionExpression() {\n        var token, id = null, stricted, firstRestricted, message, tmp, params = [], body, previousStrict, startToken;\n\n        startToken = lookahead;\n        expectKeyword('function');\n\n        if (!match('(')) {\n            token = lookahead;\n            id = parseVariableIdentifier();\n            if (strict) {\n                if (isRestrictedWord(token.value)) {\n                    throwErrorTolerant(token, Messages.StrictFunctionName);\n                }\n            } else {\n                if (isRestrictedWord(token.value)) {\n                    firstRestricted = token;\n                    message = Messages.StrictFunctionName;\n                } else if (isStrictModeReservedWord(token.value)) {\n                    firstRestricted = token;\n                    message = Messages.StrictReservedWord;\n                }\n            }\n        }\n\n        tmp = parseParams(firstRestricted);\n        params = tmp.params;\n        stricted = tmp.stricted;\n        firstRestricted = tmp.firstRestricted;\n        if (tmp.message) {\n            message = tmp.message;\n        }\n\n        previousStrict = strict;\n        body = parseFunctionSourceElements();\n        if (strict && firstRestricted) {\n            throwError(firstRestricted, message);\n        }\n        if (strict && stricted) {\n            throwErrorTolerant(stricted, message);\n        }\n        strict = previousStrict;\n\n        return delegate.markEnd(delegate.createFunctionExpression(id, params, [], body), startToken);\n    }\n\n    // 14 Program\n\n    function parseSourceElement() {\n        if (lookahead.type === Token.Keyword) {\n            switch (lookahead.value) {\n            case 'const':\n            case 'let':\n                return parseConstLetDeclaration(lookahead.value);\n            case 'function':\n                return parseFunctionDeclaration();\n            default:\n                return parseStatement();\n            }\n        }\n\n        if (lookahead.type !== Token.EOF) {\n            return parseStatement();\n        }\n    }\n\n    function parseSourceElements() {\n        var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n        while (index < length) {\n            token = lookahead;\n            if (token.type !== Token.StringLiteral) {\n                break;\n            }\n\n            sourceElement = parseSourceElement();\n            sourceElements.push(sourceElement);\n            if (sourceElement.expression.type !== Syntax.Literal) {\n                // this is not directive\n                break;\n            }\n            directive = source.slice(token.start + 1, token.end - 1);\n            if (directive === 'use strict') {\n                strict = true;\n                if (firstRestricted) {\n                    throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n                }\n            } else {\n                if (!firstRestricted && token.octal) {\n                    firstRestricted = token;\n                }\n            }\n        }\n\n        while (index < length) {\n            sourceElement = parseSourceElement();\n            /* istanbul ignore if */\n            if (typeof sourceElement === 'undefined') {\n                break;\n            }\n            sourceElements.push(sourceElement);\n        }\n        return sourceElements;\n    }\n\n    function parseProgram() {\n        var body, startToken;\n\n        skipComment();\n        peek();\n        startToken = lookahead;\n        strict = false;\n\n        body = parseSourceElements();\n        return delegate.markEnd(delegate.createProgram(body), startToken);\n    }\n\n    function filterTokenLocation() {\n        var i, entry, token, tokens = [];\n\n        for (i = 0; i < extra.tokens.length; ++i) {\n            entry = extra.tokens[i];\n            token = {\n                type: entry.type,\n                value: entry.value\n            };\n            if (extra.range) {\n                token.range = entry.range;\n            }\n            if (extra.loc) {\n                token.loc = entry.loc;\n            }\n            tokens.push(token);\n        }\n\n        extra.tokens = tokens;\n    }\n\n    function tokenize(code, options) {\n        var toString,\n            token,\n            tokens;\n\n        toString = String;\n        if (typeof code !== 'string' && !(code instanceof String)) {\n            code = toString(code);\n        }\n\n        delegate = SyntaxTreeDelegate;\n        source = code;\n        index = 0;\n        lineNumber = (source.length > 0) ? 1 : 0;\n        lineStart = 0;\n        length = source.length;\n        lookahead = null;\n        state = {\n            allowIn: true,\n            labelSet: {},\n            inFunctionBody: false,\n            inIteration: false,\n            inSwitch: false,\n            lastCommentStart: -1\n        };\n\n        extra = {};\n\n        // Options matching.\n        options = options || {};\n\n        // Of course we collect tokens here.\n        options.tokens = true;\n        extra.tokens = [];\n        extra.tokenize = true;\n        // The following two fields are necessary to compute the Regex tokens.\n        extra.openParenToken = -1;\n        extra.openCurlyToken = -1;\n\n        extra.range = (typeof options.range === 'boolean') && options.range;\n        extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n        if (typeof options.comment === 'boolean' && options.comment) {\n            extra.comments = [];\n        }\n        if (typeof options.tolerant === 'boolean' && options.tolerant) {\n            extra.errors = [];\n        }\n\n        try {\n            peek();\n            if (lookahead.type === Token.EOF) {\n                return extra.tokens;\n            }\n\n            token = lex();\n            while (lookahead.type !== Token.EOF) {\n                try {\n                    token = lex();\n                } catch (lexError) {\n                    token = lookahead;\n                    if (extra.errors) {\n                        extra.errors.push(lexError);\n                        // We have to break on the first error\n                        // to avoid infinite loops.\n                        break;\n                    } else {\n                        throw lexError;\n                    }\n                }\n            }\n\n            filterTokenLocation();\n            tokens = extra.tokens;\n            if (typeof extra.comments !== 'undefined') {\n                tokens.comments = extra.comments;\n            }\n            if (typeof extra.errors !== 'undefined') {\n                tokens.errors = extra.errors;\n            }\n        } catch (e) {\n            throw e;\n        } finally {\n            extra = {};\n        }\n        return tokens;\n    }\n\n    function parse(code, options) {\n        var program, toString;\n\n        toString = String;\n        if (typeof code !== 'string' && !(code instanceof String)) {\n            code = toString(code);\n        }\n\n        delegate = SyntaxTreeDelegate;\n        source = code;\n        index = 0;\n        lineNumber = (source.length > 0) ? 1 : 0;\n        lineStart = 0;\n        length = source.length;\n        lookahead = null;\n        state = {\n            allowIn: true,\n            labelSet: {},\n            inFunctionBody: false,\n            inIteration: false,\n            inSwitch: false,\n            lastCommentStart: -1\n        };\n\n        extra = {};\n        if (typeof options !== 'undefined') {\n            extra.range = (typeof options.range === 'boolean') && options.range;\n            extra.loc = (typeof options.loc === 'boolean') && options.loc;\n            extra.attachComment = (typeof options.attachComment === 'boolean') && options.attachComment;\n\n            if (extra.loc && options.source !== null && options.source !== undefined) {\n                extra.source = toString(options.source);\n            }\n\n            if (typeof options.tokens === 'boolean' && options.tokens) {\n                extra.tokens = [];\n            }\n            if (typeof options.comment === 'boolean' && options.comment) {\n                extra.comments = [];\n            }\n            if (typeof options.tolerant === 'boolean' && options.tolerant) {\n                extra.errors = [];\n            }\n            if (extra.attachComment) {\n                extra.range = true;\n                extra.comments = [];\n                extra.bottomRightStack = [];\n                extra.trailingComments = [];\n                extra.leadingComments = [];\n            }\n        }\n\n        try {\n            program = parseProgram();\n            if (typeof extra.comments !== 'undefined') {\n                program.comments = extra.comments;\n            }\n            if (typeof extra.tokens !== 'undefined') {\n                filterTokenLocation();\n                program.tokens = extra.tokens;\n            }\n            if (typeof extra.errors !== 'undefined') {\n                program.errors = extra.errors;\n            }\n        } catch (e) {\n            throw e;\n        } finally {\n            extra = {};\n        }\n\n        return program;\n    }\n\n    // Sync with *.json manifests.\n    exports.version = '1.2.5';\n\n    exports.tokenize = tokenize;\n\n    exports.parse = parse;\n\n    // Deep copy.\n   /* istanbul ignore next */\n    exports.Syntax = (function () {\n        var name, types = {};\n\n        if (typeof Object.create === 'function') {\n            types = Object.create(null);\n        }\n\n        for (name in Syntax) {\n            if (Syntax.hasOwnProperty(name)) {\n                types[name] = Syntax[name];\n            }\n        }\n\n        if (typeof Object.freeze === 'function') {\n            Object.freeze(types);\n        }\n\n        return types;\n    }());\n\n}));\n/* vim: set sw=4 ts=4 et tw=80 : */\n","map":{"mappings":[{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1023,"column":0},"generated":{"line":1023,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1024,"column":0},"generated":{"line":1024,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1025,"column":0},"generated":{"line":1025,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1026,"column":0},"generated":{"line":1026,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1027,"column":0},"generated":{"line":1027,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1028,"column":0},"generated":{"line":1028,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1029,"column":0},"generated":{"line":1029,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1030,"column":0},"generated":{"line":1030,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1031,"column":0},"generated":{"line":1031,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1032,"column":0},"generated":{"line":1032,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1033,"column":0},"generated":{"line":1033,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1034,"column":0},"generated":{"line":1034,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1035,"column":0},"generated":{"line":1035,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1036,"column":0},"generated":{"line":1036,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1037,"column":0},"generated":{"line":1037,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1038,"column":0},"generated":{"line":1038,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1039,"column":0},"generated":{"line":1039,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1040,"column":0},"generated":{"line":1040,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1041,"column":0},"generated":{"line":1041,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1042,"column":0},"generated":{"line":1042,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1043,"column":0},"generated":{"line":1043,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1044,"column":0},"generated":{"line":1044,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1045,"column":0},"generated":{"line":1045,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1046,"column":0},"generated":{"line":1046,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1047,"column":0},"generated":{"line":1047,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1048,"column":0},"generated":{"line":1048,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1049,"column":0},"generated":{"line":1049,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1050,"column":0},"generated":{"line":1050,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1051,"column":0},"generated":{"line":1051,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1052,"column":0},"generated":{"line":1052,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1053,"column":0},"generated":{"line":1053,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1054,"column":0},"generated":{"line":1054,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1055,"column":0},"generated":{"line":1055,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1056,"column":0},"generated":{"line":1056,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1057,"column":0},"generated":{"line":1057,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1058,"column":0},"generated":{"line":1058,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1059,"column":0},"generated":{"line":1059,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1060,"column":0},"generated":{"line":1060,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1061,"column":0},"generated":{"line":1061,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1062,"column":0},"generated":{"line":1062,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1063,"column":0},"generated":{"line":1063,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1064,"column":0},"generated":{"line":1064,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1065,"column":0},"generated":{"line":1065,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1066,"column":0},"generated":{"line":1066,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1067,"column":0},"generated":{"line":1067,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1068,"column":0},"generated":{"line":1068,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1069,"column":0},"generated":{"line":1069,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1070,"column":0},"generated":{"line":1070,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1071,"column":0},"generated":{"line":1071,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1072,"column":0},"generated":{"line":1072,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1073,"column":0},"generated":{"line":1073,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1074,"column":0},"generated":{"line":1074,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1075,"column":0},"generated":{"line":1075,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1076,"column":0},"generated":{"line":1076,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1077,"column":0},"generated":{"line":1077,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1078,"column":0},"generated":{"line":1078,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1079,"column":0},"generated":{"line":1079,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1080,"column":0},"generated":{"line":1080,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1081,"column":0},"generated":{"line":1081,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1082,"column":0},"generated":{"line":1082,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1083,"column":0},"generated":{"line":1083,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1084,"column":0},"generated":{"line":1084,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1085,"column":0},"generated":{"line":1085,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1086,"column":0},"generated":{"line":1086,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1087,"column":0},"generated":{"line":1087,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1088,"column":0},"generated":{"line":1088,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1089,"column":0},"generated":{"line":1089,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1090,"column":0},"generated":{"line":1090,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1091,"column":0},"generated":{"line":1091,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1092,"column":0},"generated":{"line":1092,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1093,"column":0},"generated":{"line":1093,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1094,"column":0},"generated":{"line":1094,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1095,"column":0},"generated":{"line":1095,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1096,"column":0},"generated":{"line":1096,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1097,"column":0},"generated":{"line":1097,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1098,"column":0},"generated":{"line":1098,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1099,"column":0},"generated":{"line":1099,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1100,"column":0},"generated":{"line":1100,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1101,"column":0},"generated":{"line":1101,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1102,"column":0},"generated":{"line":1102,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1103,"column":0},"generated":{"line":1103,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1104,"column":0},"generated":{"line":1104,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1105,"column":0},"generated":{"line":1105,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1106,"column":0},"generated":{"line":1106,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1107,"column":0},"generated":{"line":1107,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1108,"column":0},"generated":{"line":1108,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1109,"column":0},"generated":{"line":1109,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1110,"column":0},"generated":{"line":1110,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1111,"column":0},"generated":{"line":1111,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1112,"column":0},"generated":{"line":1112,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1113,"column":0},"generated":{"line":1113,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1114,"column":0},"generated":{"line":1114,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1115,"column":0},"generated":{"line":1115,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1116,"column":0},"generated":{"line":1116,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1117,"column":0},"generated":{"line":1117,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1118,"column":0},"generated":{"line":1118,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1119,"column":0},"generated":{"line":1119,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1120,"column":0},"generated":{"line":1120,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1121,"column":0},"generated":{"line":1121,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1122,"column":0},"generated":{"line":1122,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1123,"column":0},"generated":{"line":1123,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1124,"column":0},"generated":{"line":1124,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1125,"column":0},"generated":{"line":1125,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1126,"column":0},"generated":{"line":1126,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1127,"column":0},"generated":{"line":1127,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1128,"column":0},"generated":{"line":1128,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1129,"column":0},"generated":{"line":1129,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1130,"column":0},"generated":{"line":1130,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1131,"column":0},"generated":{"line":1131,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1132,"column":0},"generated":{"line":1132,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1133,"column":0},"generated":{"line":1133,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1134,"column":0},"generated":{"line":1134,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1135,"column":0},"generated":{"line":1135,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1136,"column":0},"generated":{"line":1136,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1137,"column":0},"generated":{"line":1137,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1138,"column":0},"generated":{"line":1138,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1139,"column":0},"generated":{"line":1139,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1140,"column":0},"generated":{"line":1140,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1141,"column":0},"generated":{"line":1141,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1142,"column":0},"generated":{"line":1142,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1143,"column":0},"generated":{"line":1143,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1144,"column":0},"generated":{"line":1144,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1145,"column":0},"generated":{"line":1145,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1146,"column":0},"generated":{"line":1146,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1147,"column":0},"generated":{"line":1147,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1148,"column":0},"generated":{"line":1148,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1149,"column":0},"generated":{"line":1149,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1150,"column":0},"generated":{"line":1150,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1151,"column":0},"generated":{"line":1151,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1152,"column":0},"generated":{"line":1152,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1153,"column":0},"generated":{"line":1153,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1154,"column":0},"generated":{"line":1154,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1155,"column":0},"generated":{"line":1155,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1156,"column":0},"generated":{"line":1156,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1157,"column":0},"generated":{"line":1157,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1158,"column":0},"generated":{"line":1158,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1159,"column":0},"generated":{"line":1159,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1160,"column":0},"generated":{"line":1160,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1161,"column":0},"generated":{"line":1161,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1162,"column":0},"generated":{"line":1162,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1163,"column":0},"generated":{"line":1163,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1164,"column":0},"generated":{"line":1164,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1165,"column":0},"generated":{"line":1165,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1166,"column":0},"generated":{"line":1166,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1167,"column":0},"generated":{"line":1167,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1168,"column":0},"generated":{"line":1168,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1169,"column":0},"generated":{"line":1169,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1170,"column":0},"generated":{"line":1170,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1171,"column":0},"generated":{"line":1171,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1172,"column":0},"generated":{"line":1172,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1173,"column":0},"generated":{"line":1173,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1174,"column":0},"generated":{"line":1174,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1175,"column":0},"generated":{"line":1175,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1176,"column":0},"generated":{"line":1176,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1177,"column":0},"generated":{"line":1177,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1178,"column":0},"generated":{"line":1178,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1179,"column":0},"generated":{"line":1179,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1180,"column":0},"generated":{"line":1180,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1181,"column":0},"generated":{"line":1181,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1182,"column":0},"generated":{"line":1182,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1183,"column":0},"generated":{"line":1183,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1184,"column":0},"generated":{"line":1184,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1185,"column":0},"generated":{"line":1185,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1186,"column":0},"generated":{"line":1186,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1187,"column":0},"generated":{"line":1187,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1188,"column":0},"generated":{"line":1188,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1189,"column":0},"generated":{"line":1189,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1190,"column":0},"generated":{"line":1190,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1191,"column":0},"generated":{"line":1191,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1192,"column":0},"generated":{"line":1192,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1193,"column":0},"generated":{"line":1193,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1194,"column":0},"generated":{"line":1194,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1195,"column":0},"generated":{"line":1195,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1196,"column":0},"generated":{"line":1196,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1197,"column":0},"generated":{"line":1197,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1198,"column":0},"generated":{"line":1198,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1199,"column":0},"generated":{"line":1199,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1200,"column":0},"generated":{"line":1200,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1201,"column":0},"generated":{"line":1201,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1202,"column":0},"generated":{"line":1202,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1203,"column":0},"generated":{"line":1203,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1204,"column":0},"generated":{"line":1204,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1205,"column":0},"generated":{"line":1205,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1206,"column":0},"generated":{"line":1206,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1207,"column":0},"generated":{"line":1207,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1208,"column":0},"generated":{"line":1208,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1209,"column":0},"generated":{"line":1209,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1210,"column":0},"generated":{"line":1210,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1211,"column":0},"generated":{"line":1211,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1212,"column":0},"generated":{"line":1212,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1213,"column":0},"generated":{"line":1213,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1214,"column":0},"generated":{"line":1214,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1215,"column":0},"generated":{"line":1215,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1216,"column":0},"generated":{"line":1216,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1217,"column":0},"generated":{"line":1217,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1218,"column":0},"generated":{"line":1218,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1219,"column":0},"generated":{"line":1219,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1220,"column":0},"generated":{"line":1220,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1221,"column":0},"generated":{"line":1221,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1222,"column":0},"generated":{"line":1222,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1223,"column":0},"generated":{"line":1223,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1224,"column":0},"generated":{"line":1224,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1225,"column":0},"generated":{"line":1225,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1226,"column":0},"generated":{"line":1226,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1227,"column":0},"generated":{"line":1227,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1228,"column":0},"generated":{"line":1228,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1229,"column":0},"generated":{"line":1229,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1230,"column":0},"generated":{"line":1230,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1231,"column":0},"generated":{"line":1231,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1232,"column":0},"generated":{"line":1232,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1233,"column":0},"generated":{"line":1233,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1234,"column":0},"generated":{"line":1234,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1235,"column":0},"generated":{"line":1235,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1236,"column":0},"generated":{"line":1236,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1237,"column":0},"generated":{"line":1237,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1238,"column":0},"generated":{"line":1238,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1239,"column":0},"generated":{"line":1239,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1240,"column":0},"generated":{"line":1240,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1241,"column":0},"generated":{"line":1241,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1242,"column":0},"generated":{"line":1242,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1243,"column":0},"generated":{"line":1243,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1244,"column":0},"generated":{"line":1244,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1245,"column":0},"generated":{"line":1245,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1246,"column":0},"generated":{"line":1246,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1247,"column":0},"generated":{"line":1247,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1248,"column":0},"generated":{"line":1248,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1249,"column":0},"generated":{"line":1249,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1250,"column":0},"generated":{"line":1250,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1251,"column":0},"generated":{"line":1251,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1252,"column":0},"generated":{"line":1252,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1253,"column":0},"generated":{"line":1253,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1254,"column":0},"generated":{"line":1254,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1255,"column":0},"generated":{"line":1255,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1256,"column":0},"generated":{"line":1256,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1257,"column":0},"generated":{"line":1257,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1258,"column":0},"generated":{"line":1258,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1259,"column":0},"generated":{"line":1259,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1260,"column":0},"generated":{"line":1260,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1261,"column":0},"generated":{"line":1261,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1262,"column":0},"generated":{"line":1262,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1263,"column":0},"generated":{"line":1263,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1264,"column":0},"generated":{"line":1264,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1265,"column":0},"generated":{"line":1265,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1266,"column":0},"generated":{"line":1266,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1267,"column":0},"generated":{"line":1267,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1268,"column":0},"generated":{"line":1268,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1269,"column":0},"generated":{"line":1269,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1270,"column":0},"generated":{"line":1270,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1271,"column":0},"generated":{"line":1271,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1272,"column":0},"generated":{"line":1272,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1273,"column":0},"generated":{"line":1273,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1274,"column":0},"generated":{"line":1274,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1275,"column":0},"generated":{"line":1275,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1276,"column":0},"generated":{"line":1276,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1277,"column":0},"generated":{"line":1277,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1278,"column":0},"generated":{"line":1278,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1279,"column":0},"generated":{"line":1279,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1280,"column":0},"generated":{"line":1280,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1281,"column":0},"generated":{"line":1281,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1282,"column":0},"generated":{"line":1282,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1283,"column":0},"generated":{"line":1283,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1284,"column":0},"generated":{"line":1284,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1285,"column":0},"generated":{"line":1285,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1286,"column":0},"generated":{"line":1286,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1287,"column":0},"generated":{"line":1287,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1288,"column":0},"generated":{"line":1288,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1289,"column":0},"generated":{"line":1289,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1290,"column":0},"generated":{"line":1290,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1291,"column":0},"generated":{"line":1291,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1292,"column":0},"generated":{"line":1292,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1293,"column":0},"generated":{"line":1293,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1294,"column":0},"generated":{"line":1294,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1295,"column":0},"generated":{"line":1295,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1296,"column":0},"generated":{"line":1296,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1297,"column":0},"generated":{"line":1297,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1298,"column":0},"generated":{"line":1298,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1299,"column":0},"generated":{"line":1299,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1300,"column":0},"generated":{"line":1300,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1301,"column":0},"generated":{"line":1301,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1302,"column":0},"generated":{"line":1302,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1303,"column":0},"generated":{"line":1303,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1304,"column":0},"generated":{"line":1304,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1305,"column":0},"generated":{"line":1305,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1306,"column":0},"generated":{"line":1306,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1307,"column":0},"generated":{"line":1307,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1308,"column":0},"generated":{"line":1308,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1309,"column":0},"generated":{"line":1309,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1310,"column":0},"generated":{"line":1310,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1311,"column":0},"generated":{"line":1311,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1312,"column":0},"generated":{"line":1312,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1313,"column":0},"generated":{"line":1313,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1314,"column":0},"generated":{"line":1314,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1315,"column":0},"generated":{"line":1315,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1316,"column":0},"generated":{"line":1316,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1317,"column":0},"generated":{"line":1317,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1318,"column":0},"generated":{"line":1318,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1319,"column":0},"generated":{"line":1319,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1320,"column":0},"generated":{"line":1320,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1321,"column":0},"generated":{"line":1321,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1322,"column":0},"generated":{"line":1322,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1323,"column":0},"generated":{"line":1323,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1324,"column":0},"generated":{"line":1324,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1325,"column":0},"generated":{"line":1325,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1326,"column":0},"generated":{"line":1326,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1327,"column":0},"generated":{"line":1327,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1328,"column":0},"generated":{"line":1328,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1329,"column":0},"generated":{"line":1329,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1330,"column":0},"generated":{"line":1330,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1331,"column":0},"generated":{"line":1331,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1332,"column":0},"generated":{"line":1332,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1333,"column":0},"generated":{"line":1333,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1334,"column":0},"generated":{"line":1334,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1335,"column":0},"generated":{"line":1335,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1336,"column":0},"generated":{"line":1336,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1337,"column":0},"generated":{"line":1337,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1338,"column":0},"generated":{"line":1338,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1339,"column":0},"generated":{"line":1339,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1340,"column":0},"generated":{"line":1340,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1341,"column":0},"generated":{"line":1341,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1342,"column":0},"generated":{"line":1342,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1343,"column":0},"generated":{"line":1343,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1344,"column":0},"generated":{"line":1344,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1345,"column":0},"generated":{"line":1345,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1346,"column":0},"generated":{"line":1346,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1347,"column":0},"generated":{"line":1347,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1348,"column":0},"generated":{"line":1348,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1349,"column":0},"generated":{"line":1349,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1350,"column":0},"generated":{"line":1350,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1351,"column":0},"generated":{"line":1351,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1352,"column":0},"generated":{"line":1352,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1353,"column":0},"generated":{"line":1353,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1354,"column":0},"generated":{"line":1354,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1355,"column":0},"generated":{"line":1355,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1356,"column":0},"generated":{"line":1356,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1357,"column":0},"generated":{"line":1357,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1358,"column":0},"generated":{"line":1358,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1359,"column":0},"generated":{"line":1359,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1360,"column":0},"generated":{"line":1360,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1361,"column":0},"generated":{"line":1361,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1362,"column":0},"generated":{"line":1362,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1363,"column":0},"generated":{"line":1363,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1364,"column":0},"generated":{"line":1364,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1365,"column":0},"generated":{"line":1365,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1366,"column":0},"generated":{"line":1366,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1367,"column":0},"generated":{"line":1367,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1368,"column":0},"generated":{"line":1368,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1369,"column":0},"generated":{"line":1369,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1370,"column":0},"generated":{"line":1370,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1371,"column":0},"generated":{"line":1371,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1372,"column":0},"generated":{"line":1372,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1373,"column":0},"generated":{"line":1373,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1374,"column":0},"generated":{"line":1374,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1375,"column":0},"generated":{"line":1375,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1376,"column":0},"generated":{"line":1376,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1377,"column":0},"generated":{"line":1377,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1378,"column":0},"generated":{"line":1378,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1379,"column":0},"generated":{"line":1379,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1380,"column":0},"generated":{"line":1380,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1381,"column":0},"generated":{"line":1381,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1382,"column":0},"generated":{"line":1382,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1383,"column":0},"generated":{"line":1383,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1384,"column":0},"generated":{"line":1384,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1385,"column":0},"generated":{"line":1385,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1386,"column":0},"generated":{"line":1386,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1387,"column":0},"generated":{"line":1387,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1388,"column":0},"generated":{"line":1388,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1389,"column":0},"generated":{"line":1389,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1390,"column":0},"generated":{"line":1390,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1391,"column":0},"generated":{"line":1391,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1392,"column":0},"generated":{"line":1392,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1393,"column":0},"generated":{"line":1393,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1394,"column":0},"generated":{"line":1394,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1395,"column":0},"generated":{"line":1395,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1396,"column":0},"generated":{"line":1396,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1397,"column":0},"generated":{"line":1397,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1398,"column":0},"generated":{"line":1398,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1399,"column":0},"generated":{"line":1399,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1400,"column":0},"generated":{"line":1400,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1401,"column":0},"generated":{"line":1401,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1402,"column":0},"generated":{"line":1402,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1403,"column":0},"generated":{"line":1403,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1404,"column":0},"generated":{"line":1404,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1405,"column":0},"generated":{"line":1405,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1406,"column":0},"generated":{"line":1406,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1407,"column":0},"generated":{"line":1407,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1408,"column":0},"generated":{"line":1408,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1409,"column":0},"generated":{"line":1409,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1410,"column":0},"generated":{"line":1410,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1411,"column":0},"generated":{"line":1411,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1412,"column":0},"generated":{"line":1412,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1413,"column":0},"generated":{"line":1413,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1414,"column":0},"generated":{"line":1414,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1415,"column":0},"generated":{"line":1415,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1416,"column":0},"generated":{"line":1416,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1417,"column":0},"generated":{"line":1417,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1418,"column":0},"generated":{"line":1418,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1419,"column":0},"generated":{"line":1419,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1420,"column":0},"generated":{"line":1420,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1421,"column":0},"generated":{"line":1421,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1422,"column":0},"generated":{"line":1422,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1423,"column":0},"generated":{"line":1423,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1424,"column":0},"generated":{"line":1424,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1425,"column":0},"generated":{"line":1425,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1426,"column":0},"generated":{"line":1426,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1427,"column":0},"generated":{"line":1427,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1428,"column":0},"generated":{"line":1428,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1429,"column":0},"generated":{"line":1429,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1430,"column":0},"generated":{"line":1430,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1431,"column":0},"generated":{"line":1431,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1432,"column":0},"generated":{"line":1432,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1433,"column":0},"generated":{"line":1433,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1434,"column":0},"generated":{"line":1434,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1435,"column":0},"generated":{"line":1435,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1436,"column":0},"generated":{"line":1436,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1437,"column":0},"generated":{"line":1437,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1438,"column":0},"generated":{"line":1438,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1439,"column":0},"generated":{"line":1439,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1440,"column":0},"generated":{"line":1440,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1441,"column":0},"generated":{"line":1441,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1442,"column":0},"generated":{"line":1442,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1443,"column":0},"generated":{"line":1443,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1444,"column":0},"generated":{"line":1444,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1445,"column":0},"generated":{"line":1445,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1446,"column":0},"generated":{"line":1446,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1447,"column":0},"generated":{"line":1447,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1448,"column":0},"generated":{"line":1448,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1449,"column":0},"generated":{"line":1449,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1450,"column":0},"generated":{"line":1450,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1451,"column":0},"generated":{"line":1451,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1452,"column":0},"generated":{"line":1452,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1453,"column":0},"generated":{"line":1453,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1454,"column":0},"generated":{"line":1454,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1455,"column":0},"generated":{"line":1455,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1456,"column":0},"generated":{"line":1456,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1457,"column":0},"generated":{"line":1457,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1458,"column":0},"generated":{"line":1458,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1459,"column":0},"generated":{"line":1459,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1460,"column":0},"generated":{"line":1460,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1461,"column":0},"generated":{"line":1461,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1462,"column":0},"generated":{"line":1462,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1463,"column":0},"generated":{"line":1463,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1464,"column":0},"generated":{"line":1464,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1465,"column":0},"generated":{"line":1465,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1466,"column":0},"generated":{"line":1466,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1467,"column":0},"generated":{"line":1467,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1468,"column":0},"generated":{"line":1468,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1469,"column":0},"generated":{"line":1469,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1470,"column":0},"generated":{"line":1470,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1471,"column":0},"generated":{"line":1471,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1472,"column":0},"generated":{"line":1472,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1473,"column":0},"generated":{"line":1473,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1474,"column":0},"generated":{"line":1474,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1475,"column":0},"generated":{"line":1475,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1476,"column":0},"generated":{"line":1476,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1477,"column":0},"generated":{"line":1477,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1478,"column":0},"generated":{"line":1478,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1479,"column":0},"generated":{"line":1479,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1480,"column":0},"generated":{"line":1480,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1481,"column":0},"generated":{"line":1481,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1482,"column":0},"generated":{"line":1482,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1483,"column":0},"generated":{"line":1483,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1484,"column":0},"generated":{"line":1484,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1485,"column":0},"generated":{"line":1485,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1486,"column":0},"generated":{"line":1486,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1487,"column":0},"generated":{"line":1487,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1488,"column":0},"generated":{"line":1488,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1489,"column":0},"generated":{"line":1489,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1490,"column":0},"generated":{"line":1490,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1491,"column":0},"generated":{"line":1491,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1492,"column":0},"generated":{"line":1492,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1493,"column":0},"generated":{"line":1493,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1494,"column":0},"generated":{"line":1494,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1495,"column":0},"generated":{"line":1495,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1496,"column":0},"generated":{"line":1496,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1497,"column":0},"generated":{"line":1497,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1498,"column":0},"generated":{"line":1498,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1499,"column":0},"generated":{"line":1499,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1500,"column":0},"generated":{"line":1500,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1501,"column":0},"generated":{"line":1501,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1502,"column":0},"generated":{"line":1502,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1503,"column":0},"generated":{"line":1503,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1504,"column":0},"generated":{"line":1504,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1505,"column":0},"generated":{"line":1505,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1506,"column":0},"generated":{"line":1506,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1507,"column":0},"generated":{"line":1507,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1508,"column":0},"generated":{"line":1508,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1509,"column":0},"generated":{"line":1509,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1510,"column":0},"generated":{"line":1510,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1511,"column":0},"generated":{"line":1511,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1512,"column":0},"generated":{"line":1512,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1513,"column":0},"generated":{"line":1513,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1514,"column":0},"generated":{"line":1514,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1515,"column":0},"generated":{"line":1515,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1516,"column":0},"generated":{"line":1516,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1517,"column":0},"generated":{"line":1517,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1518,"column":0},"generated":{"line":1518,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1519,"column":0},"generated":{"line":1519,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1520,"column":0},"generated":{"line":1520,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1521,"column":0},"generated":{"line":1521,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1522,"column":0},"generated":{"line":1522,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1523,"column":0},"generated":{"line":1523,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1524,"column":0},"generated":{"line":1524,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1525,"column":0},"generated":{"line":1525,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1526,"column":0},"generated":{"line":1526,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1527,"column":0},"generated":{"line":1527,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1528,"column":0},"generated":{"line":1528,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1529,"column":0},"generated":{"line":1529,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1530,"column":0},"generated":{"line":1530,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1531,"column":0},"generated":{"line":1531,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1532,"column":0},"generated":{"line":1532,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1533,"column":0},"generated":{"line":1533,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1534,"column":0},"generated":{"line":1534,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1535,"column":0},"generated":{"line":1535,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1536,"column":0},"generated":{"line":1536,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1537,"column":0},"generated":{"line":1537,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1538,"column":0},"generated":{"line":1538,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1539,"column":0},"generated":{"line":1539,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1540,"column":0},"generated":{"line":1540,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1541,"column":0},"generated":{"line":1541,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1542,"column":0},"generated":{"line":1542,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1543,"column":0},"generated":{"line":1543,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1544,"column":0},"generated":{"line":1544,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1545,"column":0},"generated":{"line":1545,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1546,"column":0},"generated":{"line":1546,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1547,"column":0},"generated":{"line":1547,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1548,"column":0},"generated":{"line":1548,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1549,"column":0},"generated":{"line":1549,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1550,"column":0},"generated":{"line":1550,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1551,"column":0},"generated":{"line":1551,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1552,"column":0},"generated":{"line":1552,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1553,"column":0},"generated":{"line":1553,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1554,"column":0},"generated":{"line":1554,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1555,"column":0},"generated":{"line":1555,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1556,"column":0},"generated":{"line":1556,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1557,"column":0},"generated":{"line":1557,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1558,"column":0},"generated":{"line":1558,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1559,"column":0},"generated":{"line":1559,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1560,"column":0},"generated":{"line":1560,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1561,"column":0},"generated":{"line":1561,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1562,"column":0},"generated":{"line":1562,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1563,"column":0},"generated":{"line":1563,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1564,"column":0},"generated":{"line":1564,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1565,"column":0},"generated":{"line":1565,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1566,"column":0},"generated":{"line":1566,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1567,"column":0},"generated":{"line":1567,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1568,"column":0},"generated":{"line":1568,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1569,"column":0},"generated":{"line":1569,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1570,"column":0},"generated":{"line":1570,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1571,"column":0},"generated":{"line":1571,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1572,"column":0},"generated":{"line":1572,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1573,"column":0},"generated":{"line":1573,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1574,"column":0},"generated":{"line":1574,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1575,"column":0},"generated":{"line":1575,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1576,"column":0},"generated":{"line":1576,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1577,"column":0},"generated":{"line":1577,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1578,"column":0},"generated":{"line":1578,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1579,"column":0},"generated":{"line":1579,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1580,"column":0},"generated":{"line":1580,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1581,"column":0},"generated":{"line":1581,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1582,"column":0},"generated":{"line":1582,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1583,"column":0},"generated":{"line":1583,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1584,"column":0},"generated":{"line":1584,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1585,"column":0},"generated":{"line":1585,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1586,"column":0},"generated":{"line":1586,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1587,"column":0},"generated":{"line":1587,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1588,"column":0},"generated":{"line":1588,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1589,"column":0},"generated":{"line":1589,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1590,"column":0},"generated":{"line":1590,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1591,"column":0},"generated":{"line":1591,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1592,"column":0},"generated":{"line":1592,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1593,"column":0},"generated":{"line":1593,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1594,"column":0},"generated":{"line":1594,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1595,"column":0},"generated":{"line":1595,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1596,"column":0},"generated":{"line":1596,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1597,"column":0},"generated":{"line":1597,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1598,"column":0},"generated":{"line":1598,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1599,"column":0},"generated":{"line":1599,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1600,"column":0},"generated":{"line":1600,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1601,"column":0},"generated":{"line":1601,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1602,"column":0},"generated":{"line":1602,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1603,"column":0},"generated":{"line":1603,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1604,"column":0},"generated":{"line":1604,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1605,"column":0},"generated":{"line":1605,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1606,"column":0},"generated":{"line":1606,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1607,"column":0},"generated":{"line":1607,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1608,"column":0},"generated":{"line":1608,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1609,"column":0},"generated":{"line":1609,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1610,"column":0},"generated":{"line":1610,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1611,"column":0},"generated":{"line":1611,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1612,"column":0},"generated":{"line":1612,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1613,"column":0},"generated":{"line":1613,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1614,"column":0},"generated":{"line":1614,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1615,"column":0},"generated":{"line":1615,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1616,"column":0},"generated":{"line":1616,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1617,"column":0},"generated":{"line":1617,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1618,"column":0},"generated":{"line":1618,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1619,"column":0},"generated":{"line":1619,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1620,"column":0},"generated":{"line":1620,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1621,"column":0},"generated":{"line":1621,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1622,"column":0},"generated":{"line":1622,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1623,"column":0},"generated":{"line":1623,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1624,"column":0},"generated":{"line":1624,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1625,"column":0},"generated":{"line":1625,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1626,"column":0},"generated":{"line":1626,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1627,"column":0},"generated":{"line":1627,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1628,"column":0},"generated":{"line":1628,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1629,"column":0},"generated":{"line":1629,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1630,"column":0},"generated":{"line":1630,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1631,"column":0},"generated":{"line":1631,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1632,"column":0},"generated":{"line":1632,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1633,"column":0},"generated":{"line":1633,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1634,"column":0},"generated":{"line":1634,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1635,"column":0},"generated":{"line":1635,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1636,"column":0},"generated":{"line":1636,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1637,"column":0},"generated":{"line":1637,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1638,"column":0},"generated":{"line":1638,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1639,"column":0},"generated":{"line":1639,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1640,"column":0},"generated":{"line":1640,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1641,"column":0},"generated":{"line":1641,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1642,"column":0},"generated":{"line":1642,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1643,"column":0},"generated":{"line":1643,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1644,"column":0},"generated":{"line":1644,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1645,"column":0},"generated":{"line":1645,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1646,"column":0},"generated":{"line":1646,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1647,"column":0},"generated":{"line":1647,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1648,"column":0},"generated":{"line":1648,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1649,"column":0},"generated":{"line":1649,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1650,"column":0},"generated":{"line":1650,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1651,"column":0},"generated":{"line":1651,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1652,"column":0},"generated":{"line":1652,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1653,"column":0},"generated":{"line":1653,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1654,"column":0},"generated":{"line":1654,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1655,"column":0},"generated":{"line":1655,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1656,"column":0},"generated":{"line":1656,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1657,"column":0},"generated":{"line":1657,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1658,"column":0},"generated":{"line":1658,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1659,"column":0},"generated":{"line":1659,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1660,"column":0},"generated":{"line":1660,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1661,"column":0},"generated":{"line":1661,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1662,"column":0},"generated":{"line":1662,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1663,"column":0},"generated":{"line":1663,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1664,"column":0},"generated":{"line":1664,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1665,"column":0},"generated":{"line":1665,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1666,"column":0},"generated":{"line":1666,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1667,"column":0},"generated":{"line":1667,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1668,"column":0},"generated":{"line":1668,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1669,"column":0},"generated":{"line":1669,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1670,"column":0},"generated":{"line":1670,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1671,"column":0},"generated":{"line":1671,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1672,"column":0},"generated":{"line":1672,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1673,"column":0},"generated":{"line":1673,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1674,"column":0},"generated":{"line":1674,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1675,"column":0},"generated":{"line":1675,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1676,"column":0},"generated":{"line":1676,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1677,"column":0},"generated":{"line":1677,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1678,"column":0},"generated":{"line":1678,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1679,"column":0},"generated":{"line":1679,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1680,"column":0},"generated":{"line":1680,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1681,"column":0},"generated":{"line":1681,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1682,"column":0},"generated":{"line":1682,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1683,"column":0},"generated":{"line":1683,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1684,"column":0},"generated":{"line":1684,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1685,"column":0},"generated":{"line":1685,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1686,"column":0},"generated":{"line":1686,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1687,"column":0},"generated":{"line":1687,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1688,"column":0},"generated":{"line":1688,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1689,"column":0},"generated":{"line":1689,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1690,"column":0},"generated":{"line":1690,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1691,"column":0},"generated":{"line":1691,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1692,"column":0},"generated":{"line":1692,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1693,"column":0},"generated":{"line":1693,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1694,"column":0},"generated":{"line":1694,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1695,"column":0},"generated":{"line":1695,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1696,"column":0},"generated":{"line":1696,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1697,"column":0},"generated":{"line":1697,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1698,"column":0},"generated":{"line":1698,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1699,"column":0},"generated":{"line":1699,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1700,"column":0},"generated":{"line":1700,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1701,"column":0},"generated":{"line":1701,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1702,"column":0},"generated":{"line":1702,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1703,"column":0},"generated":{"line":1703,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1704,"column":0},"generated":{"line":1704,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1705,"column":0},"generated":{"line":1705,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1706,"column":0},"generated":{"line":1706,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1707,"column":0},"generated":{"line":1707,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1708,"column":0},"generated":{"line":1708,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1709,"column":0},"generated":{"line":1709,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1710,"column":0},"generated":{"line":1710,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1711,"column":0},"generated":{"line":1711,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1712,"column":0},"generated":{"line":1712,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1713,"column":0},"generated":{"line":1713,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1714,"column":0},"generated":{"line":1714,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1715,"column":0},"generated":{"line":1715,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1716,"column":0},"generated":{"line":1716,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1717,"column":0},"generated":{"line":1717,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1718,"column":0},"generated":{"line":1718,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1719,"column":0},"generated":{"line":1719,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1720,"column":0},"generated":{"line":1720,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1721,"column":0},"generated":{"line":1721,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1722,"column":0},"generated":{"line":1722,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1723,"column":0},"generated":{"line":1723,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1724,"column":0},"generated":{"line":1724,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1725,"column":0},"generated":{"line":1725,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1726,"column":0},"generated":{"line":1726,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1727,"column":0},"generated":{"line":1727,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1728,"column":0},"generated":{"line":1728,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1729,"column":0},"generated":{"line":1729,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1730,"column":0},"generated":{"line":1730,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1731,"column":0},"generated":{"line":1731,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1732,"column":0},"generated":{"line":1732,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1733,"column":0},"generated":{"line":1733,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1734,"column":0},"generated":{"line":1734,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1735,"column":0},"generated":{"line":1735,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1736,"column":0},"generated":{"line":1736,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1737,"column":0},"generated":{"line":1737,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1738,"column":0},"generated":{"line":1738,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1739,"column":0},"generated":{"line":1739,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1740,"column":0},"generated":{"line":1740,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1741,"column":0},"generated":{"line":1741,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1742,"column":0},"generated":{"line":1742,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1743,"column":0},"generated":{"line":1743,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1744,"column":0},"generated":{"line":1744,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1745,"column":0},"generated":{"line":1745,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1746,"column":0},"generated":{"line":1746,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1747,"column":0},"generated":{"line":1747,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1748,"column":0},"generated":{"line":1748,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1749,"column":0},"generated":{"line":1749,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1750,"column":0},"generated":{"line":1750,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1751,"column":0},"generated":{"line":1751,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1752,"column":0},"generated":{"line":1752,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1753,"column":0},"generated":{"line":1753,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1754,"column":0},"generated":{"line":1754,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1755,"column":0},"generated":{"line":1755,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1756,"column":0},"generated":{"line":1756,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1757,"column":0},"generated":{"line":1757,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1758,"column":0},"generated":{"line":1758,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1759,"column":0},"generated":{"line":1759,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1760,"column":0},"generated":{"line":1760,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1761,"column":0},"generated":{"line":1761,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1762,"column":0},"generated":{"line":1762,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1763,"column":0},"generated":{"line":1763,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1764,"column":0},"generated":{"line":1764,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1765,"column":0},"generated":{"line":1765,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1766,"column":0},"generated":{"line":1766,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1767,"column":0},"generated":{"line":1767,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1768,"column":0},"generated":{"line":1768,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1769,"column":0},"generated":{"line":1769,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1770,"column":0},"generated":{"line":1770,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1771,"column":0},"generated":{"line":1771,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1772,"column":0},"generated":{"line":1772,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1773,"column":0},"generated":{"line":1773,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1774,"column":0},"generated":{"line":1774,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1775,"column":0},"generated":{"line":1775,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1776,"column":0},"generated":{"line":1776,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1777,"column":0},"generated":{"line":1777,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1778,"column":0},"generated":{"line":1778,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1779,"column":0},"generated":{"line":1779,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1780,"column":0},"generated":{"line":1780,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1781,"column":0},"generated":{"line":1781,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1782,"column":0},"generated":{"line":1782,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1783,"column":0},"generated":{"line":1783,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1784,"column":0},"generated":{"line":1784,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1785,"column":0},"generated":{"line":1785,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1786,"column":0},"generated":{"line":1786,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1787,"column":0},"generated":{"line":1787,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1788,"column":0},"generated":{"line":1788,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1789,"column":0},"generated":{"line":1789,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1790,"column":0},"generated":{"line":1790,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1791,"column":0},"generated":{"line":1791,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1792,"column":0},"generated":{"line":1792,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1793,"column":0},"generated":{"line":1793,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1794,"column":0},"generated":{"line":1794,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1795,"column":0},"generated":{"line":1795,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1796,"column":0},"generated":{"line":1796,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1797,"column":0},"generated":{"line":1797,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1798,"column":0},"generated":{"line":1798,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1799,"column":0},"generated":{"line":1799,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1800,"column":0},"generated":{"line":1800,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1801,"column":0},"generated":{"line":1801,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1802,"column":0},"generated":{"line":1802,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1803,"column":0},"generated":{"line":1803,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1804,"column":0},"generated":{"line":1804,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1805,"column":0},"generated":{"line":1805,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1806,"column":0},"generated":{"line":1806,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1807,"column":0},"generated":{"line":1807,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1808,"column":0},"generated":{"line":1808,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1809,"column":0},"generated":{"line":1809,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1810,"column":0},"generated":{"line":1810,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1811,"column":0},"generated":{"line":1811,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1812,"column":0},"generated":{"line":1812,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1813,"column":0},"generated":{"line":1813,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1814,"column":0},"generated":{"line":1814,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1815,"column":0},"generated":{"line":1815,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1816,"column":0},"generated":{"line":1816,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1817,"column":0},"generated":{"line":1817,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1818,"column":0},"generated":{"line":1818,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1819,"column":0},"generated":{"line":1819,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1820,"column":0},"generated":{"line":1820,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1821,"column":0},"generated":{"line":1821,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1822,"column":0},"generated":{"line":1822,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1823,"column":0},"generated":{"line":1823,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1824,"column":0},"generated":{"line":1824,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1825,"column":0},"generated":{"line":1825,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1826,"column":0},"generated":{"line":1826,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1827,"column":0},"generated":{"line":1827,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1828,"column":0},"generated":{"line":1828,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1829,"column":0},"generated":{"line":1829,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1830,"column":0},"generated":{"line":1830,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1831,"column":0},"generated":{"line":1831,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1832,"column":0},"generated":{"line":1832,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1833,"column":0},"generated":{"line":1833,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1834,"column":0},"generated":{"line":1834,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1835,"column":0},"generated":{"line":1835,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1836,"column":0},"generated":{"line":1836,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1837,"column":0},"generated":{"line":1837,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1838,"column":0},"generated":{"line":1838,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1839,"column":0},"generated":{"line":1839,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1840,"column":0},"generated":{"line":1840,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1841,"column":0},"generated":{"line":1841,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1842,"column":0},"generated":{"line":1842,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1843,"column":0},"generated":{"line":1843,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1844,"column":0},"generated":{"line":1844,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1845,"column":0},"generated":{"line":1845,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1846,"column":0},"generated":{"line":1846,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1847,"column":0},"generated":{"line":1847,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1848,"column":0},"generated":{"line":1848,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1849,"column":0},"generated":{"line":1849,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1850,"column":0},"generated":{"line":1850,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1851,"column":0},"generated":{"line":1851,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1852,"column":0},"generated":{"line":1852,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1853,"column":0},"generated":{"line":1853,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1854,"column":0},"generated":{"line":1854,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1855,"column":0},"generated":{"line":1855,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1856,"column":0},"generated":{"line":1856,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1857,"column":0},"generated":{"line":1857,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1858,"column":0},"generated":{"line":1858,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1859,"column":0},"generated":{"line":1859,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1860,"column":0},"generated":{"line":1860,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1861,"column":0},"generated":{"line":1861,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1862,"column":0},"generated":{"line":1862,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1863,"column":0},"generated":{"line":1863,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1864,"column":0},"generated":{"line":1864,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1865,"column":0},"generated":{"line":1865,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1866,"column":0},"generated":{"line":1866,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1867,"column":0},"generated":{"line":1867,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1868,"column":0},"generated":{"line":1868,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1869,"column":0},"generated":{"line":1869,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1870,"column":0},"generated":{"line":1870,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1871,"column":0},"generated":{"line":1871,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1872,"column":0},"generated":{"line":1872,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1873,"column":0},"generated":{"line":1873,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1874,"column":0},"generated":{"line":1874,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1875,"column":0},"generated":{"line":1875,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1876,"column":0},"generated":{"line":1876,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1877,"column":0},"generated":{"line":1877,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1878,"column":0},"generated":{"line":1878,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1879,"column":0},"generated":{"line":1879,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1880,"column":0},"generated":{"line":1880,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1881,"column":0},"generated":{"line":1881,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1882,"column":0},"generated":{"line":1882,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1883,"column":0},"generated":{"line":1883,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1884,"column":0},"generated":{"line":1884,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1885,"column":0},"generated":{"line":1885,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1886,"column":0},"generated":{"line":1886,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1887,"column":0},"generated":{"line":1887,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1888,"column":0},"generated":{"line":1888,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1889,"column":0},"generated":{"line":1889,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1890,"column":0},"generated":{"line":1890,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1891,"column":0},"generated":{"line":1891,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1892,"column":0},"generated":{"line":1892,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1893,"column":0},"generated":{"line":1893,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1894,"column":0},"generated":{"line":1894,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1895,"column":0},"generated":{"line":1895,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1896,"column":0},"generated":{"line":1896,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1897,"column":0},"generated":{"line":1897,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1898,"column":0},"generated":{"line":1898,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1899,"column":0},"generated":{"line":1899,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1900,"column":0},"generated":{"line":1900,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1901,"column":0},"generated":{"line":1901,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1902,"column":0},"generated":{"line":1902,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1903,"column":0},"generated":{"line":1903,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1904,"column":0},"generated":{"line":1904,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1905,"column":0},"generated":{"line":1905,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1906,"column":0},"generated":{"line":1906,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1907,"column":0},"generated":{"line":1907,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1908,"column":0},"generated":{"line":1908,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1909,"column":0},"generated":{"line":1909,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1910,"column":0},"generated":{"line":1910,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1911,"column":0},"generated":{"line":1911,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1912,"column":0},"generated":{"line":1912,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1913,"column":0},"generated":{"line":1913,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1914,"column":0},"generated":{"line":1914,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1915,"column":0},"generated":{"line":1915,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1916,"column":0},"generated":{"line":1916,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1917,"column":0},"generated":{"line":1917,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1918,"column":0},"generated":{"line":1918,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1919,"column":0},"generated":{"line":1919,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1920,"column":0},"generated":{"line":1920,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1921,"column":0},"generated":{"line":1921,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1922,"column":0},"generated":{"line":1922,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1923,"column":0},"generated":{"line":1923,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1924,"column":0},"generated":{"line":1924,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1925,"column":0},"generated":{"line":1925,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1926,"column":0},"generated":{"line":1926,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1927,"column":0},"generated":{"line":1927,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1928,"column":0},"generated":{"line":1928,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1929,"column":0},"generated":{"line":1929,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1930,"column":0},"generated":{"line":1930,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1931,"column":0},"generated":{"line":1931,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1932,"column":0},"generated":{"line":1932,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1933,"column":0},"generated":{"line":1933,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1934,"column":0},"generated":{"line":1934,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1935,"column":0},"generated":{"line":1935,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1936,"column":0},"generated":{"line":1936,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1937,"column":0},"generated":{"line":1937,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1938,"column":0},"generated":{"line":1938,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1939,"column":0},"generated":{"line":1939,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1940,"column":0},"generated":{"line":1940,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1941,"column":0},"generated":{"line":1941,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1942,"column":0},"generated":{"line":1942,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1943,"column":0},"generated":{"line":1943,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1944,"column":0},"generated":{"line":1944,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1945,"column":0},"generated":{"line":1945,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1946,"column":0},"generated":{"line":1946,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1947,"column":0},"generated":{"line":1947,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1948,"column":0},"generated":{"line":1948,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1949,"column":0},"generated":{"line":1949,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1950,"column":0},"generated":{"line":1950,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1951,"column":0},"generated":{"line":1951,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1952,"column":0},"generated":{"line":1952,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1953,"column":0},"generated":{"line":1953,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1954,"column":0},"generated":{"line":1954,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1955,"column":0},"generated":{"line":1955,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1956,"column":0},"generated":{"line":1956,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1957,"column":0},"generated":{"line":1957,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1958,"column":0},"generated":{"line":1958,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1959,"column":0},"generated":{"line":1959,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1960,"column":0},"generated":{"line":1960,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1961,"column":0},"generated":{"line":1961,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1962,"column":0},"generated":{"line":1962,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1963,"column":0},"generated":{"line":1963,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1964,"column":0},"generated":{"line":1964,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1965,"column":0},"generated":{"line":1965,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1966,"column":0},"generated":{"line":1966,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1967,"column":0},"generated":{"line":1967,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1968,"column":0},"generated":{"line":1968,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1969,"column":0},"generated":{"line":1969,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1970,"column":0},"generated":{"line":1970,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1971,"column":0},"generated":{"line":1971,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1972,"column":0},"generated":{"line":1972,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1973,"column":0},"generated":{"line":1973,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1974,"column":0},"generated":{"line":1974,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1975,"column":0},"generated":{"line":1975,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1976,"column":0},"generated":{"line":1976,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1977,"column":0},"generated":{"line":1977,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1978,"column":0},"generated":{"line":1978,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1979,"column":0},"generated":{"line":1979,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1980,"column":0},"generated":{"line":1980,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1981,"column":0},"generated":{"line":1981,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1982,"column":0},"generated":{"line":1982,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1983,"column":0},"generated":{"line":1983,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1984,"column":0},"generated":{"line":1984,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1985,"column":0},"generated":{"line":1985,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1986,"column":0},"generated":{"line":1986,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1987,"column":0},"generated":{"line":1987,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1988,"column":0},"generated":{"line":1988,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1989,"column":0},"generated":{"line":1989,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1990,"column":0},"generated":{"line":1990,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1991,"column":0},"generated":{"line":1991,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1992,"column":0},"generated":{"line":1992,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1993,"column":0},"generated":{"line":1993,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1994,"column":0},"generated":{"line":1994,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1995,"column":0},"generated":{"line":1995,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1996,"column":0},"generated":{"line":1996,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1997,"column":0},"generated":{"line":1997,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1998,"column":0},"generated":{"line":1998,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":1999,"column":0},"generated":{"line":1999,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2000,"column":0},"generated":{"line":2000,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2001,"column":0},"generated":{"line":2001,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2002,"column":0},"generated":{"line":2002,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2003,"column":0},"generated":{"line":2003,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2004,"column":0},"generated":{"line":2004,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2005,"column":0},"generated":{"line":2005,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2006,"column":0},"generated":{"line":2006,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2007,"column":0},"generated":{"line":2007,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2008,"column":0},"generated":{"line":2008,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2009,"column":0},"generated":{"line":2009,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2010,"column":0},"generated":{"line":2010,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2011,"column":0},"generated":{"line":2011,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2012,"column":0},"generated":{"line":2012,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2013,"column":0},"generated":{"line":2013,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2014,"column":0},"generated":{"line":2014,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2015,"column":0},"generated":{"line":2015,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2016,"column":0},"generated":{"line":2016,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2017,"column":0},"generated":{"line":2017,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2018,"column":0},"generated":{"line":2018,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2019,"column":0},"generated":{"line":2019,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2020,"column":0},"generated":{"line":2020,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2021,"column":0},"generated":{"line":2021,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2022,"column":0},"generated":{"line":2022,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2023,"column":0},"generated":{"line":2023,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2024,"column":0},"generated":{"line":2024,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2025,"column":0},"generated":{"line":2025,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2026,"column":0},"generated":{"line":2026,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2027,"column":0},"generated":{"line":2027,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2028,"column":0},"generated":{"line":2028,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2029,"column":0},"generated":{"line":2029,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2030,"column":0},"generated":{"line":2030,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2031,"column":0},"generated":{"line":2031,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2032,"column":0},"generated":{"line":2032,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2033,"column":0},"generated":{"line":2033,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2034,"column":0},"generated":{"line":2034,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2035,"column":0},"generated":{"line":2035,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2036,"column":0},"generated":{"line":2036,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2037,"column":0},"generated":{"line":2037,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2038,"column":0},"generated":{"line":2038,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2039,"column":0},"generated":{"line":2039,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2040,"column":0},"generated":{"line":2040,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2041,"column":0},"generated":{"line":2041,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2042,"column":0},"generated":{"line":2042,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2043,"column":0},"generated":{"line":2043,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2044,"column":0},"generated":{"line":2044,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2045,"column":0},"generated":{"line":2045,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2046,"column":0},"generated":{"line":2046,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2047,"column":0},"generated":{"line":2047,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2048,"column":0},"generated":{"line":2048,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2049,"column":0},"generated":{"line":2049,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2050,"column":0},"generated":{"line":2050,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2051,"column":0},"generated":{"line":2051,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2052,"column":0},"generated":{"line":2052,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2053,"column":0},"generated":{"line":2053,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2054,"column":0},"generated":{"line":2054,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2055,"column":0},"generated":{"line":2055,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2056,"column":0},"generated":{"line":2056,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2057,"column":0},"generated":{"line":2057,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2058,"column":0},"generated":{"line":2058,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2059,"column":0},"generated":{"line":2059,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2060,"column":0},"generated":{"line":2060,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2061,"column":0},"generated":{"line":2061,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2062,"column":0},"generated":{"line":2062,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2063,"column":0},"generated":{"line":2063,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2064,"column":0},"generated":{"line":2064,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2065,"column":0},"generated":{"line":2065,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2066,"column":0},"generated":{"line":2066,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2067,"column":0},"generated":{"line":2067,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2068,"column":0},"generated":{"line":2068,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2069,"column":0},"generated":{"line":2069,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2070,"column":0},"generated":{"line":2070,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2071,"column":0},"generated":{"line":2071,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2072,"column":0},"generated":{"line":2072,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2073,"column":0},"generated":{"line":2073,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2074,"column":0},"generated":{"line":2074,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2075,"column":0},"generated":{"line":2075,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2076,"column":0},"generated":{"line":2076,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2077,"column":0},"generated":{"line":2077,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2078,"column":0},"generated":{"line":2078,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2079,"column":0},"generated":{"line":2079,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2080,"column":0},"generated":{"line":2080,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2081,"column":0},"generated":{"line":2081,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2082,"column":0},"generated":{"line":2082,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2083,"column":0},"generated":{"line":2083,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2084,"column":0},"generated":{"line":2084,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2085,"column":0},"generated":{"line":2085,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2086,"column":0},"generated":{"line":2086,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2087,"column":0},"generated":{"line":2087,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2088,"column":0},"generated":{"line":2088,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2089,"column":0},"generated":{"line":2089,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2090,"column":0},"generated":{"line":2090,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2091,"column":0},"generated":{"line":2091,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2092,"column":0},"generated":{"line":2092,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2093,"column":0},"generated":{"line":2093,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2094,"column":0},"generated":{"line":2094,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2095,"column":0},"generated":{"line":2095,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2096,"column":0},"generated":{"line":2096,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2097,"column":0},"generated":{"line":2097,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2098,"column":0},"generated":{"line":2098,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2099,"column":0},"generated":{"line":2099,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2100,"column":0},"generated":{"line":2100,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2101,"column":0},"generated":{"line":2101,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2102,"column":0},"generated":{"line":2102,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2103,"column":0},"generated":{"line":2103,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2104,"column":0},"generated":{"line":2104,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2105,"column":0},"generated":{"line":2105,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2106,"column":0},"generated":{"line":2106,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2107,"column":0},"generated":{"line":2107,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2108,"column":0},"generated":{"line":2108,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2109,"column":0},"generated":{"line":2109,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2110,"column":0},"generated":{"line":2110,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2111,"column":0},"generated":{"line":2111,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2112,"column":0},"generated":{"line":2112,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2113,"column":0},"generated":{"line":2113,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2114,"column":0},"generated":{"line":2114,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2115,"column":0},"generated":{"line":2115,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2116,"column":0},"generated":{"line":2116,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2117,"column":0},"generated":{"line":2117,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2118,"column":0},"generated":{"line":2118,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2119,"column":0},"generated":{"line":2119,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2120,"column":0},"generated":{"line":2120,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2121,"column":0},"generated":{"line":2121,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2122,"column":0},"generated":{"line":2122,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2123,"column":0},"generated":{"line":2123,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2124,"column":0},"generated":{"line":2124,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2125,"column":0},"generated":{"line":2125,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2126,"column":0},"generated":{"line":2126,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2127,"column":0},"generated":{"line":2127,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2128,"column":0},"generated":{"line":2128,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2129,"column":0},"generated":{"line":2129,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2130,"column":0},"generated":{"line":2130,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2131,"column":0},"generated":{"line":2131,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2132,"column":0},"generated":{"line":2132,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2133,"column":0},"generated":{"line":2133,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2134,"column":0},"generated":{"line":2134,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2135,"column":0},"generated":{"line":2135,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2136,"column":0},"generated":{"line":2136,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2137,"column":0},"generated":{"line":2137,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2138,"column":0},"generated":{"line":2138,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2139,"column":0},"generated":{"line":2139,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2140,"column":0},"generated":{"line":2140,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2141,"column":0},"generated":{"line":2141,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2142,"column":0},"generated":{"line":2142,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2143,"column":0},"generated":{"line":2143,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2144,"column":0},"generated":{"line":2144,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2145,"column":0},"generated":{"line":2145,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2146,"column":0},"generated":{"line":2146,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2147,"column":0},"generated":{"line":2147,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2148,"column":0},"generated":{"line":2148,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2149,"column":0},"generated":{"line":2149,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2150,"column":0},"generated":{"line":2150,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2151,"column":0},"generated":{"line":2151,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2152,"column":0},"generated":{"line":2152,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2153,"column":0},"generated":{"line":2153,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2154,"column":0},"generated":{"line":2154,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2155,"column":0},"generated":{"line":2155,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2156,"column":0},"generated":{"line":2156,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2157,"column":0},"generated":{"line":2157,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2158,"column":0},"generated":{"line":2158,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2159,"column":0},"generated":{"line":2159,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2160,"column":0},"generated":{"line":2160,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2161,"column":0},"generated":{"line":2161,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2162,"column":0},"generated":{"line":2162,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2163,"column":0},"generated":{"line":2163,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2164,"column":0},"generated":{"line":2164,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2165,"column":0},"generated":{"line":2165,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2166,"column":0},"generated":{"line":2166,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2167,"column":0},"generated":{"line":2167,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2168,"column":0},"generated":{"line":2168,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2169,"column":0},"generated":{"line":2169,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2170,"column":0},"generated":{"line":2170,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2171,"column":0},"generated":{"line":2171,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2172,"column":0},"generated":{"line":2172,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2173,"column":0},"generated":{"line":2173,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2174,"column":0},"generated":{"line":2174,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2175,"column":0},"generated":{"line":2175,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2176,"column":0},"generated":{"line":2176,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2177,"column":0},"generated":{"line":2177,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2178,"column":0},"generated":{"line":2178,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2179,"column":0},"generated":{"line":2179,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2180,"column":0},"generated":{"line":2180,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2181,"column":0},"generated":{"line":2181,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2182,"column":0},"generated":{"line":2182,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2183,"column":0},"generated":{"line":2183,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2184,"column":0},"generated":{"line":2184,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2185,"column":0},"generated":{"line":2185,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2186,"column":0},"generated":{"line":2186,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2187,"column":0},"generated":{"line":2187,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2188,"column":0},"generated":{"line":2188,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2189,"column":0},"generated":{"line":2189,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2190,"column":0},"generated":{"line":2190,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2191,"column":0},"generated":{"line":2191,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2192,"column":0},"generated":{"line":2192,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2193,"column":0},"generated":{"line":2193,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2194,"column":0},"generated":{"line":2194,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2195,"column":0},"generated":{"line":2195,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2196,"column":0},"generated":{"line":2196,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2197,"column":0},"generated":{"line":2197,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2198,"column":0},"generated":{"line":2198,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2199,"column":0},"generated":{"line":2199,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2200,"column":0},"generated":{"line":2200,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2201,"column":0},"generated":{"line":2201,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2202,"column":0},"generated":{"line":2202,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2203,"column":0},"generated":{"line":2203,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2204,"column":0},"generated":{"line":2204,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2205,"column":0},"generated":{"line":2205,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2206,"column":0},"generated":{"line":2206,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2207,"column":0},"generated":{"line":2207,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2208,"column":0},"generated":{"line":2208,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2209,"column":0},"generated":{"line":2209,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2210,"column":0},"generated":{"line":2210,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2211,"column":0},"generated":{"line":2211,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2212,"column":0},"generated":{"line":2212,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2213,"column":0},"generated":{"line":2213,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2214,"column":0},"generated":{"line":2214,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2215,"column":0},"generated":{"line":2215,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2216,"column":0},"generated":{"line":2216,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2217,"column":0},"generated":{"line":2217,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2218,"column":0},"generated":{"line":2218,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2219,"column":0},"generated":{"line":2219,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2220,"column":0},"generated":{"line":2220,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2221,"column":0},"generated":{"line":2221,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2222,"column":0},"generated":{"line":2222,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2223,"column":0},"generated":{"line":2223,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2224,"column":0},"generated":{"line":2224,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2225,"column":0},"generated":{"line":2225,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2226,"column":0},"generated":{"line":2226,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2227,"column":0},"generated":{"line":2227,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2228,"column":0},"generated":{"line":2228,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2229,"column":0},"generated":{"line":2229,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2230,"column":0},"generated":{"line":2230,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2231,"column":0},"generated":{"line":2231,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2232,"column":0},"generated":{"line":2232,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2233,"column":0},"generated":{"line":2233,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2234,"column":0},"generated":{"line":2234,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2235,"column":0},"generated":{"line":2235,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2236,"column":0},"generated":{"line":2236,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2237,"column":0},"generated":{"line":2237,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2238,"column":0},"generated":{"line":2238,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2239,"column":0},"generated":{"line":2239,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2240,"column":0},"generated":{"line":2240,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2241,"column":0},"generated":{"line":2241,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2242,"column":0},"generated":{"line":2242,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2243,"column":0},"generated":{"line":2243,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2244,"column":0},"generated":{"line":2244,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2245,"column":0},"generated":{"line":2245,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2246,"column":0},"generated":{"line":2246,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2247,"column":0},"generated":{"line":2247,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2248,"column":0},"generated":{"line":2248,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2249,"column":0},"generated":{"line":2249,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2250,"column":0},"generated":{"line":2250,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2251,"column":0},"generated":{"line":2251,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2252,"column":0},"generated":{"line":2252,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2253,"column":0},"generated":{"line":2253,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2254,"column":0},"generated":{"line":2254,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2255,"column":0},"generated":{"line":2255,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2256,"column":0},"generated":{"line":2256,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2257,"column":0},"generated":{"line":2257,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2258,"column":0},"generated":{"line":2258,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2259,"column":0},"generated":{"line":2259,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2260,"column":0},"generated":{"line":2260,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2261,"column":0},"generated":{"line":2261,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2262,"column":0},"generated":{"line":2262,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2263,"column":0},"generated":{"line":2263,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2264,"column":0},"generated":{"line":2264,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2265,"column":0},"generated":{"line":2265,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2266,"column":0},"generated":{"line":2266,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2267,"column":0},"generated":{"line":2267,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2268,"column":0},"generated":{"line":2268,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2269,"column":0},"generated":{"line":2269,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2270,"column":0},"generated":{"line":2270,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2271,"column":0},"generated":{"line":2271,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2272,"column":0},"generated":{"line":2272,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2273,"column":0},"generated":{"line":2273,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2274,"column":0},"generated":{"line":2274,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2275,"column":0},"generated":{"line":2275,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2276,"column":0},"generated":{"line":2276,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2277,"column":0},"generated":{"line":2277,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2278,"column":0},"generated":{"line":2278,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2279,"column":0},"generated":{"line":2279,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2280,"column":0},"generated":{"line":2280,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2281,"column":0},"generated":{"line":2281,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2282,"column":0},"generated":{"line":2282,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2283,"column":0},"generated":{"line":2283,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2284,"column":0},"generated":{"line":2284,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2285,"column":0},"generated":{"line":2285,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2286,"column":0},"generated":{"line":2286,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2287,"column":0},"generated":{"line":2287,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2288,"column":0},"generated":{"line":2288,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2289,"column":0},"generated":{"line":2289,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2290,"column":0},"generated":{"line":2290,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2291,"column":0},"generated":{"line":2291,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2292,"column":0},"generated":{"line":2292,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2293,"column":0},"generated":{"line":2293,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2294,"column":0},"generated":{"line":2294,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2295,"column":0},"generated":{"line":2295,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2296,"column":0},"generated":{"line":2296,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2297,"column":0},"generated":{"line":2297,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2298,"column":0},"generated":{"line":2298,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2299,"column":0},"generated":{"line":2299,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2300,"column":0},"generated":{"line":2300,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2301,"column":0},"generated":{"line":2301,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2302,"column":0},"generated":{"line":2302,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2303,"column":0},"generated":{"line":2303,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2304,"column":0},"generated":{"line":2304,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2305,"column":0},"generated":{"line":2305,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2306,"column":0},"generated":{"line":2306,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2307,"column":0},"generated":{"line":2307,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2308,"column":0},"generated":{"line":2308,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2309,"column":0},"generated":{"line":2309,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2310,"column":0},"generated":{"line":2310,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2311,"column":0},"generated":{"line":2311,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2312,"column":0},"generated":{"line":2312,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2313,"column":0},"generated":{"line":2313,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2314,"column":0},"generated":{"line":2314,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2315,"column":0},"generated":{"line":2315,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2316,"column":0},"generated":{"line":2316,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2317,"column":0},"generated":{"line":2317,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2318,"column":0},"generated":{"line":2318,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2319,"column":0},"generated":{"line":2319,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2320,"column":0},"generated":{"line":2320,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2321,"column":0},"generated":{"line":2321,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2322,"column":0},"generated":{"line":2322,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2323,"column":0},"generated":{"line":2323,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2324,"column":0},"generated":{"line":2324,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2325,"column":0},"generated":{"line":2325,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2326,"column":0},"generated":{"line":2326,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2327,"column":0},"generated":{"line":2327,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2328,"column":0},"generated":{"line":2328,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2329,"column":0},"generated":{"line":2329,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2330,"column":0},"generated":{"line":2330,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2331,"column":0},"generated":{"line":2331,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2332,"column":0},"generated":{"line":2332,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2333,"column":0},"generated":{"line":2333,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2334,"column":0},"generated":{"line":2334,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2335,"column":0},"generated":{"line":2335,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2336,"column":0},"generated":{"line":2336,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2337,"column":0},"generated":{"line":2337,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2338,"column":0},"generated":{"line":2338,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2339,"column":0},"generated":{"line":2339,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2340,"column":0},"generated":{"line":2340,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2341,"column":0},"generated":{"line":2341,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2342,"column":0},"generated":{"line":2342,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2343,"column":0},"generated":{"line":2343,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2344,"column":0},"generated":{"line":2344,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2345,"column":0},"generated":{"line":2345,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2346,"column":0},"generated":{"line":2346,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2347,"column":0},"generated":{"line":2347,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2348,"column":0},"generated":{"line":2348,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2349,"column":0},"generated":{"line":2349,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2350,"column":0},"generated":{"line":2350,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2351,"column":0},"generated":{"line":2351,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2352,"column":0},"generated":{"line":2352,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2353,"column":0},"generated":{"line":2353,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2354,"column":0},"generated":{"line":2354,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2355,"column":0},"generated":{"line":2355,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2356,"column":0},"generated":{"line":2356,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2357,"column":0},"generated":{"line":2357,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2358,"column":0},"generated":{"line":2358,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2359,"column":0},"generated":{"line":2359,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2360,"column":0},"generated":{"line":2360,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2361,"column":0},"generated":{"line":2361,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2362,"column":0},"generated":{"line":2362,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2363,"column":0},"generated":{"line":2363,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2364,"column":0},"generated":{"line":2364,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2365,"column":0},"generated":{"line":2365,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2366,"column":0},"generated":{"line":2366,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2367,"column":0},"generated":{"line":2367,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2368,"column":0},"generated":{"line":2368,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2369,"column":0},"generated":{"line":2369,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2370,"column":0},"generated":{"line":2370,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2371,"column":0},"generated":{"line":2371,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2372,"column":0},"generated":{"line":2372,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2373,"column":0},"generated":{"line":2373,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2374,"column":0},"generated":{"line":2374,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2375,"column":0},"generated":{"line":2375,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2376,"column":0},"generated":{"line":2376,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2377,"column":0},"generated":{"line":2377,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2378,"column":0},"generated":{"line":2378,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2379,"column":0},"generated":{"line":2379,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2380,"column":0},"generated":{"line":2380,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2381,"column":0},"generated":{"line":2381,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2382,"column":0},"generated":{"line":2382,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2383,"column":0},"generated":{"line":2383,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2384,"column":0},"generated":{"line":2384,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2385,"column":0},"generated":{"line":2385,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2386,"column":0},"generated":{"line":2386,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2387,"column":0},"generated":{"line":2387,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2388,"column":0},"generated":{"line":2388,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2389,"column":0},"generated":{"line":2389,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2390,"column":0},"generated":{"line":2390,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2391,"column":0},"generated":{"line":2391,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2392,"column":0},"generated":{"line":2392,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2393,"column":0},"generated":{"line":2393,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2394,"column":0},"generated":{"line":2394,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2395,"column":0},"generated":{"line":2395,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2396,"column":0},"generated":{"line":2396,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2397,"column":0},"generated":{"line":2397,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2398,"column":0},"generated":{"line":2398,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2399,"column":0},"generated":{"line":2399,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2400,"column":0},"generated":{"line":2400,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2401,"column":0},"generated":{"line":2401,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2402,"column":0},"generated":{"line":2402,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2403,"column":0},"generated":{"line":2403,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2404,"column":0},"generated":{"line":2404,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2405,"column":0},"generated":{"line":2405,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2406,"column":0},"generated":{"line":2406,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2407,"column":0},"generated":{"line":2407,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2408,"column":0},"generated":{"line":2408,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2409,"column":0},"generated":{"line":2409,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2410,"column":0},"generated":{"line":2410,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2411,"column":0},"generated":{"line":2411,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2412,"column":0},"generated":{"line":2412,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2413,"column":0},"generated":{"line":2413,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2414,"column":0},"generated":{"line":2414,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2415,"column":0},"generated":{"line":2415,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2416,"column":0},"generated":{"line":2416,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2417,"column":0},"generated":{"line":2417,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2418,"column":0},"generated":{"line":2418,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2419,"column":0},"generated":{"line":2419,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2420,"column":0},"generated":{"line":2420,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2421,"column":0},"generated":{"line":2421,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2422,"column":0},"generated":{"line":2422,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2423,"column":0},"generated":{"line":2423,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2424,"column":0},"generated":{"line":2424,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2425,"column":0},"generated":{"line":2425,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2426,"column":0},"generated":{"line":2426,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2427,"column":0},"generated":{"line":2427,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2428,"column":0},"generated":{"line":2428,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2429,"column":0},"generated":{"line":2429,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2430,"column":0},"generated":{"line":2430,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2431,"column":0},"generated":{"line":2431,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2432,"column":0},"generated":{"line":2432,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2433,"column":0},"generated":{"line":2433,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2434,"column":0},"generated":{"line":2434,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2435,"column":0},"generated":{"line":2435,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2436,"column":0},"generated":{"line":2436,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2437,"column":0},"generated":{"line":2437,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2438,"column":0},"generated":{"line":2438,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2439,"column":0},"generated":{"line":2439,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2440,"column":0},"generated":{"line":2440,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2441,"column":0},"generated":{"line":2441,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2442,"column":0},"generated":{"line":2442,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2443,"column":0},"generated":{"line":2443,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2444,"column":0},"generated":{"line":2444,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2445,"column":0},"generated":{"line":2445,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2446,"column":0},"generated":{"line":2446,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2447,"column":0},"generated":{"line":2447,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2448,"column":0},"generated":{"line":2448,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2449,"column":0},"generated":{"line":2449,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2450,"column":0},"generated":{"line":2450,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2451,"column":0},"generated":{"line":2451,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2452,"column":0},"generated":{"line":2452,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2453,"column":0},"generated":{"line":2453,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2454,"column":0},"generated":{"line":2454,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2455,"column":0},"generated":{"line":2455,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2456,"column":0},"generated":{"line":2456,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2457,"column":0},"generated":{"line":2457,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2458,"column":0},"generated":{"line":2458,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2459,"column":0},"generated":{"line":2459,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2460,"column":0},"generated":{"line":2460,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2461,"column":0},"generated":{"line":2461,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2462,"column":0},"generated":{"line":2462,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2463,"column":0},"generated":{"line":2463,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2464,"column":0},"generated":{"line":2464,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2465,"column":0},"generated":{"line":2465,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2466,"column":0},"generated":{"line":2466,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2467,"column":0},"generated":{"line":2467,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2468,"column":0},"generated":{"line":2468,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2469,"column":0},"generated":{"line":2469,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2470,"column":0},"generated":{"line":2470,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2471,"column":0},"generated":{"line":2471,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2472,"column":0},"generated":{"line":2472,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2473,"column":0},"generated":{"line":2473,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2474,"column":0},"generated":{"line":2474,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2475,"column":0},"generated":{"line":2475,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2476,"column":0},"generated":{"line":2476,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2477,"column":0},"generated":{"line":2477,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2478,"column":0},"generated":{"line":2478,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2479,"column":0},"generated":{"line":2479,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2480,"column":0},"generated":{"line":2480,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2481,"column":0},"generated":{"line":2481,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2482,"column":0},"generated":{"line":2482,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2483,"column":0},"generated":{"line":2483,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2484,"column":0},"generated":{"line":2484,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2485,"column":0},"generated":{"line":2485,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2486,"column":0},"generated":{"line":2486,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2487,"column":0},"generated":{"line":2487,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2488,"column":0},"generated":{"line":2488,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2489,"column":0},"generated":{"line":2489,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2490,"column":0},"generated":{"line":2490,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2491,"column":0},"generated":{"line":2491,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2492,"column":0},"generated":{"line":2492,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2493,"column":0},"generated":{"line":2493,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2494,"column":0},"generated":{"line":2494,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2495,"column":0},"generated":{"line":2495,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2496,"column":0},"generated":{"line":2496,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2497,"column":0},"generated":{"line":2497,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2498,"column":0},"generated":{"line":2498,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2499,"column":0},"generated":{"line":2499,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2500,"column":0},"generated":{"line":2500,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2501,"column":0},"generated":{"line":2501,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2502,"column":0},"generated":{"line":2502,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2503,"column":0},"generated":{"line":2503,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2504,"column":0},"generated":{"line":2504,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2505,"column":0},"generated":{"line":2505,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2506,"column":0},"generated":{"line":2506,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2507,"column":0},"generated":{"line":2507,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2508,"column":0},"generated":{"line":2508,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2509,"column":0},"generated":{"line":2509,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2510,"column":0},"generated":{"line":2510,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2511,"column":0},"generated":{"line":2511,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2512,"column":0},"generated":{"line":2512,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2513,"column":0},"generated":{"line":2513,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2514,"column":0},"generated":{"line":2514,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2515,"column":0},"generated":{"line":2515,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2516,"column":0},"generated":{"line":2516,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2517,"column":0},"generated":{"line":2517,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2518,"column":0},"generated":{"line":2518,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2519,"column":0},"generated":{"line":2519,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2520,"column":0},"generated":{"line":2520,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2521,"column":0},"generated":{"line":2521,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2522,"column":0},"generated":{"line":2522,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2523,"column":0},"generated":{"line":2523,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2524,"column":0},"generated":{"line":2524,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2525,"column":0},"generated":{"line":2525,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2526,"column":0},"generated":{"line":2526,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2527,"column":0},"generated":{"line":2527,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2528,"column":0},"generated":{"line":2528,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2529,"column":0},"generated":{"line":2529,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2530,"column":0},"generated":{"line":2530,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2531,"column":0},"generated":{"line":2531,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2532,"column":0},"generated":{"line":2532,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2533,"column":0},"generated":{"line":2533,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2534,"column":0},"generated":{"line":2534,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2535,"column":0},"generated":{"line":2535,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2536,"column":0},"generated":{"line":2536,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2537,"column":0},"generated":{"line":2537,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2538,"column":0},"generated":{"line":2538,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2539,"column":0},"generated":{"line":2539,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2540,"column":0},"generated":{"line":2540,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2541,"column":0},"generated":{"line":2541,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2542,"column":0},"generated":{"line":2542,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2543,"column":0},"generated":{"line":2543,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2544,"column":0},"generated":{"line":2544,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2545,"column":0},"generated":{"line":2545,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2546,"column":0},"generated":{"line":2546,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2547,"column":0},"generated":{"line":2547,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2548,"column":0},"generated":{"line":2548,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2549,"column":0},"generated":{"line":2549,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2550,"column":0},"generated":{"line":2550,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2551,"column":0},"generated":{"line":2551,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2552,"column":0},"generated":{"line":2552,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2553,"column":0},"generated":{"line":2553,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2554,"column":0},"generated":{"line":2554,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2555,"column":0},"generated":{"line":2555,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2556,"column":0},"generated":{"line":2556,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2557,"column":0},"generated":{"line":2557,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2558,"column":0},"generated":{"line":2558,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2559,"column":0},"generated":{"line":2559,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2560,"column":0},"generated":{"line":2560,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2561,"column":0},"generated":{"line":2561,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2562,"column":0},"generated":{"line":2562,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2563,"column":0},"generated":{"line":2563,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2564,"column":0},"generated":{"line":2564,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2565,"column":0},"generated":{"line":2565,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2566,"column":0},"generated":{"line":2566,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2567,"column":0},"generated":{"line":2567,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2568,"column":0},"generated":{"line":2568,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2569,"column":0},"generated":{"line":2569,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2570,"column":0},"generated":{"line":2570,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2571,"column":0},"generated":{"line":2571,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2572,"column":0},"generated":{"line":2572,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2573,"column":0},"generated":{"line":2573,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2574,"column":0},"generated":{"line":2574,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2575,"column":0},"generated":{"line":2575,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2576,"column":0},"generated":{"line":2576,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2577,"column":0},"generated":{"line":2577,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2578,"column":0},"generated":{"line":2578,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2579,"column":0},"generated":{"line":2579,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2580,"column":0},"generated":{"line":2580,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2581,"column":0},"generated":{"line":2581,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2582,"column":0},"generated":{"line":2582,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2583,"column":0},"generated":{"line":2583,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2584,"column":0},"generated":{"line":2584,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2585,"column":0},"generated":{"line":2585,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2586,"column":0},"generated":{"line":2586,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2587,"column":0},"generated":{"line":2587,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2588,"column":0},"generated":{"line":2588,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2589,"column":0},"generated":{"line":2589,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2590,"column":0},"generated":{"line":2590,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2591,"column":0},"generated":{"line":2591,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2592,"column":0},"generated":{"line":2592,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2593,"column":0},"generated":{"line":2593,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2594,"column":0},"generated":{"line":2594,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2595,"column":0},"generated":{"line":2595,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2596,"column":0},"generated":{"line":2596,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2597,"column":0},"generated":{"line":2597,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2598,"column":0},"generated":{"line":2598,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2599,"column":0},"generated":{"line":2599,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2600,"column":0},"generated":{"line":2600,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2601,"column":0},"generated":{"line":2601,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2602,"column":0},"generated":{"line":2602,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2603,"column":0},"generated":{"line":2603,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2604,"column":0},"generated":{"line":2604,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2605,"column":0},"generated":{"line":2605,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2606,"column":0},"generated":{"line":2606,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2607,"column":0},"generated":{"line":2607,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2608,"column":0},"generated":{"line":2608,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2609,"column":0},"generated":{"line":2609,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2610,"column":0},"generated":{"line":2610,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2611,"column":0},"generated":{"line":2611,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2612,"column":0},"generated":{"line":2612,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2613,"column":0},"generated":{"line":2613,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2614,"column":0},"generated":{"line":2614,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2615,"column":0},"generated":{"line":2615,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2616,"column":0},"generated":{"line":2616,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2617,"column":0},"generated":{"line":2617,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2618,"column":0},"generated":{"line":2618,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2619,"column":0},"generated":{"line":2619,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2620,"column":0},"generated":{"line":2620,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2621,"column":0},"generated":{"line":2621,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2622,"column":0},"generated":{"line":2622,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2623,"column":0},"generated":{"line":2623,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2624,"column":0},"generated":{"line":2624,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2625,"column":0},"generated":{"line":2625,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2626,"column":0},"generated":{"line":2626,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2627,"column":0},"generated":{"line":2627,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2628,"column":0},"generated":{"line":2628,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2629,"column":0},"generated":{"line":2629,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2630,"column":0},"generated":{"line":2630,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2631,"column":0},"generated":{"line":2631,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2632,"column":0},"generated":{"line":2632,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2633,"column":0},"generated":{"line":2633,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2634,"column":0},"generated":{"line":2634,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2635,"column":0},"generated":{"line":2635,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2636,"column":0},"generated":{"line":2636,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2637,"column":0},"generated":{"line":2637,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2638,"column":0},"generated":{"line":2638,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2639,"column":0},"generated":{"line":2639,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2640,"column":0},"generated":{"line":2640,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2641,"column":0},"generated":{"line":2641,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2642,"column":0},"generated":{"line":2642,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2643,"column":0},"generated":{"line":2643,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2644,"column":0},"generated":{"line":2644,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2645,"column":0},"generated":{"line":2645,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2646,"column":0},"generated":{"line":2646,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2647,"column":0},"generated":{"line":2647,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2648,"column":0},"generated":{"line":2648,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2649,"column":0},"generated":{"line":2649,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2650,"column":0},"generated":{"line":2650,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2651,"column":0},"generated":{"line":2651,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2652,"column":0},"generated":{"line":2652,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2653,"column":0},"generated":{"line":2653,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2654,"column":0},"generated":{"line":2654,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2655,"column":0},"generated":{"line":2655,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2656,"column":0},"generated":{"line":2656,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2657,"column":0},"generated":{"line":2657,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2658,"column":0},"generated":{"line":2658,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2659,"column":0},"generated":{"line":2659,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2660,"column":0},"generated":{"line":2660,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2661,"column":0},"generated":{"line":2661,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2662,"column":0},"generated":{"line":2662,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2663,"column":0},"generated":{"line":2663,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2664,"column":0},"generated":{"line":2664,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2665,"column":0},"generated":{"line":2665,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2666,"column":0},"generated":{"line":2666,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2667,"column":0},"generated":{"line":2667,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2668,"column":0},"generated":{"line":2668,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2669,"column":0},"generated":{"line":2669,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2670,"column":0},"generated":{"line":2670,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2671,"column":0},"generated":{"line":2671,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2672,"column":0},"generated":{"line":2672,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2673,"column":0},"generated":{"line":2673,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2674,"column":0},"generated":{"line":2674,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2675,"column":0},"generated":{"line":2675,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2676,"column":0},"generated":{"line":2676,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2677,"column":0},"generated":{"line":2677,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2678,"column":0},"generated":{"line":2678,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2679,"column":0},"generated":{"line":2679,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2680,"column":0},"generated":{"line":2680,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2681,"column":0},"generated":{"line":2681,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2682,"column":0},"generated":{"line":2682,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2683,"column":0},"generated":{"line":2683,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2684,"column":0},"generated":{"line":2684,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2685,"column":0},"generated":{"line":2685,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2686,"column":0},"generated":{"line":2686,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2687,"column":0},"generated":{"line":2687,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2688,"column":0},"generated":{"line":2688,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2689,"column":0},"generated":{"line":2689,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2690,"column":0},"generated":{"line":2690,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2691,"column":0},"generated":{"line":2691,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2692,"column":0},"generated":{"line":2692,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2693,"column":0},"generated":{"line":2693,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2694,"column":0},"generated":{"line":2694,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2695,"column":0},"generated":{"line":2695,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2696,"column":0},"generated":{"line":2696,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2697,"column":0},"generated":{"line":2697,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2698,"column":0},"generated":{"line":2698,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2699,"column":0},"generated":{"line":2699,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2700,"column":0},"generated":{"line":2700,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2701,"column":0},"generated":{"line":2701,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2702,"column":0},"generated":{"line":2702,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2703,"column":0},"generated":{"line":2703,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2704,"column":0},"generated":{"line":2704,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2705,"column":0},"generated":{"line":2705,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2706,"column":0},"generated":{"line":2706,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2707,"column":0},"generated":{"line":2707,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2708,"column":0},"generated":{"line":2708,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2709,"column":0},"generated":{"line":2709,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2710,"column":0},"generated":{"line":2710,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2711,"column":0},"generated":{"line":2711,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2712,"column":0},"generated":{"line":2712,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2713,"column":0},"generated":{"line":2713,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2714,"column":0},"generated":{"line":2714,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2715,"column":0},"generated":{"line":2715,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2716,"column":0},"generated":{"line":2716,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2717,"column":0},"generated":{"line":2717,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2718,"column":0},"generated":{"line":2718,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2719,"column":0},"generated":{"line":2719,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2720,"column":0},"generated":{"line":2720,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2721,"column":0},"generated":{"line":2721,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2722,"column":0},"generated":{"line":2722,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2723,"column":0},"generated":{"line":2723,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2724,"column":0},"generated":{"line":2724,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2725,"column":0},"generated":{"line":2725,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2726,"column":0},"generated":{"line":2726,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2727,"column":0},"generated":{"line":2727,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2728,"column":0},"generated":{"line":2728,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2729,"column":0},"generated":{"line":2729,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2730,"column":0},"generated":{"line":2730,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2731,"column":0},"generated":{"line":2731,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2732,"column":0},"generated":{"line":2732,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2733,"column":0},"generated":{"line":2733,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2734,"column":0},"generated":{"line":2734,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2735,"column":0},"generated":{"line":2735,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2736,"column":0},"generated":{"line":2736,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2737,"column":0},"generated":{"line":2737,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2738,"column":0},"generated":{"line":2738,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2739,"column":0},"generated":{"line":2739,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2740,"column":0},"generated":{"line":2740,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2741,"column":0},"generated":{"line":2741,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2742,"column":0},"generated":{"line":2742,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2743,"column":0},"generated":{"line":2743,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2744,"column":0},"generated":{"line":2744,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2745,"column":0},"generated":{"line":2745,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2746,"column":0},"generated":{"line":2746,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2747,"column":0},"generated":{"line":2747,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2748,"column":0},"generated":{"line":2748,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2749,"column":0},"generated":{"line":2749,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2750,"column":0},"generated":{"line":2750,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2751,"column":0},"generated":{"line":2751,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2752,"column":0},"generated":{"line":2752,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2753,"column":0},"generated":{"line":2753,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2754,"column":0},"generated":{"line":2754,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2755,"column":0},"generated":{"line":2755,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2756,"column":0},"generated":{"line":2756,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2757,"column":0},"generated":{"line":2757,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2758,"column":0},"generated":{"line":2758,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2759,"column":0},"generated":{"line":2759,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2760,"column":0},"generated":{"line":2760,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2761,"column":0},"generated":{"line":2761,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2762,"column":0},"generated":{"line":2762,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2763,"column":0},"generated":{"line":2763,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2764,"column":0},"generated":{"line":2764,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2765,"column":0},"generated":{"line":2765,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2766,"column":0},"generated":{"line":2766,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2767,"column":0},"generated":{"line":2767,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2768,"column":0},"generated":{"line":2768,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2769,"column":0},"generated":{"line":2769,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2770,"column":0},"generated":{"line":2770,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2771,"column":0},"generated":{"line":2771,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2772,"column":0},"generated":{"line":2772,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2773,"column":0},"generated":{"line":2773,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2774,"column":0},"generated":{"line":2774,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2775,"column":0},"generated":{"line":2775,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2776,"column":0},"generated":{"line":2776,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2777,"column":0},"generated":{"line":2777,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2778,"column":0},"generated":{"line":2778,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2779,"column":0},"generated":{"line":2779,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2780,"column":0},"generated":{"line":2780,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2781,"column":0},"generated":{"line":2781,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2782,"column":0},"generated":{"line":2782,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2783,"column":0},"generated":{"line":2783,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2784,"column":0},"generated":{"line":2784,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2785,"column":0},"generated":{"line":2785,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2786,"column":0},"generated":{"line":2786,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2787,"column":0},"generated":{"line":2787,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2788,"column":0},"generated":{"line":2788,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2789,"column":0},"generated":{"line":2789,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2790,"column":0},"generated":{"line":2790,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2791,"column":0},"generated":{"line":2791,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2792,"column":0},"generated":{"line":2792,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2793,"column":0},"generated":{"line":2793,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2794,"column":0},"generated":{"line":2794,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2795,"column":0},"generated":{"line":2795,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2796,"column":0},"generated":{"line":2796,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2797,"column":0},"generated":{"line":2797,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2798,"column":0},"generated":{"line":2798,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2799,"column":0},"generated":{"line":2799,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2800,"column":0},"generated":{"line":2800,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2801,"column":0},"generated":{"line":2801,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2802,"column":0},"generated":{"line":2802,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2803,"column":0},"generated":{"line":2803,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2804,"column":0},"generated":{"line":2804,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2805,"column":0},"generated":{"line":2805,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2806,"column":0},"generated":{"line":2806,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2807,"column":0},"generated":{"line":2807,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2808,"column":0},"generated":{"line":2808,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2809,"column":0},"generated":{"line":2809,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2810,"column":0},"generated":{"line":2810,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2811,"column":0},"generated":{"line":2811,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2812,"column":0},"generated":{"line":2812,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2813,"column":0},"generated":{"line":2813,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2814,"column":0},"generated":{"line":2814,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2815,"column":0},"generated":{"line":2815,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2816,"column":0},"generated":{"line":2816,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2817,"column":0},"generated":{"line":2817,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2818,"column":0},"generated":{"line":2818,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2819,"column":0},"generated":{"line":2819,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2820,"column":0},"generated":{"line":2820,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2821,"column":0},"generated":{"line":2821,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2822,"column":0},"generated":{"line":2822,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2823,"column":0},"generated":{"line":2823,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2824,"column":0},"generated":{"line":2824,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2825,"column":0},"generated":{"line":2825,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2826,"column":0},"generated":{"line":2826,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2827,"column":0},"generated":{"line":2827,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2828,"column":0},"generated":{"line":2828,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2829,"column":0},"generated":{"line":2829,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2830,"column":0},"generated":{"line":2830,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2831,"column":0},"generated":{"line":2831,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2832,"column":0},"generated":{"line":2832,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2833,"column":0},"generated":{"line":2833,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2834,"column":0},"generated":{"line":2834,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2835,"column":0},"generated":{"line":2835,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2836,"column":0},"generated":{"line":2836,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2837,"column":0},"generated":{"line":2837,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2838,"column":0},"generated":{"line":2838,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2839,"column":0},"generated":{"line":2839,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2840,"column":0},"generated":{"line":2840,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2841,"column":0},"generated":{"line":2841,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2842,"column":0},"generated":{"line":2842,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2843,"column":0},"generated":{"line":2843,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2844,"column":0},"generated":{"line":2844,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2845,"column":0},"generated":{"line":2845,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2846,"column":0},"generated":{"line":2846,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2847,"column":0},"generated":{"line":2847,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2848,"column":0},"generated":{"line":2848,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2849,"column":0},"generated":{"line":2849,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2850,"column":0},"generated":{"line":2850,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2851,"column":0},"generated":{"line":2851,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2852,"column":0},"generated":{"line":2852,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2853,"column":0},"generated":{"line":2853,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2854,"column":0},"generated":{"line":2854,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2855,"column":0},"generated":{"line":2855,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2856,"column":0},"generated":{"line":2856,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2857,"column":0},"generated":{"line":2857,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2858,"column":0},"generated":{"line":2858,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2859,"column":0},"generated":{"line":2859,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2860,"column":0},"generated":{"line":2860,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2861,"column":0},"generated":{"line":2861,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2862,"column":0},"generated":{"line":2862,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2863,"column":0},"generated":{"line":2863,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2864,"column":0},"generated":{"line":2864,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2865,"column":0},"generated":{"line":2865,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2866,"column":0},"generated":{"line":2866,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2867,"column":0},"generated":{"line":2867,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2868,"column":0},"generated":{"line":2868,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2869,"column":0},"generated":{"line":2869,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2870,"column":0},"generated":{"line":2870,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2871,"column":0},"generated":{"line":2871,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2872,"column":0},"generated":{"line":2872,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2873,"column":0},"generated":{"line":2873,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2874,"column":0},"generated":{"line":2874,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2875,"column":0},"generated":{"line":2875,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2876,"column":0},"generated":{"line":2876,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2877,"column":0},"generated":{"line":2877,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2878,"column":0},"generated":{"line":2878,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2879,"column":0},"generated":{"line":2879,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2880,"column":0},"generated":{"line":2880,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2881,"column":0},"generated":{"line":2881,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2882,"column":0},"generated":{"line":2882,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2883,"column":0},"generated":{"line":2883,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2884,"column":0},"generated":{"line":2884,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2885,"column":0},"generated":{"line":2885,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2886,"column":0},"generated":{"line":2886,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2887,"column":0},"generated":{"line":2887,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2888,"column":0},"generated":{"line":2888,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2889,"column":0},"generated":{"line":2889,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2890,"column":0},"generated":{"line":2890,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2891,"column":0},"generated":{"line":2891,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2892,"column":0},"generated":{"line":2892,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2893,"column":0},"generated":{"line":2893,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2894,"column":0},"generated":{"line":2894,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2895,"column":0},"generated":{"line":2895,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2896,"column":0},"generated":{"line":2896,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2897,"column":0},"generated":{"line":2897,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2898,"column":0},"generated":{"line":2898,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2899,"column":0},"generated":{"line":2899,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2900,"column":0},"generated":{"line":2900,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2901,"column":0},"generated":{"line":2901,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2902,"column":0},"generated":{"line":2902,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2903,"column":0},"generated":{"line":2903,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2904,"column":0},"generated":{"line":2904,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2905,"column":0},"generated":{"line":2905,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2906,"column":0},"generated":{"line":2906,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2907,"column":0},"generated":{"line":2907,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2908,"column":0},"generated":{"line":2908,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2909,"column":0},"generated":{"line":2909,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2910,"column":0},"generated":{"line":2910,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2911,"column":0},"generated":{"line":2911,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2912,"column":0},"generated":{"line":2912,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2913,"column":0},"generated":{"line":2913,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2914,"column":0},"generated":{"line":2914,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2915,"column":0},"generated":{"line":2915,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2916,"column":0},"generated":{"line":2916,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2917,"column":0},"generated":{"line":2917,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2918,"column":0},"generated":{"line":2918,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2919,"column":0},"generated":{"line":2919,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2920,"column":0},"generated":{"line":2920,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2921,"column":0},"generated":{"line":2921,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2922,"column":0},"generated":{"line":2922,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2923,"column":0},"generated":{"line":2923,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2924,"column":0},"generated":{"line":2924,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2925,"column":0},"generated":{"line":2925,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2926,"column":0},"generated":{"line":2926,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2927,"column":0},"generated":{"line":2927,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2928,"column":0},"generated":{"line":2928,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2929,"column":0},"generated":{"line":2929,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2930,"column":0},"generated":{"line":2930,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2931,"column":0},"generated":{"line":2931,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2932,"column":0},"generated":{"line":2932,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2933,"column":0},"generated":{"line":2933,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2934,"column":0},"generated":{"line":2934,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2935,"column":0},"generated":{"line":2935,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2936,"column":0},"generated":{"line":2936,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2937,"column":0},"generated":{"line":2937,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2938,"column":0},"generated":{"line":2938,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2939,"column":0},"generated":{"line":2939,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2940,"column":0},"generated":{"line":2940,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2941,"column":0},"generated":{"line":2941,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2942,"column":0},"generated":{"line":2942,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2943,"column":0},"generated":{"line":2943,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2944,"column":0},"generated":{"line":2944,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2945,"column":0},"generated":{"line":2945,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2946,"column":0},"generated":{"line":2946,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2947,"column":0},"generated":{"line":2947,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2948,"column":0},"generated":{"line":2948,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2949,"column":0},"generated":{"line":2949,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2950,"column":0},"generated":{"line":2950,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2951,"column":0},"generated":{"line":2951,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2952,"column":0},"generated":{"line":2952,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2953,"column":0},"generated":{"line":2953,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2954,"column":0},"generated":{"line":2954,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2955,"column":0},"generated":{"line":2955,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2956,"column":0},"generated":{"line":2956,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2957,"column":0},"generated":{"line":2957,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2958,"column":0},"generated":{"line":2958,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2959,"column":0},"generated":{"line":2959,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2960,"column":0},"generated":{"line":2960,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2961,"column":0},"generated":{"line":2961,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2962,"column":0},"generated":{"line":2962,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2963,"column":0},"generated":{"line":2963,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2964,"column":0},"generated":{"line":2964,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2965,"column":0},"generated":{"line":2965,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2966,"column":0},"generated":{"line":2966,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2967,"column":0},"generated":{"line":2967,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2968,"column":0},"generated":{"line":2968,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2969,"column":0},"generated":{"line":2969,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2970,"column":0},"generated":{"line":2970,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2971,"column":0},"generated":{"line":2971,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2972,"column":0},"generated":{"line":2972,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2973,"column":0},"generated":{"line":2973,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2974,"column":0},"generated":{"line":2974,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2975,"column":0},"generated":{"line":2975,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2976,"column":0},"generated":{"line":2976,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2977,"column":0},"generated":{"line":2977,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2978,"column":0},"generated":{"line":2978,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2979,"column":0},"generated":{"line":2979,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2980,"column":0},"generated":{"line":2980,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2981,"column":0},"generated":{"line":2981,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2982,"column":0},"generated":{"line":2982,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2983,"column":0},"generated":{"line":2983,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2984,"column":0},"generated":{"line":2984,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2985,"column":0},"generated":{"line":2985,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2986,"column":0},"generated":{"line":2986,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2987,"column":0},"generated":{"line":2987,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2988,"column":0},"generated":{"line":2988,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2989,"column":0},"generated":{"line":2989,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2990,"column":0},"generated":{"line":2990,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2991,"column":0},"generated":{"line":2991,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2992,"column":0},"generated":{"line":2992,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2993,"column":0},"generated":{"line":2993,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2994,"column":0},"generated":{"line":2994,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2995,"column":0},"generated":{"line":2995,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2996,"column":0},"generated":{"line":2996,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2997,"column":0},"generated":{"line":2997,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2998,"column":0},"generated":{"line":2998,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":2999,"column":0},"generated":{"line":2999,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3000,"column":0},"generated":{"line":3000,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3001,"column":0},"generated":{"line":3001,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3002,"column":0},"generated":{"line":3002,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3003,"column":0},"generated":{"line":3003,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3004,"column":0},"generated":{"line":3004,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3005,"column":0},"generated":{"line":3005,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3006,"column":0},"generated":{"line":3006,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3007,"column":0},"generated":{"line":3007,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3008,"column":0},"generated":{"line":3008,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3009,"column":0},"generated":{"line":3009,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3010,"column":0},"generated":{"line":3010,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3011,"column":0},"generated":{"line":3011,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3012,"column":0},"generated":{"line":3012,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3013,"column":0},"generated":{"line":3013,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3014,"column":0},"generated":{"line":3014,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3015,"column":0},"generated":{"line":3015,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3016,"column":0},"generated":{"line":3016,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3017,"column":0},"generated":{"line":3017,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3018,"column":0},"generated":{"line":3018,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3019,"column":0},"generated":{"line":3019,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3020,"column":0},"generated":{"line":3020,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3021,"column":0},"generated":{"line":3021,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3022,"column":0},"generated":{"line":3022,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3023,"column":0},"generated":{"line":3023,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3024,"column":0},"generated":{"line":3024,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3025,"column":0},"generated":{"line":3025,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3026,"column":0},"generated":{"line":3026,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3027,"column":0},"generated":{"line":3027,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3028,"column":0},"generated":{"line":3028,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3029,"column":0},"generated":{"line":3029,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3030,"column":0},"generated":{"line":3030,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3031,"column":0},"generated":{"line":3031,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3032,"column":0},"generated":{"line":3032,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3033,"column":0},"generated":{"line":3033,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3034,"column":0},"generated":{"line":3034,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3035,"column":0},"generated":{"line":3035,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3036,"column":0},"generated":{"line":3036,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3037,"column":0},"generated":{"line":3037,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3038,"column":0},"generated":{"line":3038,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3039,"column":0},"generated":{"line":3039,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3040,"column":0},"generated":{"line":3040,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3041,"column":0},"generated":{"line":3041,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3042,"column":0},"generated":{"line":3042,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3043,"column":0},"generated":{"line":3043,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3044,"column":0},"generated":{"line":3044,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3045,"column":0},"generated":{"line":3045,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3046,"column":0},"generated":{"line":3046,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3047,"column":0},"generated":{"line":3047,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3048,"column":0},"generated":{"line":3048,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3049,"column":0},"generated":{"line":3049,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3050,"column":0},"generated":{"line":3050,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3051,"column":0},"generated":{"line":3051,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3052,"column":0},"generated":{"line":3052,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3053,"column":0},"generated":{"line":3053,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3054,"column":0},"generated":{"line":3054,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3055,"column":0},"generated":{"line":3055,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3056,"column":0},"generated":{"line":3056,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3057,"column":0},"generated":{"line":3057,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3058,"column":0},"generated":{"line":3058,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3059,"column":0},"generated":{"line":3059,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3060,"column":0},"generated":{"line":3060,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3061,"column":0},"generated":{"line":3061,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3062,"column":0},"generated":{"line":3062,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3063,"column":0},"generated":{"line":3063,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3064,"column":0},"generated":{"line":3064,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3065,"column":0},"generated":{"line":3065,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3066,"column":0},"generated":{"line":3066,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3067,"column":0},"generated":{"line":3067,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3068,"column":0},"generated":{"line":3068,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3069,"column":0},"generated":{"line":3069,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3070,"column":0},"generated":{"line":3070,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3071,"column":0},"generated":{"line":3071,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3072,"column":0},"generated":{"line":3072,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3073,"column":0},"generated":{"line":3073,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3074,"column":0},"generated":{"line":3074,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3075,"column":0},"generated":{"line":3075,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3076,"column":0},"generated":{"line":3076,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3077,"column":0},"generated":{"line":3077,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3078,"column":0},"generated":{"line":3078,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3079,"column":0},"generated":{"line":3079,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3080,"column":0},"generated":{"line":3080,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3081,"column":0},"generated":{"line":3081,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3082,"column":0},"generated":{"line":3082,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3083,"column":0},"generated":{"line":3083,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3084,"column":0},"generated":{"line":3084,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3085,"column":0},"generated":{"line":3085,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3086,"column":0},"generated":{"line":3086,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3087,"column":0},"generated":{"line":3087,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3088,"column":0},"generated":{"line":3088,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3089,"column":0},"generated":{"line":3089,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3090,"column":0},"generated":{"line":3090,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3091,"column":0},"generated":{"line":3091,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3092,"column":0},"generated":{"line":3092,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3093,"column":0},"generated":{"line":3093,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3094,"column":0},"generated":{"line":3094,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3095,"column":0},"generated":{"line":3095,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3096,"column":0},"generated":{"line":3096,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3097,"column":0},"generated":{"line":3097,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3098,"column":0},"generated":{"line":3098,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3099,"column":0},"generated":{"line":3099,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3100,"column":0},"generated":{"line":3100,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3101,"column":0},"generated":{"line":3101,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3102,"column":0},"generated":{"line":3102,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3103,"column":0},"generated":{"line":3103,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3104,"column":0},"generated":{"line":3104,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3105,"column":0},"generated":{"line":3105,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3106,"column":0},"generated":{"line":3106,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3107,"column":0},"generated":{"line":3107,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3108,"column":0},"generated":{"line":3108,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3109,"column":0},"generated":{"line":3109,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3110,"column":0},"generated":{"line":3110,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3111,"column":0},"generated":{"line":3111,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3112,"column":0},"generated":{"line":3112,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3113,"column":0},"generated":{"line":3113,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3114,"column":0},"generated":{"line":3114,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3115,"column":0},"generated":{"line":3115,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3116,"column":0},"generated":{"line":3116,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3117,"column":0},"generated":{"line":3117,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3118,"column":0},"generated":{"line":3118,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3119,"column":0},"generated":{"line":3119,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3120,"column":0},"generated":{"line":3120,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3121,"column":0},"generated":{"line":3121,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3122,"column":0},"generated":{"line":3122,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3123,"column":0},"generated":{"line":3123,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3124,"column":0},"generated":{"line":3124,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3125,"column":0},"generated":{"line":3125,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3126,"column":0},"generated":{"line":3126,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3127,"column":0},"generated":{"line":3127,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3128,"column":0},"generated":{"line":3128,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3129,"column":0},"generated":{"line":3129,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3130,"column":0},"generated":{"line":3130,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3131,"column":0},"generated":{"line":3131,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3132,"column":0},"generated":{"line":3132,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3133,"column":0},"generated":{"line":3133,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3134,"column":0},"generated":{"line":3134,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3135,"column":0},"generated":{"line":3135,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3136,"column":0},"generated":{"line":3136,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3137,"column":0},"generated":{"line":3137,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3138,"column":0},"generated":{"line":3138,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3139,"column":0},"generated":{"line":3139,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3140,"column":0},"generated":{"line":3140,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3141,"column":0},"generated":{"line":3141,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3142,"column":0},"generated":{"line":3142,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3143,"column":0},"generated":{"line":3143,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3144,"column":0},"generated":{"line":3144,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3145,"column":0},"generated":{"line":3145,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3146,"column":0},"generated":{"line":3146,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3147,"column":0},"generated":{"line":3147,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3148,"column":0},"generated":{"line":3148,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3149,"column":0},"generated":{"line":3149,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3150,"column":0},"generated":{"line":3150,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3151,"column":0},"generated":{"line":3151,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3152,"column":0},"generated":{"line":3152,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3153,"column":0},"generated":{"line":3153,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3154,"column":0},"generated":{"line":3154,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3155,"column":0},"generated":{"line":3155,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3156,"column":0},"generated":{"line":3156,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3157,"column":0},"generated":{"line":3157,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3158,"column":0},"generated":{"line":3158,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3159,"column":0},"generated":{"line":3159,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3160,"column":0},"generated":{"line":3160,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3161,"column":0},"generated":{"line":3161,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3162,"column":0},"generated":{"line":3162,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3163,"column":0},"generated":{"line":3163,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3164,"column":0},"generated":{"line":3164,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3165,"column":0},"generated":{"line":3165,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3166,"column":0},"generated":{"line":3166,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3167,"column":0},"generated":{"line":3167,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3168,"column":0},"generated":{"line":3168,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3169,"column":0},"generated":{"line":3169,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3170,"column":0},"generated":{"line":3170,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3171,"column":0},"generated":{"line":3171,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3172,"column":0},"generated":{"line":3172,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3173,"column":0},"generated":{"line":3173,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3174,"column":0},"generated":{"line":3174,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3175,"column":0},"generated":{"line":3175,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3176,"column":0},"generated":{"line":3176,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3177,"column":0},"generated":{"line":3177,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3178,"column":0},"generated":{"line":3178,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3179,"column":0},"generated":{"line":3179,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3180,"column":0},"generated":{"line":3180,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3181,"column":0},"generated":{"line":3181,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3182,"column":0},"generated":{"line":3182,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3183,"column":0},"generated":{"line":3183,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3184,"column":0},"generated":{"line":3184,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3185,"column":0},"generated":{"line":3185,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3186,"column":0},"generated":{"line":3186,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3187,"column":0},"generated":{"line":3187,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3188,"column":0},"generated":{"line":3188,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3189,"column":0},"generated":{"line":3189,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3190,"column":0},"generated":{"line":3190,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3191,"column":0},"generated":{"line":3191,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3192,"column":0},"generated":{"line":3192,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3193,"column":0},"generated":{"line":3193,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3194,"column":0},"generated":{"line":3194,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3195,"column":0},"generated":{"line":3195,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3196,"column":0},"generated":{"line":3196,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3197,"column":0},"generated":{"line":3197,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3198,"column":0},"generated":{"line":3198,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3199,"column":0},"generated":{"line":3199,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3200,"column":0},"generated":{"line":3200,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3201,"column":0},"generated":{"line":3201,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3202,"column":0},"generated":{"line":3202,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3203,"column":0},"generated":{"line":3203,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3204,"column":0},"generated":{"line":3204,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3205,"column":0},"generated":{"line":3205,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3206,"column":0},"generated":{"line":3206,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3207,"column":0},"generated":{"line":3207,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3208,"column":0},"generated":{"line":3208,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3209,"column":0},"generated":{"line":3209,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3210,"column":0},"generated":{"line":3210,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3211,"column":0},"generated":{"line":3211,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3212,"column":0},"generated":{"line":3212,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3213,"column":0},"generated":{"line":3213,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3214,"column":0},"generated":{"line":3214,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3215,"column":0},"generated":{"line":3215,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3216,"column":0},"generated":{"line":3216,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3217,"column":0},"generated":{"line":3217,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3218,"column":0},"generated":{"line":3218,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3219,"column":0},"generated":{"line":3219,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3220,"column":0},"generated":{"line":3220,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3221,"column":0},"generated":{"line":3221,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3222,"column":0},"generated":{"line":3222,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3223,"column":0},"generated":{"line":3223,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3224,"column":0},"generated":{"line":3224,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3225,"column":0},"generated":{"line":3225,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3226,"column":0},"generated":{"line":3226,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3227,"column":0},"generated":{"line":3227,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3228,"column":0},"generated":{"line":3228,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3229,"column":0},"generated":{"line":3229,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3230,"column":0},"generated":{"line":3230,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3231,"column":0},"generated":{"line":3231,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3232,"column":0},"generated":{"line":3232,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3233,"column":0},"generated":{"line":3233,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3234,"column":0},"generated":{"line":3234,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3235,"column":0},"generated":{"line":3235,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3236,"column":0},"generated":{"line":3236,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3237,"column":0},"generated":{"line":3237,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3238,"column":0},"generated":{"line":3238,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3239,"column":0},"generated":{"line":3239,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3240,"column":0},"generated":{"line":3240,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3241,"column":0},"generated":{"line":3241,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3242,"column":0},"generated":{"line":3242,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3243,"column":0},"generated":{"line":3243,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3244,"column":0},"generated":{"line":3244,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3245,"column":0},"generated":{"line":3245,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3246,"column":0},"generated":{"line":3246,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3247,"column":0},"generated":{"line":3247,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3248,"column":0},"generated":{"line":3248,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3249,"column":0},"generated":{"line":3249,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3250,"column":0},"generated":{"line":3250,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3251,"column":0},"generated":{"line":3251,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3252,"column":0},"generated":{"line":3252,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3253,"column":0},"generated":{"line":3253,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3254,"column":0},"generated":{"line":3254,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3255,"column":0},"generated":{"line":3255,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3256,"column":0},"generated":{"line":3256,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3257,"column":0},"generated":{"line":3257,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3258,"column":0},"generated":{"line":3258,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3259,"column":0},"generated":{"line":3259,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3260,"column":0},"generated":{"line":3260,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3261,"column":0},"generated":{"line":3261,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3262,"column":0},"generated":{"line":3262,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3263,"column":0},"generated":{"line":3263,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3264,"column":0},"generated":{"line":3264,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3265,"column":0},"generated":{"line":3265,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3266,"column":0},"generated":{"line":3266,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3267,"column":0},"generated":{"line":3267,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3268,"column":0},"generated":{"line":3268,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3269,"column":0},"generated":{"line":3269,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3270,"column":0},"generated":{"line":3270,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3271,"column":0},"generated":{"line":3271,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3272,"column":0},"generated":{"line":3272,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3273,"column":0},"generated":{"line":3273,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3274,"column":0},"generated":{"line":3274,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3275,"column":0},"generated":{"line":3275,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3276,"column":0},"generated":{"line":3276,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3277,"column":0},"generated":{"line":3277,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3278,"column":0},"generated":{"line":3278,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3279,"column":0},"generated":{"line":3279,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3280,"column":0},"generated":{"line":3280,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3281,"column":0},"generated":{"line":3281,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3282,"column":0},"generated":{"line":3282,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3283,"column":0},"generated":{"line":3283,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3284,"column":0},"generated":{"line":3284,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3285,"column":0},"generated":{"line":3285,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3286,"column":0},"generated":{"line":3286,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3287,"column":0},"generated":{"line":3287,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3288,"column":0},"generated":{"line":3288,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3289,"column":0},"generated":{"line":3289,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3290,"column":0},"generated":{"line":3290,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3291,"column":0},"generated":{"line":3291,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3292,"column":0},"generated":{"line":3292,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3293,"column":0},"generated":{"line":3293,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3294,"column":0},"generated":{"line":3294,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3295,"column":0},"generated":{"line":3295,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3296,"column":0},"generated":{"line":3296,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3297,"column":0},"generated":{"line":3297,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3298,"column":0},"generated":{"line":3298,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3299,"column":0},"generated":{"line":3299,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3300,"column":0},"generated":{"line":3300,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3301,"column":0},"generated":{"line":3301,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3302,"column":0},"generated":{"line":3302,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3303,"column":0},"generated":{"line":3303,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3304,"column":0},"generated":{"line":3304,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3305,"column":0},"generated":{"line":3305,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3306,"column":0},"generated":{"line":3306,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3307,"column":0},"generated":{"line":3307,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3308,"column":0},"generated":{"line":3308,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3309,"column":0},"generated":{"line":3309,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3310,"column":0},"generated":{"line":3310,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3311,"column":0},"generated":{"line":3311,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3312,"column":0},"generated":{"line":3312,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3313,"column":0},"generated":{"line":3313,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3314,"column":0},"generated":{"line":3314,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3315,"column":0},"generated":{"line":3315,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3316,"column":0},"generated":{"line":3316,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3317,"column":0},"generated":{"line":3317,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3318,"column":0},"generated":{"line":3318,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3319,"column":0},"generated":{"line":3319,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3320,"column":0},"generated":{"line":3320,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3321,"column":0},"generated":{"line":3321,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3322,"column":0},"generated":{"line":3322,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3323,"column":0},"generated":{"line":3323,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3324,"column":0},"generated":{"line":3324,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3325,"column":0},"generated":{"line":3325,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3326,"column":0},"generated":{"line":3326,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3327,"column":0},"generated":{"line":3327,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3328,"column":0},"generated":{"line":3328,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3329,"column":0},"generated":{"line":3329,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3330,"column":0},"generated":{"line":3330,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3331,"column":0},"generated":{"line":3331,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3332,"column":0},"generated":{"line":3332,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3333,"column":0},"generated":{"line":3333,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3334,"column":0},"generated":{"line":3334,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3335,"column":0},"generated":{"line":3335,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3336,"column":0},"generated":{"line":3336,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3337,"column":0},"generated":{"line":3337,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3338,"column":0},"generated":{"line":3338,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3339,"column":0},"generated":{"line":3339,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3340,"column":0},"generated":{"line":3340,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3341,"column":0},"generated":{"line":3341,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3342,"column":0},"generated":{"line":3342,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3343,"column":0},"generated":{"line":3343,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3344,"column":0},"generated":{"line":3344,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3345,"column":0},"generated":{"line":3345,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3346,"column":0},"generated":{"line":3346,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3347,"column":0},"generated":{"line":3347,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3348,"column":0},"generated":{"line":3348,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3349,"column":0},"generated":{"line":3349,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3350,"column":0},"generated":{"line":3350,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3351,"column":0},"generated":{"line":3351,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3352,"column":0},"generated":{"line":3352,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3353,"column":0},"generated":{"line":3353,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3354,"column":0},"generated":{"line":3354,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3355,"column":0},"generated":{"line":3355,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3356,"column":0},"generated":{"line":3356,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3357,"column":0},"generated":{"line":3357,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3358,"column":0},"generated":{"line":3358,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3359,"column":0},"generated":{"line":3359,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3360,"column":0},"generated":{"line":3360,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3361,"column":0},"generated":{"line":3361,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3362,"column":0},"generated":{"line":3362,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3363,"column":0},"generated":{"line":3363,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3364,"column":0},"generated":{"line":3364,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3365,"column":0},"generated":{"line":3365,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3366,"column":0},"generated":{"line":3366,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3367,"column":0},"generated":{"line":3367,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3368,"column":0},"generated":{"line":3368,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3369,"column":0},"generated":{"line":3369,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3370,"column":0},"generated":{"line":3370,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3371,"column":0},"generated":{"line":3371,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3372,"column":0},"generated":{"line":3372,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3373,"column":0},"generated":{"line":3373,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3374,"column":0},"generated":{"line":3374,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3375,"column":0},"generated":{"line":3375,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3376,"column":0},"generated":{"line":3376,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3377,"column":0},"generated":{"line":3377,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3378,"column":0},"generated":{"line":3378,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3379,"column":0},"generated":{"line":3379,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3380,"column":0},"generated":{"line":3380,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3381,"column":0},"generated":{"line":3381,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3382,"column":0},"generated":{"line":3382,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3383,"column":0},"generated":{"line":3383,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3384,"column":0},"generated":{"line":3384,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3385,"column":0},"generated":{"line":3385,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3386,"column":0},"generated":{"line":3386,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3387,"column":0},"generated":{"line":3387,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3388,"column":0},"generated":{"line":3388,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3389,"column":0},"generated":{"line":3389,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3390,"column":0},"generated":{"line":3390,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3391,"column":0},"generated":{"line":3391,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3392,"column":0},"generated":{"line":3392,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3393,"column":0},"generated":{"line":3393,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3394,"column":0},"generated":{"line":3394,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3395,"column":0},"generated":{"line":3395,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3396,"column":0},"generated":{"line":3396,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3397,"column":0},"generated":{"line":3397,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3398,"column":0},"generated":{"line":3398,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3399,"column":0},"generated":{"line":3399,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3400,"column":0},"generated":{"line":3400,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3401,"column":0},"generated":{"line":3401,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3402,"column":0},"generated":{"line":3402,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3403,"column":0},"generated":{"line":3403,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3404,"column":0},"generated":{"line":3404,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3405,"column":0},"generated":{"line":3405,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3406,"column":0},"generated":{"line":3406,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3407,"column":0},"generated":{"line":3407,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3408,"column":0},"generated":{"line":3408,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3409,"column":0},"generated":{"line":3409,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3410,"column":0},"generated":{"line":3410,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3411,"column":0},"generated":{"line":3411,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3412,"column":0},"generated":{"line":3412,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3413,"column":0},"generated":{"line":3413,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3414,"column":0},"generated":{"line":3414,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3415,"column":0},"generated":{"line":3415,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3416,"column":0},"generated":{"line":3416,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3417,"column":0},"generated":{"line":3417,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3418,"column":0},"generated":{"line":3418,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3419,"column":0},"generated":{"line":3419,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3420,"column":0},"generated":{"line":3420,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3421,"column":0},"generated":{"line":3421,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3422,"column":0},"generated":{"line":3422,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3423,"column":0},"generated":{"line":3423,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3424,"column":0},"generated":{"line":3424,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3425,"column":0},"generated":{"line":3425,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3426,"column":0},"generated":{"line":3426,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3427,"column":0},"generated":{"line":3427,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3428,"column":0},"generated":{"line":3428,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3429,"column":0},"generated":{"line":3429,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3430,"column":0},"generated":{"line":3430,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3431,"column":0},"generated":{"line":3431,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3432,"column":0},"generated":{"line":3432,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3433,"column":0},"generated":{"line":3433,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3434,"column":0},"generated":{"line":3434,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3435,"column":0},"generated":{"line":3435,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3436,"column":0},"generated":{"line":3436,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3437,"column":0},"generated":{"line":3437,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3438,"column":0},"generated":{"line":3438,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3439,"column":0},"generated":{"line":3439,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3440,"column":0},"generated":{"line":3440,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3441,"column":0},"generated":{"line":3441,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3442,"column":0},"generated":{"line":3442,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3443,"column":0},"generated":{"line":3443,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3444,"column":0},"generated":{"line":3444,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3445,"column":0},"generated":{"line":3445,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3446,"column":0},"generated":{"line":3446,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3447,"column":0},"generated":{"line":3447,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3448,"column":0},"generated":{"line":3448,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3449,"column":0},"generated":{"line":3449,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3450,"column":0},"generated":{"line":3450,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3451,"column":0},"generated":{"line":3451,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3452,"column":0},"generated":{"line":3452,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3453,"column":0},"generated":{"line":3453,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3454,"column":0},"generated":{"line":3454,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3455,"column":0},"generated":{"line":3455,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3456,"column":0},"generated":{"line":3456,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3457,"column":0},"generated":{"line":3457,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3458,"column":0},"generated":{"line":3458,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3459,"column":0},"generated":{"line":3459,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3460,"column":0},"generated":{"line":3460,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3461,"column":0},"generated":{"line":3461,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3462,"column":0},"generated":{"line":3462,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3463,"column":0},"generated":{"line":3463,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3464,"column":0},"generated":{"line":3464,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3465,"column":0},"generated":{"line":3465,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3466,"column":0},"generated":{"line":3466,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3467,"column":0},"generated":{"line":3467,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3468,"column":0},"generated":{"line":3468,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3469,"column":0},"generated":{"line":3469,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3470,"column":0},"generated":{"line":3470,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3471,"column":0},"generated":{"line":3471,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3472,"column":0},"generated":{"line":3472,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3473,"column":0},"generated":{"line":3473,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3474,"column":0},"generated":{"line":3474,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3475,"column":0},"generated":{"line":3475,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3476,"column":0},"generated":{"line":3476,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3477,"column":0},"generated":{"line":3477,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3478,"column":0},"generated":{"line":3478,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3479,"column":0},"generated":{"line":3479,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3480,"column":0},"generated":{"line":3480,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3481,"column":0},"generated":{"line":3481,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3482,"column":0},"generated":{"line":3482,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3483,"column":0},"generated":{"line":3483,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3484,"column":0},"generated":{"line":3484,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3485,"column":0},"generated":{"line":3485,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3486,"column":0},"generated":{"line":3486,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3487,"column":0},"generated":{"line":3487,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3488,"column":0},"generated":{"line":3488,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3489,"column":0},"generated":{"line":3489,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3490,"column":0},"generated":{"line":3490,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3491,"column":0},"generated":{"line":3491,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3492,"column":0},"generated":{"line":3492,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3493,"column":0},"generated":{"line":3493,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3494,"column":0},"generated":{"line":3494,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3495,"column":0},"generated":{"line":3495,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3496,"column":0},"generated":{"line":3496,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3497,"column":0},"generated":{"line":3497,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3498,"column":0},"generated":{"line":3498,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3499,"column":0},"generated":{"line":3499,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3500,"column":0},"generated":{"line":3500,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3501,"column":0},"generated":{"line":3501,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3502,"column":0},"generated":{"line":3502,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3503,"column":0},"generated":{"line":3503,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3504,"column":0},"generated":{"line":3504,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3505,"column":0},"generated":{"line":3505,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3506,"column":0},"generated":{"line":3506,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3507,"column":0},"generated":{"line":3507,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3508,"column":0},"generated":{"line":3508,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3509,"column":0},"generated":{"line":3509,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3510,"column":0},"generated":{"line":3510,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3511,"column":0},"generated":{"line":3511,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3512,"column":0},"generated":{"line":3512,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3513,"column":0},"generated":{"line":3513,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3514,"column":0},"generated":{"line":3514,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3515,"column":0},"generated":{"line":3515,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3516,"column":0},"generated":{"line":3516,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3517,"column":0},"generated":{"line":3517,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3518,"column":0},"generated":{"line":3518,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3519,"column":0},"generated":{"line":3519,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3520,"column":0},"generated":{"line":3520,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3521,"column":0},"generated":{"line":3521,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3522,"column":0},"generated":{"line":3522,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3523,"column":0},"generated":{"line":3523,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3524,"column":0},"generated":{"line":3524,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3525,"column":0},"generated":{"line":3525,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3526,"column":0},"generated":{"line":3526,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3527,"column":0},"generated":{"line":3527,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3528,"column":0},"generated":{"line":3528,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3529,"column":0},"generated":{"line":3529,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3530,"column":0},"generated":{"line":3530,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3531,"column":0},"generated":{"line":3531,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3532,"column":0},"generated":{"line":3532,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3533,"column":0},"generated":{"line":3533,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3534,"column":0},"generated":{"line":3534,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3535,"column":0},"generated":{"line":3535,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3536,"column":0},"generated":{"line":3536,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3537,"column":0},"generated":{"line":3537,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3538,"column":0},"generated":{"line":3538,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3539,"column":0},"generated":{"line":3539,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3540,"column":0},"generated":{"line":3540,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3541,"column":0},"generated":{"line":3541,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3542,"column":0},"generated":{"line":3542,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3543,"column":0},"generated":{"line":3543,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3544,"column":0},"generated":{"line":3544,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3545,"column":0},"generated":{"line":3545,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3546,"column":0},"generated":{"line":3546,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3547,"column":0},"generated":{"line":3547,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3548,"column":0},"generated":{"line":3548,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3549,"column":0},"generated":{"line":3549,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3550,"column":0},"generated":{"line":3550,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3551,"column":0},"generated":{"line":3551,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3552,"column":0},"generated":{"line":3552,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3553,"column":0},"generated":{"line":3553,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3554,"column":0},"generated":{"line":3554,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3555,"column":0},"generated":{"line":3555,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3556,"column":0},"generated":{"line":3556,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3557,"column":0},"generated":{"line":3557,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3558,"column":0},"generated":{"line":3558,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3559,"column":0},"generated":{"line":3559,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3560,"column":0},"generated":{"line":3560,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3561,"column":0},"generated":{"line":3561,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3562,"column":0},"generated":{"line":3562,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3563,"column":0},"generated":{"line":3563,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3564,"column":0},"generated":{"line":3564,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3565,"column":0},"generated":{"line":3565,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3566,"column":0},"generated":{"line":3566,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3567,"column":0},"generated":{"line":3567,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3568,"column":0},"generated":{"line":3568,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3569,"column":0},"generated":{"line":3569,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3570,"column":0},"generated":{"line":3570,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3571,"column":0},"generated":{"line":3571,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3572,"column":0},"generated":{"line":3572,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3573,"column":0},"generated":{"line":3573,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3574,"column":0},"generated":{"line":3574,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3575,"column":0},"generated":{"line":3575,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3576,"column":0},"generated":{"line":3576,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3577,"column":0},"generated":{"line":3577,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3578,"column":0},"generated":{"line":3578,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3579,"column":0},"generated":{"line":3579,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3580,"column":0},"generated":{"line":3580,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3581,"column":0},"generated":{"line":3581,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3582,"column":0},"generated":{"line":3582,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3583,"column":0},"generated":{"line":3583,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3584,"column":0},"generated":{"line":3584,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3585,"column":0},"generated":{"line":3585,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3586,"column":0},"generated":{"line":3586,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3587,"column":0},"generated":{"line":3587,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3588,"column":0},"generated":{"line":3588,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3589,"column":0},"generated":{"line":3589,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3590,"column":0},"generated":{"line":3590,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3591,"column":0},"generated":{"line":3591,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3592,"column":0},"generated":{"line":3592,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3593,"column":0},"generated":{"line":3593,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3594,"column":0},"generated":{"line":3594,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3595,"column":0},"generated":{"line":3595,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3596,"column":0},"generated":{"line":3596,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3597,"column":0},"generated":{"line":3597,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3598,"column":0},"generated":{"line":3598,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3599,"column":0},"generated":{"line":3599,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3600,"column":0},"generated":{"line":3600,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3601,"column":0},"generated":{"line":3601,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3602,"column":0},"generated":{"line":3602,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3603,"column":0},"generated":{"line":3603,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3604,"column":0},"generated":{"line":3604,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3605,"column":0},"generated":{"line":3605,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3606,"column":0},"generated":{"line":3606,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3607,"column":0},"generated":{"line":3607,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3608,"column":0},"generated":{"line":3608,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3609,"column":0},"generated":{"line":3609,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3610,"column":0},"generated":{"line":3610,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3611,"column":0},"generated":{"line":3611,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3612,"column":0},"generated":{"line":3612,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3613,"column":0},"generated":{"line":3613,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3614,"column":0},"generated":{"line":3614,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3615,"column":0},"generated":{"line":3615,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3616,"column":0},"generated":{"line":3616,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3617,"column":0},"generated":{"line":3617,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3618,"column":0},"generated":{"line":3618,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3619,"column":0},"generated":{"line":3619,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3620,"column":0},"generated":{"line":3620,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3621,"column":0},"generated":{"line":3621,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3622,"column":0},"generated":{"line":3622,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3623,"column":0},"generated":{"line":3623,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3624,"column":0},"generated":{"line":3624,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3625,"column":0},"generated":{"line":3625,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3626,"column":0},"generated":{"line":3626,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3627,"column":0},"generated":{"line":3627,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3628,"column":0},"generated":{"line":3628,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3629,"column":0},"generated":{"line":3629,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3630,"column":0},"generated":{"line":3630,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3631,"column":0},"generated":{"line":3631,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3632,"column":0},"generated":{"line":3632,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3633,"column":0},"generated":{"line":3633,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3634,"column":0},"generated":{"line":3634,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3635,"column":0},"generated":{"line":3635,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3636,"column":0},"generated":{"line":3636,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3637,"column":0},"generated":{"line":3637,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3638,"column":0},"generated":{"line":3638,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3639,"column":0},"generated":{"line":3639,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3640,"column":0},"generated":{"line":3640,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3641,"column":0},"generated":{"line":3641,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3642,"column":0},"generated":{"line":3642,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3643,"column":0},"generated":{"line":3643,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3644,"column":0},"generated":{"line":3644,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3645,"column":0},"generated":{"line":3645,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3646,"column":0},"generated":{"line":3646,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3647,"column":0},"generated":{"line":3647,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3648,"column":0},"generated":{"line":3648,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3649,"column":0},"generated":{"line":3649,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3650,"column":0},"generated":{"line":3650,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3651,"column":0},"generated":{"line":3651,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3652,"column":0},"generated":{"line":3652,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3653,"column":0},"generated":{"line":3653,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3654,"column":0},"generated":{"line":3654,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3655,"column":0},"generated":{"line":3655,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3656,"column":0},"generated":{"line":3656,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3657,"column":0},"generated":{"line":3657,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3658,"column":0},"generated":{"line":3658,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3659,"column":0},"generated":{"line":3659,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3660,"column":0},"generated":{"line":3660,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3661,"column":0},"generated":{"line":3661,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3662,"column":0},"generated":{"line":3662,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3663,"column":0},"generated":{"line":3663,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3664,"column":0},"generated":{"line":3664,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3665,"column":0},"generated":{"line":3665,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3666,"column":0},"generated":{"line":3666,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3667,"column":0},"generated":{"line":3667,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3668,"column":0},"generated":{"line":3668,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3669,"column":0},"generated":{"line":3669,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3670,"column":0},"generated":{"line":3670,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3671,"column":0},"generated":{"line":3671,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3672,"column":0},"generated":{"line":3672,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3673,"column":0},"generated":{"line":3673,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3674,"column":0},"generated":{"line":3674,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3675,"column":0},"generated":{"line":3675,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3676,"column":0},"generated":{"line":3676,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3677,"column":0},"generated":{"line":3677,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3678,"column":0},"generated":{"line":3678,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3679,"column":0},"generated":{"line":3679,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3680,"column":0},"generated":{"line":3680,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3681,"column":0},"generated":{"line":3681,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3682,"column":0},"generated":{"line":3682,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3683,"column":0},"generated":{"line":3683,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3684,"column":0},"generated":{"line":3684,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3685,"column":0},"generated":{"line":3685,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3686,"column":0},"generated":{"line":3686,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3687,"column":0},"generated":{"line":3687,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3688,"column":0},"generated":{"line":3688,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3689,"column":0},"generated":{"line":3689,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3690,"column":0},"generated":{"line":3690,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3691,"column":0},"generated":{"line":3691,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3692,"column":0},"generated":{"line":3692,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3693,"column":0},"generated":{"line":3693,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3694,"column":0},"generated":{"line":3694,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3695,"column":0},"generated":{"line":3695,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3696,"column":0},"generated":{"line":3696,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3697,"column":0},"generated":{"line":3697,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3698,"column":0},"generated":{"line":3698,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3699,"column":0},"generated":{"line":3699,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3700,"column":0},"generated":{"line":3700,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3701,"column":0},"generated":{"line":3701,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3702,"column":0},"generated":{"line":3702,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3703,"column":0},"generated":{"line":3703,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3704,"column":0},"generated":{"line":3704,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3705,"column":0},"generated":{"line":3705,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3706,"column":0},"generated":{"line":3706,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3707,"column":0},"generated":{"line":3707,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3708,"column":0},"generated":{"line":3708,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3709,"column":0},"generated":{"line":3709,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3710,"column":0},"generated":{"line":3710,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3711,"column":0},"generated":{"line":3711,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3712,"column":0},"generated":{"line":3712,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3713,"column":0},"generated":{"line":3713,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3714,"column":0},"generated":{"line":3714,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3715,"column":0},"generated":{"line":3715,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3716,"column":0},"generated":{"line":3716,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3717,"column":0},"generated":{"line":3717,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3718,"column":0},"generated":{"line":3718,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3719,"column":0},"generated":{"line":3719,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3720,"column":0},"generated":{"line":3720,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3721,"column":0},"generated":{"line":3721,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3722,"column":0},"generated":{"line":3722,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3723,"column":0},"generated":{"line":3723,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3724,"column":0},"generated":{"line":3724,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3725,"column":0},"generated":{"line":3725,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3726,"column":0},"generated":{"line":3726,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3727,"column":0},"generated":{"line":3727,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3728,"column":0},"generated":{"line":3728,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3729,"column":0},"generated":{"line":3729,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3730,"column":0},"generated":{"line":3730,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3731,"column":0},"generated":{"line":3731,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3732,"column":0},"generated":{"line":3732,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3733,"column":0},"generated":{"line":3733,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3734,"column":0},"generated":{"line":3734,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3735,"column":0},"generated":{"line":3735,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3736,"column":0},"generated":{"line":3736,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3737,"column":0},"generated":{"line":3737,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3738,"column":0},"generated":{"line":3738,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3739,"column":0},"generated":{"line":3739,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3740,"column":0},"generated":{"line":3740,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3741,"column":0},"generated":{"line":3741,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3742,"column":0},"generated":{"line":3742,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3743,"column":0},"generated":{"line":3743,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3744,"column":0},"generated":{"line":3744,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3745,"column":0},"generated":{"line":3745,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3746,"column":0},"generated":{"line":3746,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3747,"column":0},"generated":{"line":3747,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3748,"column":0},"generated":{"line":3748,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3749,"column":0},"generated":{"line":3749,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3750,"column":0},"generated":{"line":3750,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3751,"column":0},"generated":{"line":3751,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3752,"column":0},"generated":{"line":3752,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3753,"column":0},"generated":{"line":3753,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3754,"column":0},"generated":{"line":3754,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3755,"column":0},"generated":{"line":3755,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3756,"column":0},"generated":{"line":3756,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3757,"column":0},"generated":{"line":3757,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3758,"column":0},"generated":{"line":3758,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3759,"column":0},"generated":{"line":3759,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3760,"column":0},"generated":{"line":3760,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3761,"column":0},"generated":{"line":3761,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3762,"column":0},"generated":{"line":3762,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3763,"column":0},"generated":{"line":3763,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3764,"column":0},"generated":{"line":3764,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3765,"column":0},"generated":{"line":3765,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3766,"column":0},"generated":{"line":3766,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3767,"column":0},"generated":{"line":3767,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3768,"column":0},"generated":{"line":3768,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3769,"column":0},"generated":{"line":3769,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3770,"column":0},"generated":{"line":3770,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3771,"column":0},"generated":{"line":3771,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3772,"column":0},"generated":{"line":3772,"column":0}},{"source":"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js","original":{"line":3773,"column":0},"generated":{"line":3773,"column":0}}],"sources":{"node_modules\\cwise-parser\\node_modules\\esprima\\esprima.js":"/*\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/*jslint bitwise:true plusplus:true */\n/*global esprima:true, define:true, exports:true, window: true,\nthrowErrorTolerant: true,\nthrowError: true, generateStatement: true, peek: true,\nparseAssignmentExpression: true, parseBlock: true, parseExpression: true,\nparseFunctionDeclaration: true, parseFunctionExpression: true,\nparseFunctionSourceElements: true, parseVariableIdentifier: true,\nparseLeftHandSideExpression: true,\nparseUnaryExpression: true,\nparseStatement: true, parseSourceElement: true */\n\n(function (root, factory) {\n    'use strict';\n\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js,\n    // Rhino, and plain browser loading.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.esprima = {}));\n    }\n}(this, function (exports) {\n    'use strict';\n\n    var Token,\n        TokenName,\n        FnExprTokens,\n        Syntax,\n        PropertyKind,\n        Messages,\n        Regex,\n        SyntaxTreeDelegate,\n        source,\n        strict,\n        index,\n        lineNumber,\n        lineStart,\n        length,\n        delegate,\n        lookahead,\n        state,\n        extra;\n\n    Token = {\n        BooleanLiteral: 1,\n        EOF: 2,\n        Identifier: 3,\n        Keyword: 4,\n        NullLiteral: 5,\n        NumericLiteral: 6,\n        Punctuator: 7,\n        StringLiteral: 8,\n        RegularExpression: 9\n    };\n\n    TokenName = {};\n    TokenName[Token.BooleanLiteral] = 'Boolean';\n    TokenName[Token.EOF] = '<end>';\n    TokenName[Token.Identifier] = 'Identifier';\n    TokenName[Token.Keyword] = 'Keyword';\n    TokenName[Token.NullLiteral] = 'Null';\n    TokenName[Token.NumericLiteral] = 'Numeric';\n    TokenName[Token.Punctuator] = 'Punctuator';\n    TokenName[Token.StringLiteral] = 'String';\n    TokenName[Token.RegularExpression] = 'RegularExpression';\n\n    // A function following one of those tokens is an expression.\n    FnExprTokens = ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\n                    'return', 'case', 'delete', 'throw', 'void',\n                    // assignment operators\n                    '=', '+=', '-=', '*=', '/=', '%=', '<<=', '>>=', '>>>=',\n                    '&=', '|=', '^=', ',',\n                    // binary/unary operators\n                    '+', '-', '*', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\n                    '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\n                    '<=', '<', '>', '!=', '!=='];\n\n    Syntax = {\n        AssignmentExpression: 'AssignmentExpression',\n        ArrayExpression: 'ArrayExpression',\n        BlockStatement: 'BlockStatement',\n        BinaryExpression: 'BinaryExpression',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DoWhileStatement: 'DoWhileStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExpressionStatement: 'ExpressionStatement',\n        ForStatement: 'ForStatement',\n        ForInStatement: 'ForInStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        Literal: 'Literal',\n        LabeledStatement: 'LabeledStatement',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        NewExpression: 'NewExpression',\n        ObjectExpression: 'ObjectExpression',\n        Program: 'Program',\n        Property: 'Property',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SwitchStatement: 'SwitchStatement',\n        SwitchCase: 'SwitchCase',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TryStatement: 'TryStatement',\n        UnaryExpression: 'UnaryExpression',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement'\n    };\n\n    PropertyKind = {\n        Data: 1,\n        Get: 2,\n        Set: 4\n    };\n\n    // Error messages should be identical to V8.\n    Messages = {\n        UnexpectedToken:  'Unexpected token %0',\n        UnexpectedNumber:  'Unexpected number',\n        UnexpectedString:  'Unexpected string',\n        UnexpectedIdentifier:  'Unexpected identifier',\n        UnexpectedReserved:  'Unexpected reserved word',\n        UnexpectedEOS:  'Unexpected end of input',\n        NewlineAfterThrow:  'Illegal newline after throw',\n        InvalidRegExp: 'Invalid regular expression',\n        UnterminatedRegExp:  'Invalid regular expression: missing /',\n        InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n        InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n        MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n        NoCatchOrFinally:  'Missing catch or finally after try',\n        UnknownLabel: 'Undefined label \\'%0\\'',\n        Redeclaration: '%0 \\'%1\\' has already been declared',\n        IllegalContinue: 'Illegal continue statement',\n        IllegalBreak: 'Illegal break statement',\n        IllegalReturn: 'Illegal return statement',\n        StrictModeWith:  'Strict mode code may not include a with statement',\n        StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n        StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n        StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n        StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n        StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n        StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n        StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n        StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n        AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n        AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n        StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n        StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n        StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n        StrictReservedWord:  'Use of future reserved word in strict mode'\n    };\n\n    // See also tools/generate-unicode-regex.py.\n    Regex = {\n        NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n        NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0\\u08A2-\\u08AC\\u08E4-\\u08FE\\u0900-\\u0963\\u0966-\\u096F\\u0971-\\u0977\\u0979-\\u097F\\u0981-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C82\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1D00-\\u1DE6\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA697\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7B\\uAA80-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE26\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n    };\n\n    // Ensure the condition is true, otherwise throw an error.\n    // This is only to have a better contract semantic, i.e. another safety net\n    // to catch a logic error. The condition shall be fulfilled in normal case.\n    // Do NOT use this to enforce a certain condition on any user input.\n\n    function assert(condition, message) {\n        /* istanbul ignore if */\n        if (!condition) {\n            throw new Error('ASSERT: ' + message);\n        }\n    }\n\n    function isDecimalDigit(ch) {\n        return (ch >= 48 && ch <= 57);   // 0..9\n    }\n\n    function isHexDigit(ch) {\n        return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n    }\n\n    function isOctalDigit(ch) {\n        return '01234567'.indexOf(ch) >= 0;\n    }\n\n\n    // 7.2 White Space\n\n    function isWhiteSpace(ch) {\n        return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n            (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n    }\n\n    // 7.3 Line Terminators\n\n    function isLineTerminator(ch) {\n        return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n    }\n\n    // 7.6 Identifier Names and Identifiers\n\n    function isIdentifierStart(ch) {\n        return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n            (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n            (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n            (ch === 0x5C) ||                      // \\ (backslash)\n            ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n    }\n\n    function isIdentifierPart(ch) {\n        return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n            (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n            (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n            (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n            (ch === 0x5C) ||                      // \\ (backslash)\n            ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n    }\n\n    // 7.6.1.2 Future Reserved Words\n\n    function isFutureReservedWord(id) {\n        switch (id) {\n        case 'class':\n        case 'enum':\n        case 'export':\n        case 'extends':\n        case 'import':\n        case 'super':\n            return true;\n        default:\n            return false;\n        }\n    }\n\n    function isStrictModeReservedWord(id) {\n        switch (id) {\n        case 'implements':\n        case 'interface':\n        case 'package':\n        case 'private':\n        case 'protected':\n        case 'public':\n        case 'static':\n        case 'yield':\n        case 'let':\n            return true;\n        default:\n            return false;\n        }\n    }\n\n    function isRestrictedWord(id) {\n        return id === 'eval' || id === 'arguments';\n    }\n\n    // 7.6.1.1 Keywords\n\n    function isKeyword(id) {\n        if (strict && isStrictModeReservedWord(id)) {\n            return true;\n        }\n\n        // 'const' is specialized as Keyword in V8.\n        // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n        // Some others are from future reserved words.\n\n        switch (id.length) {\n        case 2:\n            return (id === 'if') || (id === 'in') || (id === 'do');\n        case 3:\n            return (id === 'var') || (id === 'for') || (id === 'new') ||\n                (id === 'try') || (id === 'let');\n        case 4:\n            return (id === 'this') || (id === 'else') || (id === 'case') ||\n                (id === 'void') || (id === 'with') || (id === 'enum');\n        case 5:\n            return (id === 'while') || (id === 'break') || (id === 'catch') ||\n                (id === 'throw') || (id === 'const') || (id === 'yield') ||\n                (id === 'class') || (id === 'super');\n        case 6:\n            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n                (id === 'switch') || (id === 'export') || (id === 'import');\n        case 7:\n            return (id === 'default') || (id === 'finally') || (id === 'extends');\n        case 8:\n            return (id === 'function') || (id === 'continue') || (id === 'debugger');\n        case 10:\n            return (id === 'instanceof');\n        default:\n            return false;\n        }\n    }\n\n    // 7.4 Comments\n\n    function addComment(type, value, start, end, loc) {\n        var comment, attacher;\n\n        assert(typeof start === 'number', 'Comment must have valid position');\n\n        // Because the way the actual token is scanned, often the comments\n        // (if any) are skipped twice during the lexical analysis.\n        // Thus, we need to skip adding a comment if the comment array already\n        // handled it.\n        if (state.lastCommentStart >= start) {\n            return;\n        }\n        state.lastCommentStart = start;\n\n        comment = {\n            type: type,\n            value: value\n        };\n        if (extra.range) {\n            comment.range = [start, end];\n        }\n        if (extra.loc) {\n            comment.loc = loc;\n        }\n        extra.comments.push(comment);\n        if (extra.attachComment) {\n            extra.leadingComments.push(comment);\n            extra.trailingComments.push(comment);\n        }\n    }\n\n    function skipSingleLineComment(offset) {\n        var start, loc, ch, comment;\n\n        start = index - offset;\n        loc = {\n            start: {\n                line: lineNumber,\n                column: index - lineStart - offset\n            }\n        };\n\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            ++index;\n            if (isLineTerminator(ch)) {\n                if (extra.comments) {\n                    comment = source.slice(start + offset, index - 1);\n                    loc.end = {\n                        line: lineNumber,\n                        column: index - lineStart - 1\n                    };\n                    addComment('Line', comment, start, index - 1, loc);\n                }\n                if (ch === 13 && source.charCodeAt(index) === 10) {\n                    ++index;\n                }\n                ++lineNumber;\n                lineStart = index;\n                return;\n            }\n        }\n\n        if (extra.comments) {\n            comment = source.slice(start + offset, index);\n            loc.end = {\n                line: lineNumber,\n                column: index - lineStart\n            };\n            addComment('Line', comment, start, index, loc);\n        }\n    }\n\n    function skipMultiLineComment() {\n        var start, loc, ch, comment;\n\n        if (extra.comments) {\n            start = index - 2;\n            loc = {\n                start: {\n                    line: lineNumber,\n                    column: index - lineStart - 2\n                }\n            };\n        }\n\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (isLineTerminator(ch)) {\n                if (ch === 0x0D && source.charCodeAt(index + 1) === 0x0A) {\n                    ++index;\n                }\n                ++lineNumber;\n                ++index;\n                lineStart = index;\n                if (index >= length) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n            } else if (ch === 0x2A) {\n                // Block comment ends with '*/'.\n                if (source.charCodeAt(index + 1) === 0x2F) {\n                    ++index;\n                    ++index;\n                    if (extra.comments) {\n                        comment = source.slice(start + 2, index - 2);\n                        loc.end = {\n                            line: lineNumber,\n                            column: index - lineStart\n                        };\n                        addComment('Block', comment, start, index, loc);\n                    }\n                    return;\n                }\n                ++index;\n            } else {\n                ++index;\n            }\n        }\n\n        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n    }\n\n    function skipComment() {\n        var ch, start;\n\n        start = (index === 0);\n        while (index < length) {\n            ch = source.charCodeAt(index);\n\n            if (isWhiteSpace(ch)) {\n                ++index;\n            } else if (isLineTerminator(ch)) {\n                ++index;\n                if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                    ++index;\n                }\n                ++lineNumber;\n                lineStart = index;\n                start = true;\n            } else if (ch === 0x2F) { // U+002F is '/'\n                ch = source.charCodeAt(index + 1);\n                if (ch === 0x2F) {\n                    ++index;\n                    ++index;\n                    skipSingleLineComment(2);\n                    start = true;\n                } else if (ch === 0x2A) {  // U+002A is '*'\n                    ++index;\n                    ++index;\n                    skipMultiLineComment();\n                } else {\n                    break;\n                }\n            } else if (start && ch === 0x2D) { // U+002D is '-'\n                // U+003E is '>'\n                if ((source.charCodeAt(index + 1) === 0x2D) && (source.charCodeAt(index + 2) === 0x3E)) {\n                    // '-->' is a single-line comment\n                    index += 3;\n                    skipSingleLineComment(3);\n                } else {\n                    break;\n                }\n            } else if (ch === 0x3C) { // U+003C is '<'\n                if (source.slice(index + 1, index + 4) === '!--') {\n                    ++index; // `<`\n                    ++index; // `!`\n                    ++index; // `-`\n                    ++index; // `-`\n                    skipSingleLineComment(4);\n                } else {\n                    break;\n                }\n            } else {\n                break;\n            }\n        }\n    }\n\n    function scanHexEscape(prefix) {\n        var i, len, ch, code = 0;\n\n        len = (prefix === 'u') ? 4 : 2;\n        for (i = 0; i < len; ++i) {\n            if (index < length && isHexDigit(source[index])) {\n                ch = source[index++];\n                code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n            } else {\n                return '';\n            }\n        }\n        return String.fromCharCode(code);\n    }\n\n    function getEscapedIdentifier() {\n        var ch, id;\n\n        ch = source.charCodeAt(index++);\n        id = String.fromCharCode(ch);\n\n        // '\\u' (U+005C, U+0075) denotes an escaped character.\n        if (ch === 0x5C) {\n            if (source.charCodeAt(index) !== 0x75) {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n            ++index;\n            ch = scanHexEscape('u');\n            if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n            id = ch;\n        }\n\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (!isIdentifierPart(ch)) {\n                break;\n            }\n            ++index;\n            id += String.fromCharCode(ch);\n\n            // '\\u' (U+005C, U+0075) denotes an escaped character.\n            if (ch === 0x5C) {\n                id = id.substr(0, id.length - 1);\n                if (source.charCodeAt(index) !== 0x75) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n                ++index;\n                ch = scanHexEscape('u');\n                if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n                id += ch;\n            }\n        }\n\n        return id;\n    }\n\n    function getIdentifier() {\n        var start, ch;\n\n        start = index++;\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (ch === 0x5C) {\n                // Blackslash (U+005C) marks Unicode escape sequence.\n                index = start;\n                return getEscapedIdentifier();\n            }\n            if (isIdentifierPart(ch)) {\n                ++index;\n            } else {\n                break;\n            }\n        }\n\n        return source.slice(start, index);\n    }\n\n    function scanIdentifier() {\n        var start, id, type;\n\n        start = index;\n\n        // Backslash (U+005C) starts an escaped character.\n        id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n        // There is no keyword or literal with only one character.\n        // Thus, it must be an identifier.\n        if (id.length === 1) {\n            type = Token.Identifier;\n        } else if (isKeyword(id)) {\n            type = Token.Keyword;\n        } else if (id === 'null') {\n            type = Token.NullLiteral;\n        } else if (id === 'true' || id === 'false') {\n            type = Token.BooleanLiteral;\n        } else {\n            type = Token.Identifier;\n        }\n\n        return {\n            type: type,\n            value: id,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            start: start,\n            end: index\n        };\n    }\n\n\n    // 7.7 Punctuators\n\n    function scanPunctuator() {\n        var start = index,\n            code = source.charCodeAt(index),\n            code2,\n            ch1 = source[index],\n            ch2,\n            ch3,\n            ch4;\n\n        switch (code) {\n\n        // Check for most common single-character punctuators.\n        case 0x2E:  // . dot\n        case 0x28:  // ( open bracket\n        case 0x29:  // ) close bracket\n        case 0x3B:  // ; semicolon\n        case 0x2C:  // , comma\n        case 0x7B:  // { open curly brace\n        case 0x7D:  // } close curly brace\n        case 0x5B:  // [\n        case 0x5D:  // ]\n        case 0x3A:  // :\n        case 0x3F:  // ?\n        case 0x7E:  // ~\n            ++index;\n            if (extra.tokenize) {\n                if (code === 0x28) {\n                    extra.openParenToken = extra.tokens.length;\n                } else if (code === 0x7B) {\n                    extra.openCurlyToken = extra.tokens.length;\n                }\n            }\n            return {\n                type: Token.Punctuator,\n                value: String.fromCharCode(code),\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n\n        default:\n            code2 = source.charCodeAt(index + 1);\n\n            // '=' (U+003D) marks an assignment or comparison operator.\n            if (code2 === 0x3D) {\n                switch (code) {\n                case 0x2B:  // +\n                case 0x2D:  // -\n                case 0x2F:  // /\n                case 0x3C:  // <\n                case 0x3E:  // >\n                case 0x5E:  // ^\n                case 0x7C:  // |\n                case 0x25:  // %\n                case 0x26:  // &\n                case 0x2A:  // *\n                    index += 2;\n                    return {\n                        type: Token.Punctuator,\n                        value: String.fromCharCode(code) + String.fromCharCode(code2),\n                        lineNumber: lineNumber,\n                        lineStart: lineStart,\n                        start: start,\n                        end: index\n                    };\n\n                case 0x21: // !\n                case 0x3D: // =\n                    index += 2;\n\n                    // !== and ===\n                    if (source.charCodeAt(index) === 0x3D) {\n                        ++index;\n                    }\n                    return {\n                        type: Token.Punctuator,\n                        value: source.slice(start, index),\n                        lineNumber: lineNumber,\n                        lineStart: lineStart,\n                        start: start,\n                        end: index\n                    };\n                }\n            }\n        }\n\n        // 4-character punctuator: >>>=\n\n        ch4 = source.substr(index, 4);\n\n        if (ch4 === '>>>=') {\n            index += 4;\n            return {\n                type: Token.Punctuator,\n                value: ch4,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n        }\n\n        // 3-character punctuators: === !== >>> <<= >>=\n\n        ch3 = ch4.substr(0, 3);\n\n        if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n            index += 3;\n            return {\n                type: Token.Punctuator,\n                value: ch3,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n        }\n\n        // Other 2-character punctuators: ++ -- << >> && ||\n        ch2 = ch3.substr(0, 2);\n\n        if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n            index += 2;\n            return {\n                type: Token.Punctuator,\n                value: ch2,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n        }\n\n        // 1-character punctuators: < > = ! + - * % & | ^ /\n        if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n            ++index;\n            return {\n                type: Token.Punctuator,\n                value: ch1,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n        }\n\n        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n    }\n\n    // 7.8.3 Numeric Literals\n\n    function scanHexLiteral(start) {\n        var number = '';\n\n        while (index < length) {\n            if (!isHexDigit(source[index])) {\n                break;\n            }\n            number += source[index++];\n        }\n\n        if (number.length === 0) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        if (isIdentifierStart(source.charCodeAt(index))) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseInt('0x' + number, 16),\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            start: start,\n            end: index\n        };\n    }\n\n    function scanOctalLiteral(start) {\n        var number = '0' + source[index++];\n        while (index < length) {\n            if (!isOctalDigit(source[index])) {\n                break;\n            }\n            number += source[index++];\n        }\n\n        if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseInt(number, 8),\n            octal: true,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            start: start,\n            end: index\n        };\n    }\n\n    function isImplicitOctalLiteral() {\n        var i, ch;\n\n        // Implicit octal, unless there is a non-octal digit.\n        // (Annex B.1.1 on Numeric Literals)\n        for (i = index + 1; i < length; ++i) {\n            ch = source[i];\n            if (ch === '8' || ch === '9') {\n                return false;\n            }\n            if (!isOctalDigit(ch)) {\n                return true;\n            }\n        }\n\n        return true;\n    }\n\n    function scanNumericLiteral() {\n        var number, start, ch;\n\n        ch = source[index];\n        assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n            'Numeric literal must start with a decimal digit or a decimal point');\n\n        start = index;\n        number = '';\n        if (ch !== '.') {\n            number = source[index++];\n            ch = source[index];\n\n            // Hex number starts with '0x'.\n            // Octal number starts with '0'.\n            if (number === '0') {\n                if (ch === 'x' || ch === 'X') {\n                    ++index;\n                    return scanHexLiteral(start);\n                }\n                if (isOctalDigit(ch)) {\n                    if (isImplicitOctalLiteral()) {\n                        return scanOctalLiteral(start);\n                    }\n                }\n            }\n\n            while (isDecimalDigit(source.charCodeAt(index))) {\n                number += source[index++];\n            }\n            ch = source[index];\n        }\n\n        if (ch === '.') {\n            number += source[index++];\n            while (isDecimalDigit(source.charCodeAt(index))) {\n                number += source[index++];\n            }\n            ch = source[index];\n        }\n\n        if (ch === 'e' || ch === 'E') {\n            number += source[index++];\n\n            ch = source[index];\n            if (ch === '+' || ch === '-') {\n                number += source[index++];\n            }\n            if (isDecimalDigit(source.charCodeAt(index))) {\n                while (isDecimalDigit(source.charCodeAt(index))) {\n                    number += source[index++];\n                }\n            } else {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n        }\n\n        if (isIdentifierStart(source.charCodeAt(index))) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseFloat(number),\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            start: start,\n            end: index\n        };\n    }\n\n    // 7.8.4 String Literals\n\n    function scanStringLiteral() {\n        var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n        startLineNumber = lineNumber;\n        startLineStart = lineStart;\n\n        quote = source[index];\n        assert((quote === '\\'' || quote === '\"'),\n            'String literal must starts with a quote');\n\n        start = index;\n        ++index;\n\n        while (index < length) {\n            ch = source[index++];\n\n            if (ch === quote) {\n                quote = '';\n                break;\n            } else if (ch === '\\\\') {\n                ch = source[index++];\n                if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                    switch (ch) {\n                    case 'u':\n                    case 'x':\n                        restore = index;\n                        unescaped = scanHexEscape(ch);\n                        if (unescaped) {\n                            str += unescaped;\n                        } else {\n                            index = restore;\n                            str += ch;\n                        }\n                        break;\n                    case 'n':\n                        str += '\\n';\n                        break;\n                    case 'r':\n                        str += '\\r';\n                        break;\n                    case 't':\n                        str += '\\t';\n                        break;\n                    case 'b':\n                        str += '\\b';\n                        break;\n                    case 'f':\n                        str += '\\f';\n                        break;\n                    case 'v':\n                        str += '\\x0B';\n                        break;\n\n                    default:\n                        if (isOctalDigit(ch)) {\n                            code = '01234567'.indexOf(ch);\n\n                            // \\0 is not octal escape sequence\n                            if (code !== 0) {\n                                octal = true;\n                            }\n\n                            if (index < length && isOctalDigit(source[index])) {\n                                octal = true;\n                                code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                                // 3 digits are only allowed when string starts\n                                // with 0, 1, 2, 3\n                                if ('0123'.indexOf(ch) >= 0 &&\n                                        index < length &&\n                                        isOctalDigit(source[index])) {\n                                    code = code * 8 + '01234567'.indexOf(source[index++]);\n                                }\n                            }\n                            str += String.fromCharCode(code);\n                        } else {\n                            str += ch;\n                        }\n                        break;\n                    }\n                } else {\n                    ++lineNumber;\n                    if (ch ===  '\\r' && source[index] === '\\n') {\n                        ++index;\n                    }\n                    lineStart = index;\n                }\n            } else if (isLineTerminator(ch.charCodeAt(0))) {\n                break;\n            } else {\n                str += ch;\n            }\n        }\n\n        if (quote !== '') {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.StringLiteral,\n            value: str,\n            octal: octal,\n            startLineNumber: startLineNumber,\n            startLineStart: startLineStart,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            start: start,\n            end: index\n        };\n    }\n\n    function testRegExp(pattern, flags) {\n        var value;\n        try {\n            value = new RegExp(pattern, flags);\n        } catch (e) {\n            throwError({}, Messages.InvalidRegExp);\n        }\n        return value;\n    }\n\n    function scanRegExpBody() {\n        var ch, str, classMarker, terminated, body;\n\n        ch = source[index];\n        assert(ch === '/', 'Regular expression literal must start with a slash');\n        str = source[index++];\n\n        classMarker = false;\n        terminated = false;\n        while (index < length) {\n            ch = source[index++];\n            str += ch;\n            if (ch === '\\\\') {\n                ch = source[index++];\n                // ECMA-262 7.8.5\n                if (isLineTerminator(ch.charCodeAt(0))) {\n                    throwError({}, Messages.UnterminatedRegExp);\n                }\n                str += ch;\n            } else if (isLineTerminator(ch.charCodeAt(0))) {\n                throwError({}, Messages.UnterminatedRegExp);\n            } else if (classMarker) {\n                if (ch === ']') {\n                    classMarker = false;\n                }\n            } else {\n                if (ch === '/') {\n                    terminated = true;\n                    break;\n                } else if (ch === '[') {\n                    classMarker = true;\n                }\n            }\n        }\n\n        if (!terminated) {\n            throwError({}, Messages.UnterminatedRegExp);\n        }\n\n        // Exclude leading and trailing slash.\n        body = str.substr(1, str.length - 2);\n        return {\n            value: body,\n            literal: str\n        };\n    }\n\n    function scanRegExpFlags() {\n        var ch, str, flags, restore;\n\n        str = '';\n        flags = '';\n        while (index < length) {\n            ch = source[index];\n            if (!isIdentifierPart(ch.charCodeAt(0))) {\n                break;\n            }\n\n            ++index;\n            if (ch === '\\\\' && index < length) {\n                ch = source[index];\n                if (ch === 'u') {\n                    ++index;\n                    restore = index;\n                    ch = scanHexEscape('u');\n                    if (ch) {\n                        flags += ch;\n                        for (str += '\\\\u'; restore < index; ++restore) {\n                            str += source[restore];\n                        }\n                    } else {\n                        index = restore;\n                        flags += 'u';\n                        str += '\\\\u';\n                    }\n                    throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n                } else {\n                    str += '\\\\';\n                    throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n            } else {\n                flags += ch;\n                str += ch;\n            }\n        }\n\n        return {\n            value: flags,\n            literal: str\n        };\n    }\n\n    function scanRegExp() {\n        var start, body, flags, pattern, value;\n\n        lookahead = null;\n        skipComment();\n        start = index;\n\n        body = scanRegExpBody();\n        flags = scanRegExpFlags();\n        value = testRegExp(body.value, flags.value);\n\n        if (extra.tokenize) {\n            return {\n                type: Token.RegularExpression,\n                value: value,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n        }\n\n        return {\n            literal: body.literal + flags.literal,\n            value: value,\n            start: start,\n            end: index\n        };\n    }\n\n    function collectRegex() {\n        var pos, loc, regex, token;\n\n        skipComment();\n\n        pos = index;\n        loc = {\n            start: {\n                line: lineNumber,\n                column: index - lineStart\n            }\n        };\n\n        regex = scanRegExp();\n        loc.end = {\n            line: lineNumber,\n            column: index - lineStart\n        };\n\n        /* istanbul ignore next */\n        if (!extra.tokenize) {\n            // Pop the previous token, which is likely '/' or '/='\n            if (extra.tokens.length > 0) {\n                token = extra.tokens[extra.tokens.length - 1];\n                if (token.range[0] === pos && token.type === 'Punctuator') {\n                    if (token.value === '/' || token.value === '/=') {\n                        extra.tokens.pop();\n                    }\n                }\n            }\n\n            extra.tokens.push({\n                type: 'RegularExpression',\n                value: regex.literal,\n                range: [pos, index],\n                loc: loc\n            });\n        }\n\n        return regex;\n    }\n\n    function isIdentifierName(token) {\n        return token.type === Token.Identifier ||\n            token.type === Token.Keyword ||\n            token.type === Token.BooleanLiteral ||\n            token.type === Token.NullLiteral;\n    }\n\n    function advanceSlash() {\n        var prevToken,\n            checkToken;\n        // Using the following algorithm:\n        // https://github.com/mozilla/sweet.js/wiki/design\n        prevToken = extra.tokens[extra.tokens.length - 1];\n        if (!prevToken) {\n            // Nothing before that: it cannot be a division.\n            return collectRegex();\n        }\n        if (prevToken.type === 'Punctuator') {\n            if (prevToken.value === ']') {\n                return scanPunctuator();\n            }\n            if (prevToken.value === ')') {\n                checkToken = extra.tokens[extra.openParenToken - 1];\n                if (checkToken &&\n                        checkToken.type === 'Keyword' &&\n                        (checkToken.value === 'if' ||\n                         checkToken.value === 'while' ||\n                         checkToken.value === 'for' ||\n                         checkToken.value === 'with')) {\n                    return collectRegex();\n                }\n                return scanPunctuator();\n            }\n            if (prevToken.value === '}') {\n                // Dividing a function by anything makes little sense,\n                // but we have to check for that.\n                if (extra.tokens[extra.openCurlyToken - 3] &&\n                        extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                    // Anonymous function.\n                    checkToken = extra.tokens[extra.openCurlyToken - 4];\n                    if (!checkToken) {\n                        return scanPunctuator();\n                    }\n                } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                        extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                    // Named function.\n                    checkToken = extra.tokens[extra.openCurlyToken - 5];\n                    if (!checkToken) {\n                        return collectRegex();\n                    }\n                } else {\n                    return scanPunctuator();\n                }\n                // checkToken determines whether the function is\n                // a declaration or an expression.\n                if (FnExprTokens.indexOf(checkToken.value) >= 0) {\n                    // It is an expression.\n                    return scanPunctuator();\n                }\n                // It is a declaration.\n                return collectRegex();\n            }\n            return collectRegex();\n        }\n        if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n            return collectRegex();\n        }\n        return scanPunctuator();\n    }\n\n    function advance() {\n        var ch;\n\n        skipComment();\n\n        if (index >= length) {\n            return {\n                type: Token.EOF,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: index,\n                end: index\n            };\n        }\n\n        ch = source.charCodeAt(index);\n\n        if (isIdentifierStart(ch)) {\n            return scanIdentifier();\n        }\n\n        // Very common: ( and ) and ;\n        if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n            return scanPunctuator();\n        }\n\n        // String literal starts with single quote (U+0027) or double quote (U+0022).\n        if (ch === 0x27 || ch === 0x22) {\n            return scanStringLiteral();\n        }\n\n\n        // Dot (.) U+002E can also start a floating-point number, hence the need\n        // to check the next character.\n        if (ch === 0x2E) {\n            if (isDecimalDigit(source.charCodeAt(index + 1))) {\n                return scanNumericLiteral();\n            }\n            return scanPunctuator();\n        }\n\n        if (isDecimalDigit(ch)) {\n            return scanNumericLiteral();\n        }\n\n        // Slash (/) U+002F can also start a regex.\n        if (extra.tokenize && ch === 0x2F) {\n            return advanceSlash();\n        }\n\n        return scanPunctuator();\n    }\n\n    function collectToken() {\n        var loc, token, range, value;\n\n        skipComment();\n        loc = {\n            start: {\n                line: lineNumber,\n                column: index - lineStart\n            }\n        };\n\n        token = advance();\n        loc.end = {\n            line: lineNumber,\n            column: index - lineStart\n        };\n\n        if (token.type !== Token.EOF) {\n            value = source.slice(token.start, token.end);\n            extra.tokens.push({\n                type: TokenName[token.type],\n                value: value,\n                range: [token.start, token.end],\n                loc: loc\n            });\n        }\n\n        return token;\n    }\n\n    function lex() {\n        var token;\n\n        token = lookahead;\n        index = token.end;\n        lineNumber = token.lineNumber;\n        lineStart = token.lineStart;\n\n        lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n        index = token.end;\n        lineNumber = token.lineNumber;\n        lineStart = token.lineStart;\n\n        return token;\n    }\n\n    function peek() {\n        var pos, line, start;\n\n        pos = index;\n        line = lineNumber;\n        start = lineStart;\n        lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n        index = pos;\n        lineNumber = line;\n        lineStart = start;\n    }\n\n    function Position(line, column) {\n        this.line = line;\n        this.column = column;\n    }\n\n    function SourceLocation(startLine, startColumn, line, column) {\n        this.start = new Position(startLine, startColumn);\n        this.end = new Position(line, column);\n    }\n\n    SyntaxTreeDelegate = {\n\n        name: 'SyntaxTree',\n\n        processComment: function (node) {\n            var lastChild, trailingComments;\n\n            if (node.type === Syntax.Program) {\n                if (node.body.length > 0) {\n                    return;\n                }\n            }\n\n            if (extra.trailingComments.length > 0) {\n                if (extra.trailingComments[0].range[0] >= node.range[1]) {\n                    trailingComments = extra.trailingComments;\n                    extra.trailingComments = [];\n                } else {\n                    extra.trailingComments.length = 0;\n                }\n            } else {\n                if (extra.bottomRightStack.length > 0 &&\n                        extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments &&\n                        extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments[0].range[0] >= node.range[1]) {\n                    trailingComments = extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments;\n                    delete extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments;\n                }\n            }\n\n            // Eating the stack.\n            while (extra.bottomRightStack.length > 0 && extra.bottomRightStack[extra.bottomRightStack.length - 1].range[0] >= node.range[0]) {\n                lastChild = extra.bottomRightStack.pop();\n            }\n\n            if (lastChild) {\n                if (lastChild.leadingComments && lastChild.leadingComments[lastChild.leadingComments.length - 1].range[1] <= node.range[0]) {\n                    node.leadingComments = lastChild.leadingComments;\n                    delete lastChild.leadingComments;\n                }\n            } else if (extra.leadingComments.length > 0 && extra.leadingComments[extra.leadingComments.length - 1].range[1] <= node.range[0]) {\n                node.leadingComments = extra.leadingComments;\n                extra.leadingComments = [];\n            }\n\n\n            if (trailingComments) {\n                node.trailingComments = trailingComments;\n            }\n\n            extra.bottomRightStack.push(node);\n        },\n\n        markEnd: function (node, startToken) {\n            if (extra.range) {\n                node.range = [startToken.start, index];\n            }\n            if (extra.loc) {\n                node.loc = new SourceLocation(\n                    startToken.startLineNumber === undefined ?  startToken.lineNumber : startToken.startLineNumber,\n                    startToken.start - (startToken.startLineStart === undefined ?  startToken.lineStart : startToken.startLineStart),\n                    lineNumber,\n                    index - lineStart\n                );\n                this.postProcess(node);\n            }\n\n            if (extra.attachComment) {\n                this.processComment(node);\n            }\n            return node;\n        },\n\n        postProcess: function (node) {\n            if (extra.source) {\n                node.loc.source = extra.source;\n            }\n            return node;\n        },\n\n        createArrayExpression: function (elements) {\n            return {\n                type: Syntax.ArrayExpression,\n                elements: elements\n            };\n        },\n\n        createAssignmentExpression: function (operator, left, right) {\n            return {\n                type: Syntax.AssignmentExpression,\n                operator: operator,\n                left: left,\n                right: right\n            };\n        },\n\n        createBinaryExpression: function (operator, left, right) {\n            var type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression :\n                        Syntax.BinaryExpression;\n            return {\n                type: type,\n                operator: operator,\n                left: left,\n                right: right\n            };\n        },\n\n        createBlockStatement: function (body) {\n            return {\n                type: Syntax.BlockStatement,\n                body: body\n            };\n        },\n\n        createBreakStatement: function (label) {\n            return {\n                type: Syntax.BreakStatement,\n                label: label\n            };\n        },\n\n        createCallExpression: function (callee, args) {\n            return {\n                type: Syntax.CallExpression,\n                callee: callee,\n                'arguments': args\n            };\n        },\n\n        createCatchClause: function (param, body) {\n            return {\n                type: Syntax.CatchClause,\n                param: param,\n                body: body\n            };\n        },\n\n        createConditionalExpression: function (test, consequent, alternate) {\n            return {\n                type: Syntax.ConditionalExpression,\n                test: test,\n                consequent: consequent,\n                alternate: alternate\n            };\n        },\n\n        createContinueStatement: function (label) {\n            return {\n                type: Syntax.ContinueStatement,\n                label: label\n            };\n        },\n\n        createDebuggerStatement: function () {\n            return {\n                type: Syntax.DebuggerStatement\n            };\n        },\n\n        createDoWhileStatement: function (body, test) {\n            return {\n                type: Syntax.DoWhileStatement,\n                body: body,\n                test: test\n            };\n        },\n\n        createEmptyStatement: function () {\n            return {\n                type: Syntax.EmptyStatement\n            };\n        },\n\n        createExpressionStatement: function (expression) {\n            return {\n                type: Syntax.ExpressionStatement,\n                expression: expression\n            };\n        },\n\n        createForStatement: function (init, test, update, body) {\n            return {\n                type: Syntax.ForStatement,\n                init: init,\n                test: test,\n                update: update,\n                body: body\n            };\n        },\n\n        createForInStatement: function (left, right, body) {\n            return {\n                type: Syntax.ForInStatement,\n                left: left,\n                right: right,\n                body: body,\n                each: false\n            };\n        },\n\n        createFunctionDeclaration: function (id, params, defaults, body) {\n            return {\n                type: Syntax.FunctionDeclaration,\n                id: id,\n                params: params,\n                defaults: defaults,\n                body: body,\n                rest: null,\n                generator: false,\n                expression: false\n            };\n        },\n\n        createFunctionExpression: function (id, params, defaults, body) {\n            return {\n                type: Syntax.FunctionExpression,\n                id: id,\n                params: params,\n                defaults: defaults,\n                body: body,\n                rest: null,\n                generator: false,\n                expression: false\n            };\n        },\n\n        createIdentifier: function (name) {\n            return {\n                type: Syntax.Identifier,\n                name: name\n            };\n        },\n\n        createIfStatement: function (test, consequent, alternate) {\n            return {\n                type: Syntax.IfStatement,\n                test: test,\n                consequent: consequent,\n                alternate: alternate\n            };\n        },\n\n        createLabeledStatement: function (label, body) {\n            return {\n                type: Syntax.LabeledStatement,\n                label: label,\n                body: body\n            };\n        },\n\n        createLiteral: function (token) {\n            return {\n                type: Syntax.Literal,\n                value: token.value,\n                raw: source.slice(token.start, token.end)\n            };\n        },\n\n        createMemberExpression: function (accessor, object, property) {\n            return {\n                type: Syntax.MemberExpression,\n                computed: accessor === '[',\n                object: object,\n                property: property\n            };\n        },\n\n        createNewExpression: function (callee, args) {\n            return {\n                type: Syntax.NewExpression,\n                callee: callee,\n                'arguments': args\n            };\n        },\n\n        createObjectExpression: function (properties) {\n            return {\n                type: Syntax.ObjectExpression,\n                properties: properties\n            };\n        },\n\n        createPostfixExpression: function (operator, argument) {\n            return {\n                type: Syntax.UpdateExpression,\n                operator: operator,\n                argument: argument,\n                prefix: false\n            };\n        },\n\n        createProgram: function (body) {\n            return {\n                type: Syntax.Program,\n                body: body\n            };\n        },\n\n        createProperty: function (kind, key, value) {\n            return {\n                type: Syntax.Property,\n                key: key,\n                value: value,\n                kind: kind\n            };\n        },\n\n        createReturnStatement: function (argument) {\n            return {\n                type: Syntax.ReturnStatement,\n                argument: argument\n            };\n        },\n\n        createSequenceExpression: function (expressions) {\n            return {\n                type: Syntax.SequenceExpression,\n                expressions: expressions\n            };\n        },\n\n        createSwitchCase: function (test, consequent) {\n            return {\n                type: Syntax.SwitchCase,\n                test: test,\n                consequent: consequent\n            };\n        },\n\n        createSwitchStatement: function (discriminant, cases) {\n            return {\n                type: Syntax.SwitchStatement,\n                discriminant: discriminant,\n                cases: cases\n            };\n        },\n\n        createThisExpression: function () {\n            return {\n                type: Syntax.ThisExpression\n            };\n        },\n\n        createThrowStatement: function (argument) {\n            return {\n                type: Syntax.ThrowStatement,\n                argument: argument\n            };\n        },\n\n        createTryStatement: function (block, guardedHandlers, handlers, finalizer) {\n            return {\n                type: Syntax.TryStatement,\n                block: block,\n                guardedHandlers: guardedHandlers,\n                handlers: handlers,\n                finalizer: finalizer\n            };\n        },\n\n        createUnaryExpression: function (operator, argument) {\n            if (operator === '++' || operator === '--') {\n                return {\n                    type: Syntax.UpdateExpression,\n                    operator: operator,\n                    argument: argument,\n                    prefix: true\n                };\n            }\n            return {\n                type: Syntax.UnaryExpression,\n                operator: operator,\n                argument: argument,\n                prefix: true\n            };\n        },\n\n        createVariableDeclaration: function (declarations, kind) {\n            return {\n                type: Syntax.VariableDeclaration,\n                declarations: declarations,\n                kind: kind\n            };\n        },\n\n        createVariableDeclarator: function (id, init) {\n            return {\n                type: Syntax.VariableDeclarator,\n                id: id,\n                init: init\n            };\n        },\n\n        createWhileStatement: function (test, body) {\n            return {\n                type: Syntax.WhileStatement,\n                test: test,\n                body: body\n            };\n        },\n\n        createWithStatement: function (object, body) {\n            return {\n                type: Syntax.WithStatement,\n                object: object,\n                body: body\n            };\n        }\n    };\n\n    // Return true if there is a line terminator before the next token.\n\n    function peekLineTerminator() {\n        var pos, line, start, found;\n\n        pos = index;\n        line = lineNumber;\n        start = lineStart;\n        skipComment();\n        found = lineNumber !== line;\n        index = pos;\n        lineNumber = line;\n        lineStart = start;\n\n        return found;\n    }\n\n    // Throw an exception\n\n    function throwError(token, messageFormat) {\n        var error,\n            args = Array.prototype.slice.call(arguments, 2),\n            msg = messageFormat.replace(\n                /%(\\d)/g,\n                function (whole, index) {\n                    assert(index < args.length, 'Message reference must be in range');\n                    return args[index];\n                }\n            );\n\n        if (typeof token.lineNumber === 'number') {\n            error = new Error('Line ' + token.lineNumber + ': ' + msg);\n            error.index = token.start;\n            error.lineNumber = token.lineNumber;\n            error.column = token.start - lineStart + 1;\n        } else {\n            error = new Error('Line ' + lineNumber + ': ' + msg);\n            error.index = index;\n            error.lineNumber = lineNumber;\n            error.column = index - lineStart + 1;\n        }\n\n        error.description = msg;\n        throw error;\n    }\n\n    function throwErrorTolerant() {\n        try {\n            throwError.apply(null, arguments);\n        } catch (e) {\n            if (extra.errors) {\n                extra.errors.push(e);\n            } else {\n                throw e;\n            }\n        }\n    }\n\n\n    // Throw an exception because of the token.\n\n    function throwUnexpected(token) {\n        if (token.type === Token.EOF) {\n            throwError(token, Messages.UnexpectedEOS);\n        }\n\n        if (token.type === Token.NumericLiteral) {\n            throwError(token, Messages.UnexpectedNumber);\n        }\n\n        if (token.type === Token.StringLiteral) {\n            throwError(token, Messages.UnexpectedString);\n        }\n\n        if (token.type === Token.Identifier) {\n            throwError(token, Messages.UnexpectedIdentifier);\n        }\n\n        if (token.type === Token.Keyword) {\n            if (isFutureReservedWord(token.value)) {\n                throwError(token, Messages.UnexpectedReserved);\n            } else if (strict && isStrictModeReservedWord(token.value)) {\n                throwErrorTolerant(token, Messages.StrictReservedWord);\n                return;\n            }\n            throwError(token, Messages.UnexpectedToken, token.value);\n        }\n\n        // BooleanLiteral, NullLiteral, or Punctuator.\n        throwError(token, Messages.UnexpectedToken, token.value);\n    }\n\n    // Expect the next token to match the specified punctuator.\n    // If not, an exception will be thrown.\n\n    function expect(value) {\n        var token = lex();\n        if (token.type !== Token.Punctuator || token.value !== value) {\n            throwUnexpected(token);\n        }\n    }\n\n    // Expect the next token to match the specified keyword.\n    // If not, an exception will be thrown.\n\n    function expectKeyword(keyword) {\n        var token = lex();\n        if (token.type !== Token.Keyword || token.value !== keyword) {\n            throwUnexpected(token);\n        }\n    }\n\n    // Return true if the next token matches the specified punctuator.\n\n    function match(value) {\n        return lookahead.type === Token.Punctuator && lookahead.value === value;\n    }\n\n    // Return true if the next token matches the specified keyword\n\n    function matchKeyword(keyword) {\n        return lookahead.type === Token.Keyword && lookahead.value === keyword;\n    }\n\n    // Return true if the next token is an assignment operator\n\n    function matchAssign() {\n        var op;\n\n        if (lookahead.type !== Token.Punctuator) {\n            return false;\n        }\n        op = lookahead.value;\n        return op === '=' ||\n            op === '*=' ||\n            op === '/=' ||\n            op === '%=' ||\n            op === '+=' ||\n            op === '-=' ||\n            op === '<<=' ||\n            op === '>>=' ||\n            op === '>>>=' ||\n            op === '&=' ||\n            op === '^=' ||\n            op === '|=';\n    }\n\n    function consumeSemicolon() {\n        var line, oldIndex = index, oldLineNumber = lineNumber,\n            oldLineStart = lineStart, oldLookahead = lookahead;\n\n        // Catch the very common case first: immediately a semicolon (U+003B).\n        if (source.charCodeAt(index) === 0x3B || match(';')) {\n            lex();\n            return;\n        }\n\n        line = lineNumber;\n        skipComment();\n        if (lineNumber !== line) {\n            index = oldIndex;\n            lineNumber = oldLineNumber;\n            lineStart = oldLineStart;\n            lookahead = oldLookahead;\n            return;\n        }\n\n        if (lookahead.type !== Token.EOF && !match('}')) {\n            throwUnexpected(lookahead);\n        }\n    }\n\n    // Return true if provided expression is LeftHandSideExpression\n\n    function isLeftHandSide(expr) {\n        return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n    }\n\n    // 11.1.4 Array Initialiser\n\n    function parseArrayInitialiser() {\n        var elements = [], startToken;\n\n        startToken = lookahead;\n        expect('[');\n\n        while (!match(']')) {\n            if (match(',')) {\n                lex();\n                elements.push(null);\n            } else {\n                elements.push(parseAssignmentExpression());\n\n                if (!match(']')) {\n                    expect(',');\n                }\n            }\n        }\n\n        lex();\n\n        return delegate.markEnd(delegate.createArrayExpression(elements), startToken);\n    }\n\n    // 11.1.5 Object Initialiser\n\n    function parsePropertyFunction(param, first) {\n        var previousStrict, body, startToken;\n\n        previousStrict = strict;\n        startToken = lookahead;\n        body = parseFunctionSourceElements();\n        if (first && strict && isRestrictedWord(param[0].name)) {\n            throwErrorTolerant(first, Messages.StrictParamName);\n        }\n        strict = previousStrict;\n        return delegate.markEnd(delegate.createFunctionExpression(null, param, [], body), startToken);\n    }\n\n    function parseObjectPropertyKey() {\n        var token, startToken;\n\n        startToken = lookahead;\n        token = lex();\n\n        // Note: This function is called only from parseObjectProperty(), where\n        // EOF and Punctuator tokens are already filtered out.\n\n        if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n            if (strict && token.octal) {\n                throwErrorTolerant(token, Messages.StrictOctalLiteral);\n            }\n            return delegate.markEnd(delegate.createLiteral(token), startToken);\n        }\n\n        return delegate.markEnd(delegate.createIdentifier(token.value), startToken);\n    }\n\n    function parseObjectProperty() {\n        var token, key, id, value, param, startToken;\n\n        token = lookahead;\n        startToken = lookahead;\n\n        if (token.type === Token.Identifier) {\n\n            id = parseObjectPropertyKey();\n\n            // Property Assignment: Getter and Setter.\n\n            if (token.value === 'get' && !match(':')) {\n                key = parseObjectPropertyKey();\n                expect('(');\n                expect(')');\n                value = parsePropertyFunction([]);\n                return delegate.markEnd(delegate.createProperty('get', key, value), startToken);\n            }\n            if (token.value === 'set' && !match(':')) {\n                key = parseObjectPropertyKey();\n                expect('(');\n                token = lookahead;\n                if (token.type !== Token.Identifier) {\n                    expect(')');\n                    throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n                    value = parsePropertyFunction([]);\n                } else {\n                    param = [ parseVariableIdentifier() ];\n                    expect(')');\n                    value = parsePropertyFunction(param, token);\n                }\n                return delegate.markEnd(delegate.createProperty('set', key, value), startToken);\n            }\n            expect(':');\n            value = parseAssignmentExpression();\n            return delegate.markEnd(delegate.createProperty('init', id, value), startToken);\n        }\n        if (token.type === Token.EOF || token.type === Token.Punctuator) {\n            throwUnexpected(token);\n        } else {\n            key = parseObjectPropertyKey();\n            expect(':');\n            value = parseAssignmentExpression();\n            return delegate.markEnd(delegate.createProperty('init', key, value), startToken);\n        }\n    }\n\n    function parseObjectInitialiser() {\n        var properties = [], property, name, key, kind, map = {}, toString = String, startToken;\n\n        startToken = lookahead;\n\n        expect('{');\n\n        while (!match('}')) {\n            property = parseObjectProperty();\n\n            if (property.key.type === Syntax.Identifier) {\n                name = property.key.name;\n            } else {\n                name = toString(property.key.value);\n            }\n            kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n            key = '$' + name;\n            if (Object.prototype.hasOwnProperty.call(map, key)) {\n                if (map[key] === PropertyKind.Data) {\n                    if (strict && kind === PropertyKind.Data) {\n                        throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                    } else if (kind !== PropertyKind.Data) {\n                        throwErrorTolerant({}, Messages.AccessorDataProperty);\n                    }\n                } else {\n                    if (kind === PropertyKind.Data) {\n                        throwErrorTolerant({}, Messages.AccessorDataProperty);\n                    } else if (map[key] & kind) {\n                        throwErrorTolerant({}, Messages.AccessorGetSet);\n                    }\n                }\n                map[key] |= kind;\n            } else {\n                map[key] = kind;\n            }\n\n            properties.push(property);\n\n            if (!match('}')) {\n                expect(',');\n            }\n        }\n\n        expect('}');\n\n        return delegate.markEnd(delegate.createObjectExpression(properties), startToken);\n    }\n\n    // 11.1.6 The Grouping Operator\n\n    function parseGroupExpression() {\n        var expr;\n\n        expect('(');\n\n        expr = parseExpression();\n\n        expect(')');\n\n        return expr;\n    }\n\n\n    // 11.1 Primary Expressions\n\n    function parsePrimaryExpression() {\n        var type, token, expr, startToken;\n\n        if (match('(')) {\n            return parseGroupExpression();\n        }\n\n        if (match('[')) {\n            return parseArrayInitialiser();\n        }\n\n        if (match('{')) {\n            return parseObjectInitialiser();\n        }\n\n        type = lookahead.type;\n        startToken = lookahead;\n\n        if (type === Token.Identifier) {\n            expr =  delegate.createIdentifier(lex().value);\n        } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n            if (strict && lookahead.octal) {\n                throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n            }\n            expr = delegate.createLiteral(lex());\n        } else if (type === Token.Keyword) {\n            if (matchKeyword('function')) {\n                return parseFunctionExpression();\n            }\n            if (matchKeyword('this')) {\n                lex();\n                expr = delegate.createThisExpression();\n            } else {\n                throwUnexpected(lex());\n            }\n        } else if (type === Token.BooleanLiteral) {\n            token = lex();\n            token.value = (token.value === 'true');\n            expr = delegate.createLiteral(token);\n        } else if (type === Token.NullLiteral) {\n            token = lex();\n            token.value = null;\n            expr = delegate.createLiteral(token);\n        } else if (match('/') || match('/=')) {\n            if (typeof extra.tokens !== 'undefined') {\n                expr = delegate.createLiteral(collectRegex());\n            } else {\n                expr = delegate.createLiteral(scanRegExp());\n            }\n            peek();\n        } else {\n            throwUnexpected(lex());\n        }\n\n        return delegate.markEnd(expr, startToken);\n    }\n\n    // 11.2 Left-Hand-Side Expressions\n\n    function parseArguments() {\n        var args = [];\n\n        expect('(');\n\n        if (!match(')')) {\n            while (index < length) {\n                args.push(parseAssignmentExpression());\n                if (match(')')) {\n                    break;\n                }\n                expect(',');\n            }\n        }\n\n        expect(')');\n\n        return args;\n    }\n\n    function parseNonComputedProperty() {\n        var token, startToken;\n\n        startToken = lookahead;\n        token = lex();\n\n        if (!isIdentifierName(token)) {\n            throwUnexpected(token);\n        }\n\n        return delegate.markEnd(delegate.createIdentifier(token.value), startToken);\n    }\n\n    function parseNonComputedMember() {\n        expect('.');\n\n        return parseNonComputedProperty();\n    }\n\n    function parseComputedMember() {\n        var expr;\n\n        expect('[');\n\n        expr = parseExpression();\n\n        expect(']');\n\n        return expr;\n    }\n\n    function parseNewExpression() {\n        var callee, args, startToken;\n\n        startToken = lookahead;\n        expectKeyword('new');\n        callee = parseLeftHandSideExpression();\n        args = match('(') ? parseArguments() : [];\n\n        return delegate.markEnd(delegate.createNewExpression(callee, args), startToken);\n    }\n\n    function parseLeftHandSideExpressionAllowCall() {\n        var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n        startToken = lookahead;\n        state.allowIn = true;\n        expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\n\n        for (;;) {\n            if (match('.')) {\n                property = parseNonComputedMember();\n                expr = delegate.createMemberExpression('.', expr, property);\n            } else if (match('(')) {\n                args = parseArguments();\n                expr = delegate.createCallExpression(expr, args);\n            } else if (match('[')) {\n                property = parseComputedMember();\n                expr = delegate.createMemberExpression('[', expr, property);\n            } else {\n                break;\n            }\n            delegate.markEnd(expr, startToken);\n        }\n        state.allowIn = previousAllowIn;\n\n        return expr;\n    }\n\n    function parseLeftHandSideExpression() {\n        var expr, property, startToken;\n        assert(state.allowIn, 'callee of new expression always allow in keyword.');\n\n        startToken = lookahead;\n\n        expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\n\n        while (match('.') || match('[')) {\n            if (match('[')) {\n                property = parseComputedMember();\n                expr = delegate.createMemberExpression('[', expr, property);\n            } else {\n                property = parseNonComputedMember();\n                expr = delegate.createMemberExpression('.', expr, property);\n            }\n            delegate.markEnd(expr, startToken);\n        }\n        return expr;\n    }\n\n    // 11.3 Postfix Expressions\n\n    function parsePostfixExpression() {\n        var expr, token, startToken = lookahead;\n\n        expr = parseLeftHandSideExpressionAllowCall();\n\n        if (lookahead.type === Token.Punctuator) {\n            if ((match('++') || match('--')) && !peekLineTerminator()) {\n                // 11.3.1, 11.3.2\n                if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\n                    throwErrorTolerant({}, Messages.StrictLHSPostfix);\n                }\n\n                if (!isLeftHandSide(expr)) {\n                    throwErrorTolerant({}, Messages.InvalidLHSInAssignment);\n                }\n\n                token = lex();\n                expr = delegate.markEnd(delegate.createPostfixExpression(token.value, expr), startToken);\n            }\n        }\n\n        return expr;\n    }\n\n    // 11.4 Unary Operators\n\n    function parseUnaryExpression() {\n        var token, expr, startToken;\n\n        if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n            expr = parsePostfixExpression();\n        } else if (match('++') || match('--')) {\n            startToken = lookahead;\n            token = lex();\n            expr = parseUnaryExpression();\n            // 11.4.4, 11.4.5\n            if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\n                throwErrorTolerant({}, Messages.StrictLHSPrefix);\n            }\n\n            if (!isLeftHandSide(expr)) {\n                throwErrorTolerant({}, Messages.InvalidLHSInAssignment);\n            }\n\n            expr = delegate.createUnaryExpression(token.value, expr);\n            expr = delegate.markEnd(expr, startToken);\n        } else if (match('+') || match('-') || match('~') || match('!')) {\n            startToken = lookahead;\n            token = lex();\n            expr = parseUnaryExpression();\n            expr = delegate.createUnaryExpression(token.value, expr);\n            expr = delegate.markEnd(expr, startToken);\n        } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n            startToken = lookahead;\n            token = lex();\n            expr = parseUnaryExpression();\n            expr = delegate.createUnaryExpression(token.value, expr);\n            expr = delegate.markEnd(expr, startToken);\n            if (strict && expr.operator === 'delete' && expr.argument.type === Syntax.Identifier) {\n                throwErrorTolerant({}, Messages.StrictDelete);\n            }\n        } else {\n            expr = parsePostfixExpression();\n        }\n\n        return expr;\n    }\n\n    function binaryPrecedence(token, allowIn) {\n        var prec = 0;\n\n        if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n            return 0;\n        }\n\n        switch (token.value) {\n        case '||':\n            prec = 1;\n            break;\n\n        case '&&':\n            prec = 2;\n            break;\n\n        case '|':\n            prec = 3;\n            break;\n\n        case '^':\n            prec = 4;\n            break;\n\n        case '&':\n            prec = 5;\n            break;\n\n        case '==':\n        case '!=':\n        case '===':\n        case '!==':\n            prec = 6;\n            break;\n\n        case '<':\n        case '>':\n        case '<=':\n        case '>=':\n        case 'instanceof':\n            prec = 7;\n            break;\n\n        case 'in':\n            prec = allowIn ? 7 : 0;\n            break;\n\n        case '<<':\n        case '>>':\n        case '>>>':\n            prec = 8;\n            break;\n\n        case '+':\n        case '-':\n            prec = 9;\n            break;\n\n        case '*':\n        case '/':\n        case '%':\n            prec = 11;\n            break;\n\n        default:\n            break;\n        }\n\n        return prec;\n    }\n\n    // 11.5 Multiplicative Operators\n    // 11.6 Additive Operators\n    // 11.7 Bitwise Shift Operators\n    // 11.8 Relational Operators\n    // 11.9 Equality Operators\n    // 11.10 Binary Bitwise Operators\n    // 11.11 Binary Logical Operators\n\n    function parseBinaryExpression() {\n        var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n        marker = lookahead;\n        left = parseUnaryExpression();\n\n        token = lookahead;\n        prec = binaryPrecedence(token, state.allowIn);\n        if (prec === 0) {\n            return left;\n        }\n        token.prec = prec;\n        lex();\n\n        markers = [marker, lookahead];\n        right = parseUnaryExpression();\n\n        stack = [left, token, right];\n\n        while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n            // Reduce: make a binary expression from the three topmost entries.\n            while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n                right = stack.pop();\n                operator = stack.pop().value;\n                left = stack.pop();\n                expr = delegate.createBinaryExpression(operator, left, right);\n                markers.pop();\n                marker = markers[markers.length - 1];\n                delegate.markEnd(expr, marker);\n                stack.push(expr);\n            }\n\n            // Shift.\n            token = lex();\n            token.prec = prec;\n            stack.push(token);\n            markers.push(lookahead);\n            expr = parseUnaryExpression();\n            stack.push(expr);\n        }\n\n        // Final reduce to clean-up the stack.\n        i = stack.length - 1;\n        expr = stack[i];\n        markers.pop();\n        while (i > 1) {\n            expr = delegate.createBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n            i -= 2;\n            marker = markers.pop();\n            delegate.markEnd(expr, marker);\n        }\n\n        return expr;\n    }\n\n\n    // 11.12 Conditional Operator\n\n    function parseConditionalExpression() {\n        var expr, previousAllowIn, consequent, alternate, startToken;\n\n        startToken = lookahead;\n\n        expr = parseBinaryExpression();\n\n        if (match('?')) {\n            lex();\n            previousAllowIn = state.allowIn;\n            state.allowIn = true;\n            consequent = parseAssignmentExpression();\n            state.allowIn = previousAllowIn;\n            expect(':');\n            alternate = parseAssignmentExpression();\n\n            expr = delegate.createConditionalExpression(expr, consequent, alternate);\n            delegate.markEnd(expr, startToken);\n        }\n\n        return expr;\n    }\n\n    // 11.13 Assignment Operators\n\n    function parseAssignmentExpression() {\n        var token, left, right, node, startToken;\n\n        token = lookahead;\n        startToken = lookahead;\n\n        node = left = parseConditionalExpression();\n\n        if (matchAssign()) {\n            // LeftHandSideExpression\n            if (!isLeftHandSide(left)) {\n                throwErrorTolerant({}, Messages.InvalidLHSInAssignment);\n            }\n\n            // 11.13.1\n            if (strict && left.type === Syntax.Identifier && isRestrictedWord(left.name)) {\n                throwErrorTolerant(token, Messages.StrictLHSAssignment);\n            }\n\n            token = lex();\n            right = parseAssignmentExpression();\n            node = delegate.markEnd(delegate.createAssignmentExpression(token.value, left, right), startToken);\n        }\n\n        return node;\n    }\n\n    // 11.14 Comma Operator\n\n    function parseExpression() {\n        var expr, startToken = lookahead;\n\n        expr = parseAssignmentExpression();\n\n        if (match(',')) {\n            expr = delegate.createSequenceExpression([ expr ]);\n\n            while (index < length) {\n                if (!match(',')) {\n                    break;\n                }\n                lex();\n                expr.expressions.push(parseAssignmentExpression());\n            }\n\n            delegate.markEnd(expr, startToken);\n        }\n\n        return expr;\n    }\n\n    // 12.1 Block\n\n    function parseStatementList() {\n        var list = [],\n            statement;\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            statement = parseSourceElement();\n            if (typeof statement === 'undefined') {\n                break;\n            }\n            list.push(statement);\n        }\n\n        return list;\n    }\n\n    function parseBlock() {\n        var block, startToken;\n\n        startToken = lookahead;\n        expect('{');\n\n        block = parseStatementList();\n\n        expect('}');\n\n        return delegate.markEnd(delegate.createBlockStatement(block), startToken);\n    }\n\n    // 12.2 Variable Statement\n\n    function parseVariableIdentifier() {\n        var token, startToken;\n\n        startToken = lookahead;\n        token = lex();\n\n        if (token.type !== Token.Identifier) {\n            throwUnexpected(token);\n        }\n\n        return delegate.markEnd(delegate.createIdentifier(token.value), startToken);\n    }\n\n    function parseVariableDeclaration(kind) {\n        var init = null, id, startToken;\n\n        startToken = lookahead;\n        id = parseVariableIdentifier();\n\n        // 12.2.1\n        if (strict && isRestrictedWord(id.name)) {\n            throwErrorTolerant({}, Messages.StrictVarName);\n        }\n\n        if (kind === 'const') {\n            expect('=');\n            init = parseAssignmentExpression();\n        } else if (match('=')) {\n            lex();\n            init = parseAssignmentExpression();\n        }\n\n        return delegate.markEnd(delegate.createVariableDeclarator(id, init), startToken);\n    }\n\n    function parseVariableDeclarationList(kind) {\n        var list = [];\n\n        do {\n            list.push(parseVariableDeclaration(kind));\n            if (!match(',')) {\n                break;\n            }\n            lex();\n        } while (index < length);\n\n        return list;\n    }\n\n    function parseVariableStatement() {\n        var declarations;\n\n        expectKeyword('var');\n\n        declarations = parseVariableDeclarationList();\n\n        consumeSemicolon();\n\n        return delegate.createVariableDeclaration(declarations, 'var');\n    }\n\n    // kind may be `const` or `let`\n    // Both are experimental and not in the specification yet.\n    // see http://wiki.ecmascript.org/doku.php?id=harmony:const\n    // and http://wiki.ecmascript.org/doku.php?id=harmony:let\n    function parseConstLetDeclaration(kind) {\n        var declarations, startToken;\n\n        startToken = lookahead;\n\n        expectKeyword(kind);\n\n        declarations = parseVariableDeclarationList(kind);\n\n        consumeSemicolon();\n\n        return delegate.markEnd(delegate.createVariableDeclaration(declarations, kind), startToken);\n    }\n\n    // 12.3 Empty Statement\n\n    function parseEmptyStatement() {\n        expect(';');\n        return delegate.createEmptyStatement();\n    }\n\n    // 12.4 Expression Statement\n\n    function parseExpressionStatement() {\n        var expr = parseExpression();\n        consumeSemicolon();\n        return delegate.createExpressionStatement(expr);\n    }\n\n    // 12.5 If statement\n\n    function parseIfStatement() {\n        var test, consequent, alternate;\n\n        expectKeyword('if');\n\n        expect('(');\n\n        test = parseExpression();\n\n        expect(')');\n\n        consequent = parseStatement();\n\n        if (matchKeyword('else')) {\n            lex();\n            alternate = parseStatement();\n        } else {\n            alternate = null;\n        }\n\n        return delegate.createIfStatement(test, consequent, alternate);\n    }\n\n    // 12.6 Iteration Statements\n\n    function parseDoWhileStatement() {\n        var body, test, oldInIteration;\n\n        expectKeyword('do');\n\n        oldInIteration = state.inIteration;\n        state.inIteration = true;\n\n        body = parseStatement();\n\n        state.inIteration = oldInIteration;\n\n        expectKeyword('while');\n\n        expect('(');\n\n        test = parseExpression();\n\n        expect(')');\n\n        if (match(';')) {\n            lex();\n        }\n\n        return delegate.createDoWhileStatement(body, test);\n    }\n\n    function parseWhileStatement() {\n        var test, body, oldInIteration;\n\n        expectKeyword('while');\n\n        expect('(');\n\n        test = parseExpression();\n\n        expect(')');\n\n        oldInIteration = state.inIteration;\n        state.inIteration = true;\n\n        body = parseStatement();\n\n        state.inIteration = oldInIteration;\n\n        return delegate.createWhileStatement(test, body);\n    }\n\n    function parseForVariableDeclaration() {\n        var token, declarations, startToken;\n\n        startToken = lookahead;\n        token = lex();\n        declarations = parseVariableDeclarationList();\n\n        return delegate.markEnd(delegate.createVariableDeclaration(declarations, token.value), startToken);\n    }\n\n    function parseForStatement() {\n        var init, test, update, left, right, body, oldInIteration, previousAllowIn = state.allowIn;\n\n        init = test = update = null;\n\n        expectKeyword('for');\n\n        expect('(');\n\n        if (match(';')) {\n            lex();\n        } else {\n            if (matchKeyword('var') || matchKeyword('let')) {\n                state.allowIn = false;\n                init = parseForVariableDeclaration();\n                state.allowIn = previousAllowIn;\n\n                if (init.declarations.length === 1 && matchKeyword('in')) {\n                    lex();\n                    left = init;\n                    right = parseExpression();\n                    init = null;\n                }\n            } else {\n                state.allowIn = false;\n                init = parseExpression();\n                state.allowIn = previousAllowIn;\n\n                if (matchKeyword('in')) {\n                    // LeftHandSideExpression\n                    if (!isLeftHandSide(init)) {\n                        throwErrorTolerant({}, Messages.InvalidLHSInForIn);\n                    }\n\n                    lex();\n                    left = init;\n                    right = parseExpression();\n                    init = null;\n                }\n            }\n\n            if (typeof left === 'undefined') {\n                expect(';');\n            }\n        }\n\n        if (typeof left === 'undefined') {\n\n            if (!match(';')) {\n                test = parseExpression();\n            }\n            expect(';');\n\n            if (!match(')')) {\n                update = parseExpression();\n            }\n        }\n\n        expect(')');\n\n        oldInIteration = state.inIteration;\n        state.inIteration = true;\n\n        body = parseStatement();\n\n        state.inIteration = oldInIteration;\n\n        return (typeof left === 'undefined') ?\n                delegate.createForStatement(init, test, update, body) :\n                delegate.createForInStatement(left, right, body);\n    }\n\n    // 12.7 The continue statement\n\n    function parseContinueStatement() {\n        var label = null, key;\n\n        expectKeyword('continue');\n\n        // Optimize the most common form: 'continue;'.\n        if (source.charCodeAt(index) === 0x3B) {\n            lex();\n\n            if (!state.inIteration) {\n                throwError({}, Messages.IllegalContinue);\n            }\n\n            return delegate.createContinueStatement(null);\n        }\n\n        if (peekLineTerminator()) {\n            if (!state.inIteration) {\n                throwError({}, Messages.IllegalContinue);\n            }\n\n            return delegate.createContinueStatement(null);\n        }\n\n        if (lookahead.type === Token.Identifier) {\n            label = parseVariableIdentifier();\n\n            key = '$' + label.name;\n            if (!Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\n                throwError({}, Messages.UnknownLabel, label.name);\n            }\n        }\n\n        consumeSemicolon();\n\n        if (label === null && !state.inIteration) {\n            throwError({}, Messages.IllegalContinue);\n        }\n\n        return delegate.createContinueStatement(label);\n    }\n\n    // 12.8 The break statement\n\n    function parseBreakStatement() {\n        var label = null, key;\n\n        expectKeyword('break');\n\n        // Catch the very common case first: immediately a semicolon (U+003B).\n        if (source.charCodeAt(index) === 0x3B) {\n            lex();\n\n            if (!(state.inIteration || state.inSwitch)) {\n                throwError({}, Messages.IllegalBreak);\n            }\n\n            return delegate.createBreakStatement(null);\n        }\n\n        if (peekLineTerminator()) {\n            if (!(state.inIteration || state.inSwitch)) {\n                throwError({}, Messages.IllegalBreak);\n            }\n\n            return delegate.createBreakStatement(null);\n        }\n\n        if (lookahead.type === Token.Identifier) {\n            label = parseVariableIdentifier();\n\n            key = '$' + label.name;\n            if (!Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\n                throwError({}, Messages.UnknownLabel, label.name);\n            }\n        }\n\n        consumeSemicolon();\n\n        if (label === null && !(state.inIteration || state.inSwitch)) {\n            throwError({}, Messages.IllegalBreak);\n        }\n\n        return delegate.createBreakStatement(label);\n    }\n\n    // 12.9 The return statement\n\n    function parseReturnStatement() {\n        var argument = null;\n\n        expectKeyword('return');\n\n        if (!state.inFunctionBody) {\n            throwErrorTolerant({}, Messages.IllegalReturn);\n        }\n\n        // 'return' followed by a space and an identifier is very common.\n        if (source.charCodeAt(index) === 0x20) {\n            if (isIdentifierStart(source.charCodeAt(index + 1))) {\n                argument = parseExpression();\n                consumeSemicolon();\n                return delegate.createReturnStatement(argument);\n            }\n        }\n\n        if (peekLineTerminator()) {\n            return delegate.createReturnStatement(null);\n        }\n\n        if (!match(';')) {\n            if (!match('}') && lookahead.type !== Token.EOF) {\n                argument = parseExpression();\n            }\n        }\n\n        consumeSemicolon();\n\n        return delegate.createReturnStatement(argument);\n    }\n\n    // 12.10 The with statement\n\n    function parseWithStatement() {\n        var object, body;\n\n        if (strict) {\n            // TODO(ikarienator): Should we update the test cases instead?\n            skipComment();\n            throwErrorTolerant({}, Messages.StrictModeWith);\n        }\n\n        expectKeyword('with');\n\n        expect('(');\n\n        object = parseExpression();\n\n        expect(')');\n\n        body = parseStatement();\n\n        return delegate.createWithStatement(object, body);\n    }\n\n    // 12.10 The swith statement\n\n    function parseSwitchCase() {\n        var test, consequent = [], statement, startToken;\n\n        startToken = lookahead;\n        if (matchKeyword('default')) {\n            lex();\n            test = null;\n        } else {\n            expectKeyword('case');\n            test = parseExpression();\n        }\n        expect(':');\n\n        while (index < length) {\n            if (match('}') || matchKeyword('default') || matchKeyword('case')) {\n                break;\n            }\n            statement = parseStatement();\n            consequent.push(statement);\n        }\n\n        return delegate.markEnd(delegate.createSwitchCase(test, consequent), startToken);\n    }\n\n    function parseSwitchStatement() {\n        var discriminant, cases, clause, oldInSwitch, defaultFound;\n\n        expectKeyword('switch');\n\n        expect('(');\n\n        discriminant = parseExpression();\n\n        expect(')');\n\n        expect('{');\n\n        cases = [];\n\n        if (match('}')) {\n            lex();\n            return delegate.createSwitchStatement(discriminant, cases);\n        }\n\n        oldInSwitch = state.inSwitch;\n        state.inSwitch = true;\n        defaultFound = false;\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            clause = parseSwitchCase();\n            if (clause.test === null) {\n                if (defaultFound) {\n                    throwError({}, Messages.MultipleDefaultsInSwitch);\n                }\n                defaultFound = true;\n            }\n            cases.push(clause);\n        }\n\n        state.inSwitch = oldInSwitch;\n\n        expect('}');\n\n        return delegate.createSwitchStatement(discriminant, cases);\n    }\n\n    // 12.13 The throw statement\n\n    function parseThrowStatement() {\n        var argument;\n\n        expectKeyword('throw');\n\n        if (peekLineTerminator()) {\n            throwError({}, Messages.NewlineAfterThrow);\n        }\n\n        argument = parseExpression();\n\n        consumeSemicolon();\n\n        return delegate.createThrowStatement(argument);\n    }\n\n    // 12.14 The try statement\n\n    function parseCatchClause() {\n        var param, body, startToken;\n\n        startToken = lookahead;\n        expectKeyword('catch');\n\n        expect('(');\n        if (match(')')) {\n            throwUnexpected(lookahead);\n        }\n\n        param = parseVariableIdentifier();\n        // 12.14.1\n        if (strict && isRestrictedWord(param.name)) {\n            throwErrorTolerant({}, Messages.StrictCatchVariable);\n        }\n\n        expect(')');\n        body = parseBlock();\n        return delegate.markEnd(delegate.createCatchClause(param, body), startToken);\n    }\n\n    function parseTryStatement() {\n        var block, handlers = [], finalizer = null;\n\n        expectKeyword('try');\n\n        block = parseBlock();\n\n        if (matchKeyword('catch')) {\n            handlers.push(parseCatchClause());\n        }\n\n        if (matchKeyword('finally')) {\n            lex();\n            finalizer = parseBlock();\n        }\n\n        if (handlers.length === 0 && !finalizer) {\n            throwError({}, Messages.NoCatchOrFinally);\n        }\n\n        return delegate.createTryStatement(block, [], handlers, finalizer);\n    }\n\n    // 12.15 The debugger statement\n\n    function parseDebuggerStatement() {\n        expectKeyword('debugger');\n\n        consumeSemicolon();\n\n        return delegate.createDebuggerStatement();\n    }\n\n    // 12 Statements\n\n    function parseStatement() {\n        var type = lookahead.type,\n            expr,\n            labeledBody,\n            key,\n            startToken;\n\n        if (type === Token.EOF) {\n            throwUnexpected(lookahead);\n        }\n\n        if (type === Token.Punctuator && lookahead.value === '{') {\n            return parseBlock();\n        }\n\n        startToken = lookahead;\n\n        if (type === Token.Punctuator) {\n            switch (lookahead.value) {\n            case ';':\n                return delegate.markEnd(parseEmptyStatement(), startToken);\n            case '(':\n                return delegate.markEnd(parseExpressionStatement(), startToken);\n            default:\n                break;\n            }\n        }\n\n        if (type === Token.Keyword) {\n            switch (lookahead.value) {\n            case 'break':\n                return delegate.markEnd(parseBreakStatement(), startToken);\n            case 'continue':\n                return delegate.markEnd(parseContinueStatement(), startToken);\n            case 'debugger':\n                return delegate.markEnd(parseDebuggerStatement(), startToken);\n            case 'do':\n                return delegate.markEnd(parseDoWhileStatement(), startToken);\n            case 'for':\n                return delegate.markEnd(parseForStatement(), startToken);\n            case 'function':\n                return delegate.markEnd(parseFunctionDeclaration(), startToken);\n            case 'if':\n                return delegate.markEnd(parseIfStatement(), startToken);\n            case 'return':\n                return delegate.markEnd(parseReturnStatement(), startToken);\n            case 'switch':\n                return delegate.markEnd(parseSwitchStatement(), startToken);\n            case 'throw':\n                return delegate.markEnd(parseThrowStatement(), startToken);\n            case 'try':\n                return delegate.markEnd(parseTryStatement(), startToken);\n            case 'var':\n                return delegate.markEnd(parseVariableStatement(), startToken);\n            case 'while':\n                return delegate.markEnd(parseWhileStatement(), startToken);\n            case 'with':\n                return delegate.markEnd(parseWithStatement(), startToken);\n            default:\n                break;\n            }\n        }\n\n        expr = parseExpression();\n\n        // 12.12 Labelled Statements\n        if ((expr.type === Syntax.Identifier) && match(':')) {\n            lex();\n\n            key = '$' + expr.name;\n            if (Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\n                throwError({}, Messages.Redeclaration, 'Label', expr.name);\n            }\n\n            state.labelSet[key] = true;\n            labeledBody = parseStatement();\n            delete state.labelSet[key];\n            return delegate.markEnd(delegate.createLabeledStatement(expr, labeledBody), startToken);\n        }\n\n        consumeSemicolon();\n\n        return delegate.markEnd(delegate.createExpressionStatement(expr), startToken);\n    }\n\n    // 13 Function Definition\n\n    function parseFunctionSourceElements() {\n        var sourceElement, sourceElements = [], token, directive, firstRestricted,\n            oldLabelSet, oldInIteration, oldInSwitch, oldInFunctionBody, startToken;\n\n        startToken = lookahead;\n        expect('{');\n\n        while (index < length) {\n            if (lookahead.type !== Token.StringLiteral) {\n                break;\n            }\n            token = lookahead;\n\n            sourceElement = parseSourceElement();\n            sourceElements.push(sourceElement);\n            if (sourceElement.expression.type !== Syntax.Literal) {\n                // this is not directive\n                break;\n            }\n            directive = source.slice(token.start + 1, token.end - 1);\n            if (directive === 'use strict') {\n                strict = true;\n                if (firstRestricted) {\n                    throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n                }\n            } else {\n                if (!firstRestricted && token.octal) {\n                    firstRestricted = token;\n                }\n            }\n        }\n\n        oldLabelSet = state.labelSet;\n        oldInIteration = state.inIteration;\n        oldInSwitch = state.inSwitch;\n        oldInFunctionBody = state.inFunctionBody;\n\n        state.labelSet = {};\n        state.inIteration = false;\n        state.inSwitch = false;\n        state.inFunctionBody = true;\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            sourceElement = parseSourceElement();\n            if (typeof sourceElement === 'undefined') {\n                break;\n            }\n            sourceElements.push(sourceElement);\n        }\n\n        expect('}');\n\n        state.labelSet = oldLabelSet;\n        state.inIteration = oldInIteration;\n        state.inSwitch = oldInSwitch;\n        state.inFunctionBody = oldInFunctionBody;\n\n        return delegate.markEnd(delegate.createBlockStatement(sourceElements), startToken);\n    }\n\n    function parseParams(firstRestricted) {\n        var param, params = [], token, stricted, paramSet, key, message;\n        expect('(');\n\n        if (!match(')')) {\n            paramSet = {};\n            while (index < length) {\n                token = lookahead;\n                param = parseVariableIdentifier();\n                key = '$' + token.value;\n                if (strict) {\n                    if (isRestrictedWord(token.value)) {\n                        stricted = token;\n                        message = Messages.StrictParamName;\n                    }\n                    if (Object.prototype.hasOwnProperty.call(paramSet, key)) {\n                        stricted = token;\n                        message = Messages.StrictParamDupe;\n                    }\n                } else if (!firstRestricted) {\n                    if (isRestrictedWord(token.value)) {\n                        firstRestricted = token;\n                        message = Messages.StrictParamName;\n                    } else if (isStrictModeReservedWord(token.value)) {\n                        firstRestricted = token;\n                        message = Messages.StrictReservedWord;\n                    } else if (Object.prototype.hasOwnProperty.call(paramSet, key)) {\n                        firstRestricted = token;\n                        message = Messages.StrictParamDupe;\n                    }\n                }\n                params.push(param);\n                paramSet[key] = true;\n                if (match(')')) {\n                    break;\n                }\n                expect(',');\n            }\n        }\n\n        expect(')');\n\n        return {\n            params: params,\n            stricted: stricted,\n            firstRestricted: firstRestricted,\n            message: message\n        };\n    }\n\n    function parseFunctionDeclaration() {\n        var id, params = [], body, token, stricted, tmp, firstRestricted, message, previousStrict, startToken;\n\n        startToken = lookahead;\n\n        expectKeyword('function');\n        token = lookahead;\n        id = parseVariableIdentifier();\n        if (strict) {\n            if (isRestrictedWord(token.value)) {\n                throwErrorTolerant(token, Messages.StrictFunctionName);\n            }\n        } else {\n            if (isRestrictedWord(token.value)) {\n                firstRestricted = token;\n                message = Messages.StrictFunctionName;\n            } else if (isStrictModeReservedWord(token.value)) {\n                firstRestricted = token;\n                message = Messages.StrictReservedWord;\n            }\n        }\n\n        tmp = parseParams(firstRestricted);\n        params = tmp.params;\n        stricted = tmp.stricted;\n        firstRestricted = tmp.firstRestricted;\n        if (tmp.message) {\n            message = tmp.message;\n        }\n\n        previousStrict = strict;\n        body = parseFunctionSourceElements();\n        if (strict && firstRestricted) {\n            throwError(firstRestricted, message);\n        }\n        if (strict && stricted) {\n            throwErrorTolerant(stricted, message);\n        }\n        strict = previousStrict;\n\n        return delegate.markEnd(delegate.createFunctionDeclaration(id, params, [], body), startToken);\n    }\n\n    function parseFunctionExpression() {\n        var token, id = null, stricted, firstRestricted, message, tmp, params = [], body, previousStrict, startToken;\n\n        startToken = lookahead;\n        expectKeyword('function');\n\n        if (!match('(')) {\n            token = lookahead;\n            id = parseVariableIdentifier();\n            if (strict) {\n                if (isRestrictedWord(token.value)) {\n                    throwErrorTolerant(token, Messages.StrictFunctionName);\n                }\n            } else {\n                if (isRestrictedWord(token.value)) {\n                    firstRestricted = token;\n                    message = Messages.StrictFunctionName;\n                } else if (isStrictModeReservedWord(token.value)) {\n                    firstRestricted = token;\n                    message = Messages.StrictReservedWord;\n                }\n            }\n        }\n\n        tmp = parseParams(firstRestricted);\n        params = tmp.params;\n        stricted = tmp.stricted;\n        firstRestricted = tmp.firstRestricted;\n        if (tmp.message) {\n            message = tmp.message;\n        }\n\n        previousStrict = strict;\n        body = parseFunctionSourceElements();\n        if (strict && firstRestricted) {\n            throwError(firstRestricted, message);\n        }\n        if (strict && stricted) {\n            throwErrorTolerant(stricted, message);\n        }\n        strict = previousStrict;\n\n        return delegate.markEnd(delegate.createFunctionExpression(id, params, [], body), startToken);\n    }\n\n    // 14 Program\n\n    function parseSourceElement() {\n        if (lookahead.type === Token.Keyword) {\n            switch (lookahead.value) {\n            case 'const':\n            case 'let':\n                return parseConstLetDeclaration(lookahead.value);\n            case 'function':\n                return parseFunctionDeclaration();\n            default:\n                return parseStatement();\n            }\n        }\n\n        if (lookahead.type !== Token.EOF) {\n            return parseStatement();\n        }\n    }\n\n    function parseSourceElements() {\n        var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n        while (index < length) {\n            token = lookahead;\n            if (token.type !== Token.StringLiteral) {\n                break;\n            }\n\n            sourceElement = parseSourceElement();\n            sourceElements.push(sourceElement);\n            if (sourceElement.expression.type !== Syntax.Literal) {\n                // this is not directive\n                break;\n            }\n            directive = source.slice(token.start + 1, token.end - 1);\n            if (directive === 'use strict') {\n                strict = true;\n                if (firstRestricted) {\n                    throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n                }\n            } else {\n                if (!firstRestricted && token.octal) {\n                    firstRestricted = token;\n                }\n            }\n        }\n\n        while (index < length) {\n            sourceElement = parseSourceElement();\n            /* istanbul ignore if */\n            if (typeof sourceElement === 'undefined') {\n                break;\n            }\n            sourceElements.push(sourceElement);\n        }\n        return sourceElements;\n    }\n\n    function parseProgram() {\n        var body, startToken;\n\n        skipComment();\n        peek();\n        startToken = lookahead;\n        strict = false;\n\n        body = parseSourceElements();\n        return delegate.markEnd(delegate.createProgram(body), startToken);\n    }\n\n    function filterTokenLocation() {\n        var i, entry, token, tokens = [];\n\n        for (i = 0; i < extra.tokens.length; ++i) {\n            entry = extra.tokens[i];\n            token = {\n                type: entry.type,\n                value: entry.value\n            };\n            if (extra.range) {\n                token.range = entry.range;\n            }\n            if (extra.loc) {\n                token.loc = entry.loc;\n            }\n            tokens.push(token);\n        }\n\n        extra.tokens = tokens;\n    }\n\n    function tokenize(code, options) {\n        var toString,\n            token,\n            tokens;\n\n        toString = String;\n        if (typeof code !== 'string' && !(code instanceof String)) {\n            code = toString(code);\n        }\n\n        delegate = SyntaxTreeDelegate;\n        source = code;\n        index = 0;\n        lineNumber = (source.length > 0) ? 1 : 0;\n        lineStart = 0;\n        length = source.length;\n        lookahead = null;\n        state = {\n            allowIn: true,\n            labelSet: {},\n            inFunctionBody: false,\n            inIteration: false,\n            inSwitch: false,\n            lastCommentStart: -1\n        };\n\n        extra = {};\n\n        // Options matching.\n        options = options || {};\n\n        // Of course we collect tokens here.\n        options.tokens = true;\n        extra.tokens = [];\n        extra.tokenize = true;\n        // The following two fields are necessary to compute the Regex tokens.\n        extra.openParenToken = -1;\n        extra.openCurlyToken = -1;\n\n        extra.range = (typeof options.range === 'boolean') && options.range;\n        extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n        if (typeof options.comment === 'boolean' && options.comment) {\n            extra.comments = [];\n        }\n        if (typeof options.tolerant === 'boolean' && options.tolerant) {\n            extra.errors = [];\n        }\n\n        try {\n            peek();\n            if (lookahead.type === Token.EOF) {\n                return extra.tokens;\n            }\n\n            token = lex();\n            while (lookahead.type !== Token.EOF) {\n                try {\n                    token = lex();\n                } catch (lexError) {\n                    token = lookahead;\n                    if (extra.errors) {\n                        extra.errors.push(lexError);\n                        // We have to break on the first error\n                        // to avoid infinite loops.\n                        break;\n                    } else {\n                        throw lexError;\n                    }\n                }\n            }\n\n            filterTokenLocation();\n            tokens = extra.tokens;\n            if (typeof extra.comments !== 'undefined') {\n                tokens.comments = extra.comments;\n            }\n            if (typeof extra.errors !== 'undefined') {\n                tokens.errors = extra.errors;\n            }\n        } catch (e) {\n            throw e;\n        } finally {\n            extra = {};\n        }\n        return tokens;\n    }\n\n    function parse(code, options) {\n        var program, toString;\n\n        toString = String;\n        if (typeof code !== 'string' && !(code instanceof String)) {\n            code = toString(code);\n        }\n\n        delegate = SyntaxTreeDelegate;\n        source = code;\n        index = 0;\n        lineNumber = (source.length > 0) ? 1 : 0;\n        lineStart = 0;\n        length = source.length;\n        lookahead = null;\n        state = {\n            allowIn: true,\n            labelSet: {},\n            inFunctionBody: false,\n            inIteration: false,\n            inSwitch: false,\n            lastCommentStart: -1\n        };\n\n        extra = {};\n        if (typeof options !== 'undefined') {\n            extra.range = (typeof options.range === 'boolean') && options.range;\n            extra.loc = (typeof options.loc === 'boolean') && options.loc;\n            extra.attachComment = (typeof options.attachComment === 'boolean') && options.attachComment;\n\n            if (extra.loc && options.source !== null && options.source !== undefined) {\n                extra.source = toString(options.source);\n            }\n\n            if (typeof options.tokens === 'boolean' && options.tokens) {\n                extra.tokens = [];\n            }\n            if (typeof options.comment === 'boolean' && options.comment) {\n                extra.comments = [];\n            }\n            if (typeof options.tolerant === 'boolean' && options.tolerant) {\n                extra.errors = [];\n            }\n            if (extra.attachComment) {\n                extra.range = true;\n                extra.comments = [];\n                extra.bottomRightStack = [];\n                extra.trailingComments = [];\n                extra.leadingComments = [];\n            }\n        }\n\n        try {\n            program = parseProgram();\n            if (typeof extra.comments !== 'undefined') {\n                program.comments = extra.comments;\n            }\n            if (typeof extra.tokens !== 'undefined') {\n                filterTokenLocation();\n                program.tokens = extra.tokens;\n            }\n            if (typeof extra.errors !== 'undefined') {\n                program.errors = extra.errors;\n            }\n        } catch (e) {\n            throw e;\n        } finally {\n            extra = {};\n        }\n\n        return program;\n    }\n\n    // Sync with *.json manifests.\n    exports.version = '1.2.5';\n\n    exports.tokenize = tokenize;\n\n    exports.parse = parse;\n\n    // Deep copy.\n   /* istanbul ignore next */\n    exports.Syntax = (function () {\n        var name, types = {};\n\n        if (typeof Object.create === 'function') {\n            types = Object.create(null);\n        }\n\n        for (name in Syntax) {\n            if (Syntax.hasOwnProperty(name)) {\n                types[name] = Syntax[name];\n            }\n        }\n\n        if (typeof Object.freeze === 'function') {\n            Object.freeze(types);\n        }\n\n        return types;\n    }());\n\n}));\n/* vim: set sw=4 ts=4 et tw=80 : */\n"},"lineCount":3773}},"hash":"042d5619612e59527783b994004dd6c6","cacheData":{"env":{}}}