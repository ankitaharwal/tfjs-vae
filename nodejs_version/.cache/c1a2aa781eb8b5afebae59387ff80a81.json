{"dependencies":[{"name":"C:\\Users\\qison\\package.json","includedInParent":true,"mtime":1526331035212},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\robust-linear-solve\\package.json","includedInParent":true,"mtime":1399566615000},{"name":"robust-determinant","loc":{"line":3,"column":26}}],"generated":{"js":"\"use strict\"\n\nvar determinant = require(\"robust-determinant\")\n\nvar NUM_EXPAND = 6\n\nfunction generateSolver(n) {\n  var funcName = \"robustLinearSolve\" + n + \"d\"\n  var code = [\"function \", funcName, \"(A,b){return [\"]\n  for(var i=0; i<n; ++i) {\n    code.push(\"det([\")\n    for(var j=0; j<n; ++j) {\n      if(j > 0) {\n        code.push(\",\")\n      }\n      code.push(\"[\")\n      for(var k=0; k<n; ++k) {\n        if(k > 0) {\n          code.push(\",\")\n        }\n        if(k === i) {\n          code.push(\"+b[\", j, \"]\")\n        } else {\n          code.push(\"+A[\", j, \"][\", k, \"]\")\n        }\n      }\n      code.push(\"]\")\n    }\n    code.push(\"]),\")\n  }\n  code.push(\"det(A)]}return \", funcName)\n  var proc = new Function(\"det\", code.join(\"\"))\n  if(n < 6) {\n    return proc(determinant[n])\n  }\n  return proc(determinant)\n}\n\nfunction robustLinearSolve0d() {\n  return [ 0 ]\n}\n\nfunction robustLinearSolve1d(A, b) {\n  return [ [ b[0] ], [ A[0][0] ] ]\n}\n\nvar CACHE = [\n  robustLinearSolve0d,\n  robustLinearSolve1d\n]\n\nfunction generateDispatch() {\n  while(CACHE.length < NUM_EXPAND) {\n    CACHE.push(generateSolver(CACHE.length))\n  }\n  var procArgs = []\n  var code = [\"function dispatchLinearSolve(A,b){switch(A.length){\"]\n  for(var i=0; i<NUM_EXPAND; ++i) {\n    procArgs.push(\"s\" + i)\n    code.push(\"case \", i, \":return s\", i, \"(A,b);\")\n  }\n  code.push(\"}var s=CACHE[A.length];if(!s)s=CACHE[A.length]=g(A.length);return s(A,b)}return dispatchLinearSolve\")\n  procArgs.push(\"CACHE\", \"g\", code.join(\"\"))\n  var proc = Function.apply(undefined, procArgs)\n  module.exports = proc.apply(undefined, CACHE.concat([CACHE, generateSolver]))\n  for(var i=0; i<NUM_EXPAND; ++i) {\n    module.exports[i] = CACHE[i]\n  }\n}\n\ngenerateDispatch()","map":{"mappings":[{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}}],"sources":{"nodejs_version\\node_modules\\robust-linear-solve\\linsolve.js":"\"use strict\"\n\nvar determinant = require(\"robust-determinant\")\n\nvar NUM_EXPAND = 6\n\nfunction generateSolver(n) {\n  var funcName = \"robustLinearSolve\" + n + \"d\"\n  var code = [\"function \", funcName, \"(A,b){return [\"]\n  for(var i=0; i<n; ++i) {\n    code.push(\"det([\")\n    for(var j=0; j<n; ++j) {\n      if(j > 0) {\n        code.push(\",\")\n      }\n      code.push(\"[\")\n      for(var k=0; k<n; ++k) {\n        if(k > 0) {\n          code.push(\",\")\n        }\n        if(k === i) {\n          code.push(\"+b[\", j, \"]\")\n        } else {\n          code.push(\"+A[\", j, \"][\", k, \"]\")\n        }\n      }\n      code.push(\"]\")\n    }\n    code.push(\"]),\")\n  }\n  code.push(\"det(A)]}return \", funcName)\n  var proc = new Function(\"det\", code.join(\"\"))\n  if(n < 6) {\n    return proc(determinant[n])\n  }\n  return proc(determinant)\n}\n\nfunction robustLinearSolve0d() {\n  return [ 0 ]\n}\n\nfunction robustLinearSolve1d(A, b) {\n  return [ [ b[0] ], [ A[0][0] ] ]\n}\n\nvar CACHE = [\n  robustLinearSolve0d,\n  robustLinearSolve1d\n]\n\nfunction generateDispatch() {\n  while(CACHE.length < NUM_EXPAND) {\n    CACHE.push(generateSolver(CACHE.length))\n  }\n  var procArgs = []\n  var code = [\"function dispatchLinearSolve(A,b){switch(A.length){\"]\n  for(var i=0; i<NUM_EXPAND; ++i) {\n    procArgs.push(\"s\" + i)\n    code.push(\"case \", i, \":return s\", i, \"(A,b);\")\n  }\n  code.push(\"}var s=CACHE[A.length];if(!s)s=CACHE[A.length]=g(A.length);return s(A,b)}return dispatchLinearSolve\")\n  procArgs.push(\"CACHE\", \"g\", code.join(\"\"))\n  var proc = Function.apply(undefined, procArgs)\n  module.exports = proc.apply(undefined, CACHE.concat([CACHE, generateSolver]))\n  for(var i=0; i<NUM_EXPAND; ++i) {\n    module.exports[i] = CACHE[i]\n  }\n}\n\ngenerateDispatch()"},"lineCount":71}},"hash":"dcb42d31a29dd94bcf9095a6994f52bc","cacheData":{"env":{}}}