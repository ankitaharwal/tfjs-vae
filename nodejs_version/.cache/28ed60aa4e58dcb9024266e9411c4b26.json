{"dependencies":[{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\package.json","includedInParent":true,"mtime":1528206326997},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\.babelrc","includedInParent":true,"mtime":1528197961732},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\gl-vec4\\package.json","includedInParent":true,"mtime":1431617897000}],"generated":{"js":"module.exports = distance\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nfunction distance (a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1],\n    z = b[2] - a[2],\n    w = b[3] - a[3]\n  return Math.sqrt(x * x + y * y + z * z + w * w)\n}\n","map":{"mappings":[{"source":"node_modules\\gl-vec4\\distance.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\gl-vec4\\distance.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\gl-vec4\\distance.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\gl-vec4\\distance.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\gl-vec4\\distance.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\gl-vec4\\distance.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\gl-vec4\\distance.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\gl-vec4\\distance.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\gl-vec4\\distance.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\gl-vec4\\distance.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\gl-vec4\\distance.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\gl-vec4\\distance.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\gl-vec4\\distance.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\gl-vec4\\distance.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\gl-vec4\\distance.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\gl-vec4\\distance.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\gl-vec4\\distance.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}}],"sources":{"node_modules\\gl-vec4\\distance.js":"module.exports = distance\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nfunction distance (a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1],\n    z = b[2] - a[2],\n    w = b[3] - a[3]\n  return Math.sqrt(x * x + y * y + z * z + w * w)\n}\n"},"lineCount":17}},"hash":"f30568670286a366e3ae9a1928a5c891","cacheData":{"env":{}}}