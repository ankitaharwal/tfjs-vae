{"dependencies":[{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\package.json","includedInParent":true,"mtime":1528206326997},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\.babelrc","includedInParent":true,"mtime":1528197961732},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\plotly.js\\package.json","includedInParent":true,"mtime":499162500000},{"name":"../../lib","loc":{"line":11,"column":18}}],"generated":{"js":"/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\n\n/*\n * Given a 2D array as well as a basis in either direction, this function fills in the\n * 2D array using a combination of smoothing and extrapolation. This is rather important\n * for carpet plots since it's used for layout so that we can't simply omit or blank out\n * points. We need a reasonable guess so that the interpolation puts points somewhere\n * even if we were to somehow represent that the data was missing later on.\n *\n * input:\n *  - data: 2D array of arrays\n *  - a: array such that a.length === data[0].length\n *  - b: array such that b.length === data.length\n */\nmodule.exports = function smoothFill2dArray(data, a, b) {\n    var i, j, k;\n    var ip = [];\n    var jp = [];\n    // var neighborCnts = [];\n\n    var ni = data[0].length;\n    var nj = data.length;\n\n    function avgSurrounding(i, j) {\n        // As a low-quality start, we can simply average surrounding points (in a not\n        // non-uniform grid aware manner):\n        var sum = 0.0;\n        var val;\n        var cnt = 0;\n        if(i > 0 && (val = data[j][i - 1]) !== undefined) {\n            cnt++;\n            sum += val;\n        }\n        if(i < ni - 1 && (val = data[j][i + 1]) !== undefined) {\n            cnt++;\n            sum += val;\n        }\n        if(j > 0 && (val = data[j - 1][i]) !== undefined) {\n            cnt++;\n            sum += val;\n        }\n        if(j < nj - 1 && (val = data[j + 1][i]) !== undefined) {\n            cnt++;\n            sum += val;\n        }\n        return sum / Math.max(1, cnt);\n\n    }\n\n    // This loop iterates over all cells. Any cells that are null will be noted and those\n    // are the only points we will loop over and update via laplace's equation. Points with\n    // any neighbors will receive the average. If there are no neighboring points, then they\n    // will be set to zero. Also as we go, track the maximum magnitude so that we can scale\n    // our tolerance accordingly.\n    var dmax = 0.0;\n    for(i = 0; i < ni; i++) {\n        for(j = 0; j < nj; j++) {\n            if(data[j][i] === undefined) {\n                ip.push(i);\n                jp.push(j);\n\n                data[j][i] = avgSurrounding(i, j);\n                // neighborCnts.push(result.neighbors);\n            }\n            dmax = Math.max(dmax, Math.abs(data[j][i]));\n        }\n    }\n\n    if(!ip.length) return data;\n\n    // The tolerance doesn't need to be excessive. It's just for display positioning\n    var dxp, dxm, dap, dam, dbp, dbm, c, d, diff, reldiff, overrelaxation;\n    var tol = 1e-5;\n    var resid = 0;\n    var itermax = 100;\n    var iter = 0;\n    var n = ip.length;\n    do {\n        resid = 0;\n        // Normally we'd loop in two dimensions, but not all points are blank and need\n        // an update, so we instead loop only over the points that were tabulated above\n        for(k = 0; k < n; k++) {\n            i = ip[k];\n            j = jp[k];\n            // neighborCnt = neighborCnts[k];\n\n            // Track a counter for how many contributions there are. We'll use this counter\n            // to average at the end, which reduces to laplace's equation with neumann boundary\n            // conditions on the first derivative (second derivative is zero so that we get\n            // a nice linear extrapolation at the boundaries).\n            var boundaryCnt = 0;\n            var newVal = 0;\n\n            var d0, d1, x0, x1, i0, j0;\n            if(i === 0) {\n                // If this lies along the i = 0 boundary, extrapolate from the two points\n                // to the right of this point. Note that the finite differences take into\n                // account non-uniform grid spacing:\n                i0 = Math.min(ni - 1, 2);\n                x0 = a[i0];\n                x1 = a[1];\n                d0 = data[j][i0];\n                d1 = data[j][1];\n                newVal += d1 + (d1 - d0) * (a[0] - x1) / (x1 - x0);\n                boundaryCnt++;\n            } else if(i === ni - 1) {\n                // If along the high i boundary, extrapolate from the two points to the\n                // left of this point\n                i0 = Math.max(0, ni - 3);\n                x0 = a[i0];\n                x1 = a[ni - 2];\n                d0 = data[j][i0];\n                d1 = data[j][ni - 2];\n                newVal += d1 + (d1 - d0) * (a[ni - 1] - x1) / (x1 - x0);\n                boundaryCnt++;\n            }\n\n            if((i === 0 || i === ni - 1) && (j > 0 && j < nj - 1)) {\n                // If along the min(i) or max(i) boundaries, also smooth vertically as long\n                // as we're not in a corner. Note that the finite differences used here\n                // are also aware of nonuniform grid spacing:\n                dxp = b[j + 1] - b[j];\n                dxm = b[j] - b[j - 1];\n                newVal += (dxm * data[j + 1][i] + dxp * data[j - 1][i]) / (dxm + dxp);\n                boundaryCnt++;\n            }\n\n            if(j === 0) {\n                // If along the j = 0 boundary, extrpolate this point from the two points\n                // above it\n                j0 = Math.min(nj - 1, 2);\n                x0 = b[j0];\n                x1 = b[1];\n                d0 = data[j0][i];\n                d1 = data[1][i];\n                newVal += d1 + (d1 - d0) * (b[0] - x1) / (x1 - x0);\n                boundaryCnt++;\n            } else if(j === nj - 1) {\n                // Same for the max j boundary from the cells below it:\n                j0 = Math.max(0, nj - 3);\n                x0 = b[j0];\n                x1 = b[nj - 2];\n                d0 = data[j0][i];\n                d1 = data[nj - 2][i];\n                newVal += d1 + (d1 - d0) * (b[nj - 1] - x1) / (x1 - x0);\n                boundaryCnt++;\n            }\n\n            if((j === 0 || j === nj - 1) && (i > 0 && i < ni - 1)) {\n                // Now average points to the left/right as long as not in a corner:\n                dxp = a[i + 1] - a[i];\n                dxm = a[i] - a[i - 1];\n                newVal += (dxm * data[j][i + 1] + dxp * data[j][i - 1]) / (dxm + dxp);\n                boundaryCnt++;\n            }\n\n            if(!boundaryCnt) {\n                // If none of the above conditions were triggered, then this is an interior\n                // point and we can just do a laplace equation update. As above, these differences\n                // are aware of nonuniform grid spacing:\n                dap = a[i + 1] - a[i];\n                dam = a[i] - a[i - 1];\n                dbp = b[j + 1] - b[j];\n                dbm = b[j] - b[j - 1];\n\n                // These are just some useful constants for the iteration, which is perfectly\n                // straightforward but a little long to derive from f_xx + f_yy = 0.\n                c = dap * dam * (dap + dam);\n                d = dbp * dbm * (dbp + dbm);\n\n                newVal = (c * (dbm * data[j + 1][i] + dbp * data[j - 1][i]) +\n                          d * (dam * data[j][i + 1] + dap * data[j][i - 1])) /\n                          (d * (dam + dap) + c * (dbm + dbp));\n            } else {\n                // If we did have contributions from the boundary conditions, then average\n                // the result from the various contributions:\n                newVal /= boundaryCnt;\n            }\n\n            // Jacobi updates are ridiculously slow to converge, so this approach uses a\n            // Gauss-seidel iteration which is dramatically faster.\n            diff = newVal - data[j][i];\n            reldiff = diff / dmax;\n            resid += reldiff * reldiff;\n\n            // Gauss-Seidel-ish iteration, omega chosen based on heuristics and some\n            // quick tests.\n            //\n            // NB: Don't overrelax the boundarie. Otherwise set an overrelaxation factor\n            // which is a little low but safely optimal-ish:\n            overrelaxation = boundaryCnt ? 0 : 0.85;\n\n            // If there are four non-null neighbors, then we want a simple average without\n            // overrelaxation. If all the surrouding points are null, then we want the full\n            // overrelaxation\n            //\n            // Based on experiments, this actually seems to slow down convergence just a bit.\n            // I'll leave it here for reference in case this needs to be revisited, but\n            // it seems to work just fine without this.\n            // if (overrelaxation) overrelaxation *= (4 - neighborCnt) / 4;\n\n            data[j][i] += diff * (1 + overrelaxation);\n        }\n\n        resid = Math.sqrt(resid);\n    } while(iter++ < itermax && resid > tol);\n\n    Lib.log('Smoother converged to', resid, 'after', iter, 'iterations');\n\n    return data;\n};\n","map":{"mappings":[{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}}],"sources":{"node_modules\\plotly.js\\src\\traces\\carpet\\smooth_fill_2d_array.js":"/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\n\n/*\n * Given a 2D array as well as a basis in either direction, this function fills in the\n * 2D array using a combination of smoothing and extrapolation. This is rather important\n * for carpet plots since it's used for layout so that we can't simply omit or blank out\n * points. We need a reasonable guess so that the interpolation puts points somewhere\n * even if we were to somehow represent that the data was missing later on.\n *\n * input:\n *  - data: 2D array of arrays\n *  - a: array such that a.length === data[0].length\n *  - b: array such that b.length === data.length\n */\nmodule.exports = function smoothFill2dArray(data, a, b) {\n    var i, j, k;\n    var ip = [];\n    var jp = [];\n    // var neighborCnts = [];\n\n    var ni = data[0].length;\n    var nj = data.length;\n\n    function avgSurrounding(i, j) {\n        // As a low-quality start, we can simply average surrounding points (in a not\n        // non-uniform grid aware manner):\n        var sum = 0.0;\n        var val;\n        var cnt = 0;\n        if(i > 0 && (val = data[j][i - 1]) !== undefined) {\n            cnt++;\n            sum += val;\n        }\n        if(i < ni - 1 && (val = data[j][i + 1]) !== undefined) {\n            cnt++;\n            sum += val;\n        }\n        if(j > 0 && (val = data[j - 1][i]) !== undefined) {\n            cnt++;\n            sum += val;\n        }\n        if(j < nj - 1 && (val = data[j + 1][i]) !== undefined) {\n            cnt++;\n            sum += val;\n        }\n        return sum / Math.max(1, cnt);\n\n    }\n\n    // This loop iterates over all cells. Any cells that are null will be noted and those\n    // are the only points we will loop over and update via laplace's equation. Points with\n    // any neighbors will receive the average. If there are no neighboring points, then they\n    // will be set to zero. Also as we go, track the maximum magnitude so that we can scale\n    // our tolerance accordingly.\n    var dmax = 0.0;\n    for(i = 0; i < ni; i++) {\n        for(j = 0; j < nj; j++) {\n            if(data[j][i] === undefined) {\n                ip.push(i);\n                jp.push(j);\n\n                data[j][i] = avgSurrounding(i, j);\n                // neighborCnts.push(result.neighbors);\n            }\n            dmax = Math.max(dmax, Math.abs(data[j][i]));\n        }\n    }\n\n    if(!ip.length) return data;\n\n    // The tolerance doesn't need to be excessive. It's just for display positioning\n    var dxp, dxm, dap, dam, dbp, dbm, c, d, diff, reldiff, overrelaxation;\n    var tol = 1e-5;\n    var resid = 0;\n    var itermax = 100;\n    var iter = 0;\n    var n = ip.length;\n    do {\n        resid = 0;\n        // Normally we'd loop in two dimensions, but not all points are blank and need\n        // an update, so we instead loop only over the points that were tabulated above\n        for(k = 0; k < n; k++) {\n            i = ip[k];\n            j = jp[k];\n            // neighborCnt = neighborCnts[k];\n\n            // Track a counter for how many contributions there are. We'll use this counter\n            // to average at the end, which reduces to laplace's equation with neumann boundary\n            // conditions on the first derivative (second derivative is zero so that we get\n            // a nice linear extrapolation at the boundaries).\n            var boundaryCnt = 0;\n            var newVal = 0;\n\n            var d0, d1, x0, x1, i0, j0;\n            if(i === 0) {\n                // If this lies along the i = 0 boundary, extrapolate from the two points\n                // to the right of this point. Note that the finite differences take into\n                // account non-uniform grid spacing:\n                i0 = Math.min(ni - 1, 2);\n                x0 = a[i0];\n                x1 = a[1];\n                d0 = data[j][i0];\n                d1 = data[j][1];\n                newVal += d1 + (d1 - d0) * (a[0] - x1) / (x1 - x0);\n                boundaryCnt++;\n            } else if(i === ni - 1) {\n                // If along the high i boundary, extrapolate from the two points to the\n                // left of this point\n                i0 = Math.max(0, ni - 3);\n                x0 = a[i0];\n                x1 = a[ni - 2];\n                d0 = data[j][i0];\n                d1 = data[j][ni - 2];\n                newVal += d1 + (d1 - d0) * (a[ni - 1] - x1) / (x1 - x0);\n                boundaryCnt++;\n            }\n\n            if((i === 0 || i === ni - 1) && (j > 0 && j < nj - 1)) {\n                // If along the min(i) or max(i) boundaries, also smooth vertically as long\n                // as we're not in a corner. Note that the finite differences used here\n                // are also aware of nonuniform grid spacing:\n                dxp = b[j + 1] - b[j];\n                dxm = b[j] - b[j - 1];\n                newVal += (dxm * data[j + 1][i] + dxp * data[j - 1][i]) / (dxm + dxp);\n                boundaryCnt++;\n            }\n\n            if(j === 0) {\n                // If along the j = 0 boundary, extrpolate this point from the two points\n                // above it\n                j0 = Math.min(nj - 1, 2);\n                x0 = b[j0];\n                x1 = b[1];\n                d0 = data[j0][i];\n                d1 = data[1][i];\n                newVal += d1 + (d1 - d0) * (b[0] - x1) / (x1 - x0);\n                boundaryCnt++;\n            } else if(j === nj - 1) {\n                // Same for the max j boundary from the cells below it:\n                j0 = Math.max(0, nj - 3);\n                x0 = b[j0];\n                x1 = b[nj - 2];\n                d0 = data[j0][i];\n                d1 = data[nj - 2][i];\n                newVal += d1 + (d1 - d0) * (b[nj - 1] - x1) / (x1 - x0);\n                boundaryCnt++;\n            }\n\n            if((j === 0 || j === nj - 1) && (i > 0 && i < ni - 1)) {\n                // Now average points to the left/right as long as not in a corner:\n                dxp = a[i + 1] - a[i];\n                dxm = a[i] - a[i - 1];\n                newVal += (dxm * data[j][i + 1] + dxp * data[j][i - 1]) / (dxm + dxp);\n                boundaryCnt++;\n            }\n\n            if(!boundaryCnt) {\n                // If none of the above conditions were triggered, then this is an interior\n                // point and we can just do a laplace equation update. As above, these differences\n                // are aware of nonuniform grid spacing:\n                dap = a[i + 1] - a[i];\n                dam = a[i] - a[i - 1];\n                dbp = b[j + 1] - b[j];\n                dbm = b[j] - b[j - 1];\n\n                // These are just some useful constants for the iteration, which is perfectly\n                // straightforward but a little long to derive from f_xx + f_yy = 0.\n                c = dap * dam * (dap + dam);\n                d = dbp * dbm * (dbp + dbm);\n\n                newVal = (c * (dbm * data[j + 1][i] + dbp * data[j - 1][i]) +\n                          d * (dam * data[j][i + 1] + dap * data[j][i - 1])) /\n                          (d * (dam + dap) + c * (dbm + dbp));\n            } else {\n                // If we did have contributions from the boundary conditions, then average\n                // the result from the various contributions:\n                newVal /= boundaryCnt;\n            }\n\n            // Jacobi updates are ridiculously slow to converge, so this approach uses a\n            // Gauss-seidel iteration which is dramatically faster.\n            diff = newVal - data[j][i];\n            reldiff = diff / dmax;\n            resid += reldiff * reldiff;\n\n            // Gauss-Seidel-ish iteration, omega chosen based on heuristics and some\n            // quick tests.\n            //\n            // NB: Don't overrelax the boundarie. Otherwise set an overrelaxation factor\n            // which is a little low but safely optimal-ish:\n            overrelaxation = boundaryCnt ? 0 : 0.85;\n\n            // If there are four non-null neighbors, then we want a simple average without\n            // overrelaxation. If all the surrouding points are null, then we want the full\n            // overrelaxation\n            //\n            // Based on experiments, this actually seems to slow down convergence just a bit.\n            // I'll leave it here for reference in case this needs to be revisited, but\n            // it seems to work just fine without this.\n            // if (overrelaxation) overrelaxation *= (4 - neighborCnt) / 4;\n\n            data[j][i] += diff * (1 + overrelaxation);\n        }\n\n        resid = Math.sqrt(resid);\n    } while(iter++ < itermax && resid > tol);\n\n    Lib.log('Smoother converged to', resid, 'after', iter, 'iterations');\n\n    return data;\n};\n"},"lineCount":222}},"hash":"49d54ea393814c51074342ec6c830af2","cacheData":{"env":{}}}