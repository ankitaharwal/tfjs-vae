{"dependencies":[{"name":"C:\\Users\\qison\\package.json","includedInParent":true,"mtime":1526331035212},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\slab-decomposition\\package.json","includedInParent":true,"mtime":1411152888000},{"name":"binary-search-bounds","loc":{"line":5,"column":21}},{"name":"functional-red-black-tree","loc":{"line":6,"column":27}},{"name":"robust-orientation","loc":{"line":7,"column":21}},{"name":"./lib/order-segments","loc":{"line":8,"column":28}}],"generated":{"js":"\"use strict\"\n\nmodule.exports = createSlabDecomposition\n\nvar bounds = require(\"binary-search-bounds\")\nvar createRBTree = require(\"functional-red-black-tree\")\nvar orient = require(\"robust-orientation\")\nvar orderSegments = require(\"./lib/order-segments\")\n\nfunction SlabDecomposition(slabs, coordinates, horizontal) {\n  this.slabs = slabs\n  this.coordinates = coordinates\n  this.horizontal = horizontal\n}\n\nvar proto = SlabDecomposition.prototype\n\nfunction compareHorizontal(e, y) {\n  return e.y - y\n}\n\nfunction searchBucket(root, p) {\n  var lastNode = null\n  while(root) {\n    var seg = root.key\n    var l, r\n    if(seg[0][0] < seg[1][0]) {\n      l = seg[0]\n      r = seg[1]\n    } else {\n      l = seg[1]\n      r = seg[0]\n    }\n    var o = orient(l, r, p)\n    if(o < 0) {\n      root = root.left\n    } else if(o > 0) {\n      if(p[0] !== seg[1][0]) {\n        lastNode = root\n        root = root.right\n      } else {\n        var val = searchBucket(root.right, p)\n        if(val) {\n          return val\n        }\n        root = root.left\n      }\n    } else {\n      if(p[0] !== seg[1][0]) {\n        return root\n      } else {\n        var val = searchBucket(root.right, p)\n        if(val) {\n          return val\n        }\n        root = root.left\n      }\n    }\n  }\n  return lastNode\n}\n\nproto.castUp = function(p) {\n  var bucket = bounds.le(this.coordinates, p[0])\n  if(bucket < 0) {\n    return -1\n  }\n  var root = this.slabs[bucket]\n  var hitNode = searchBucket(this.slabs[bucket], p)\n  var lastHit = -1\n  if(hitNode) {\n    lastHit = hitNode.value\n  }\n  //Edge case: need to handle horizontal segments (sucks)\n  if(this.coordinates[bucket] === p[0]) {\n    var lastSegment = null\n    if(hitNode) {\n      lastSegment = hitNode.key\n    }\n    if(bucket > 0) {\n      var otherHitNode = searchBucket(this.slabs[bucket-1], p)\n      if(otherHitNode) {\n        if(lastSegment) {\n          if(orderSegments(otherHitNode.key, lastSegment) > 0) {\n            lastSegment = otherHitNode.key\n            lastHit = otherHitNode.value\n          }\n        } else {\n          lastHit = otherHitNode.value\n          lastSegment = otherHitNode.key\n        }\n      }\n    }\n    var horiz = this.horizontal[bucket]\n    if(horiz.length > 0) {\n      var hbucket = bounds.ge(horiz, p[1], compareHorizontal)\n      if(hbucket < horiz.length) {\n        var e = horiz[hbucket]\n        if(p[1] === e.y) {\n          if(e.closed) {\n            return e.index\n          } else {\n            while(hbucket < horiz.length-1 && horiz[hbucket+1].y === p[1]) {\n              hbucket = hbucket+1\n              e = horiz[hbucket]\n              if(e.closed) {\n                return e.index\n              }\n            }\n            if(e.y === p[1] && !e.start) {\n              hbucket = hbucket+1\n              if(hbucket >= horiz.length) {\n                return lastHit\n              }\n              e = horiz[hbucket]\n            }\n          }\n        }\n        //Check if e is above/below last segment\n        if(e.start) {\n          if(lastSegment) {\n            var o = orient(lastSegment[0], lastSegment[1], [p[0], e.y])\n            if(lastSegment[0][0] > lastSegment[1][0]) {\n              o = -o\n            }\n            if(o > 0) {\n              lastHit = e.index\n            }\n          } else {\n            lastHit = e.index\n          }\n        } else if(e.y !== p[1]) {\n          lastHit = e.index\n        }\n      }\n    }\n  }\n  return lastHit\n}\n\nfunction IntervalSegment(y, index, start, closed) {\n  this.y = y\n  this.index = index\n  this.start = start\n  this.closed = closed\n}\n\nfunction Event(x, segment, create, index) {\n  this.x = x\n  this.segment = segment\n  this.create = create\n  this.index = index\n}\n\n\nfunction createSlabDecomposition(segments) {\n  var numSegments = segments.length\n  var numEvents = 2 * numSegments\n  var events = new Array(numEvents)\n  for(var i=0; i<numSegments; ++i) {\n    var s = segments[i]\n    var f = s[0][0] < s[1][0]\n    events[2*i] = new Event(s[0][0], s, f, i)\n    events[2*i+1] = new Event(s[1][0], s, !f, i)\n  }\n  events.sort(function(a,b) {\n    var d = a.x - b.x\n    if(d) {\n      return d\n    }\n    d = a.create - b.create\n    if(d) {\n      return d\n    }\n    return Math.min(a.segment[0][1], a.segment[1][1]) - Math.min(b.segment[0][1], b.segment[1][1])\n  })\n  var tree = createRBTree(orderSegments)\n  var slabs = []\n  var lines = []\n  var horizontal = []\n  var lastX = -Infinity\n  for(var i=0; i<numEvents; ) {\n    var x = events[i].x\n    var horiz = []\n    while(i < numEvents) {\n      var e = events[i]\n      if(e.x !== x) {\n        break\n      }\n      i += 1\n      if(e.segment[0][0] === e.x && e.segment[1][0] === e.x) {\n        if(e.create) {\n          if(e.segment[0][1] < e.segment[1][1]) {\n            horiz.push(new IntervalSegment(\n                e.segment[0][1],\n                e.index,\n                true,\n                true))\n            horiz.push(new IntervalSegment(\n                e.segment[1][1],\n                e.index,\n                false,\n                false))\n          } else {\n            horiz.push(new IntervalSegment(\n                e.segment[1][1],\n                e.index,\n                true,\n                false))\n            horiz.push(new IntervalSegment(\n                e.segment[0][1],\n                e.index,\n                false,\n                true))\n          }\n        }\n      } else {\n        if(e.create) {\n          tree = tree.insert(e.segment, e.index)\n        } else {\n          tree = tree.remove(e.segment)\n        }\n      }\n    }\n    slabs.push(tree.root)\n    lines.push(x)\n    horizontal.push(horiz)\n  }\n  return new SlabDecomposition(slabs, lines, horizontal)\n}","map":{"mappings":[{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"nodejs_version\\node_modules\\slab-decomposition\\slabs.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}}],"sources":{"nodejs_version\\node_modules\\slab-decomposition\\slabs.js":"\"use strict\"\n\nmodule.exports = createSlabDecomposition\n\nvar bounds = require(\"binary-search-bounds\")\nvar createRBTree = require(\"functional-red-black-tree\")\nvar orient = require(\"robust-orientation\")\nvar orderSegments = require(\"./lib/order-segments\")\n\nfunction SlabDecomposition(slabs, coordinates, horizontal) {\n  this.slabs = slabs\n  this.coordinates = coordinates\n  this.horizontal = horizontal\n}\n\nvar proto = SlabDecomposition.prototype\n\nfunction compareHorizontal(e, y) {\n  return e.y - y\n}\n\nfunction searchBucket(root, p) {\n  var lastNode = null\n  while(root) {\n    var seg = root.key\n    var l, r\n    if(seg[0][0] < seg[1][0]) {\n      l = seg[0]\n      r = seg[1]\n    } else {\n      l = seg[1]\n      r = seg[0]\n    }\n    var o = orient(l, r, p)\n    if(o < 0) {\n      root = root.left\n    } else if(o > 0) {\n      if(p[0] !== seg[1][0]) {\n        lastNode = root\n        root = root.right\n      } else {\n        var val = searchBucket(root.right, p)\n        if(val) {\n          return val\n        }\n        root = root.left\n      }\n    } else {\n      if(p[0] !== seg[1][0]) {\n        return root\n      } else {\n        var val = searchBucket(root.right, p)\n        if(val) {\n          return val\n        }\n        root = root.left\n      }\n    }\n  }\n  return lastNode\n}\n\nproto.castUp = function(p) {\n  var bucket = bounds.le(this.coordinates, p[0])\n  if(bucket < 0) {\n    return -1\n  }\n  var root = this.slabs[bucket]\n  var hitNode = searchBucket(this.slabs[bucket], p)\n  var lastHit = -1\n  if(hitNode) {\n    lastHit = hitNode.value\n  }\n  //Edge case: need to handle horizontal segments (sucks)\n  if(this.coordinates[bucket] === p[0]) {\n    var lastSegment = null\n    if(hitNode) {\n      lastSegment = hitNode.key\n    }\n    if(bucket > 0) {\n      var otherHitNode = searchBucket(this.slabs[bucket-1], p)\n      if(otherHitNode) {\n        if(lastSegment) {\n          if(orderSegments(otherHitNode.key, lastSegment) > 0) {\n            lastSegment = otherHitNode.key\n            lastHit = otherHitNode.value\n          }\n        } else {\n          lastHit = otherHitNode.value\n          lastSegment = otherHitNode.key\n        }\n      }\n    }\n    var horiz = this.horizontal[bucket]\n    if(horiz.length > 0) {\n      var hbucket = bounds.ge(horiz, p[1], compareHorizontal)\n      if(hbucket < horiz.length) {\n        var e = horiz[hbucket]\n        if(p[1] === e.y) {\n          if(e.closed) {\n            return e.index\n          } else {\n            while(hbucket < horiz.length-1 && horiz[hbucket+1].y === p[1]) {\n              hbucket = hbucket+1\n              e = horiz[hbucket]\n              if(e.closed) {\n                return e.index\n              }\n            }\n            if(e.y === p[1] && !e.start) {\n              hbucket = hbucket+1\n              if(hbucket >= horiz.length) {\n                return lastHit\n              }\n              e = horiz[hbucket]\n            }\n          }\n        }\n        //Check if e is above/below last segment\n        if(e.start) {\n          if(lastSegment) {\n            var o = orient(lastSegment[0], lastSegment[1], [p[0], e.y])\n            if(lastSegment[0][0] > lastSegment[1][0]) {\n              o = -o\n            }\n            if(o > 0) {\n              lastHit = e.index\n            }\n          } else {\n            lastHit = e.index\n          }\n        } else if(e.y !== p[1]) {\n          lastHit = e.index\n        }\n      }\n    }\n  }\n  return lastHit\n}\n\nfunction IntervalSegment(y, index, start, closed) {\n  this.y = y\n  this.index = index\n  this.start = start\n  this.closed = closed\n}\n\nfunction Event(x, segment, create, index) {\n  this.x = x\n  this.segment = segment\n  this.create = create\n  this.index = index\n}\n\n\nfunction createSlabDecomposition(segments) {\n  var numSegments = segments.length\n  var numEvents = 2 * numSegments\n  var events = new Array(numEvents)\n  for(var i=0; i<numSegments; ++i) {\n    var s = segments[i]\n    var f = s[0][0] < s[1][0]\n    events[2*i] = new Event(s[0][0], s, f, i)\n    events[2*i+1] = new Event(s[1][0], s, !f, i)\n  }\n  events.sort(function(a,b) {\n    var d = a.x - b.x\n    if(d) {\n      return d\n    }\n    d = a.create - b.create\n    if(d) {\n      return d\n    }\n    return Math.min(a.segment[0][1], a.segment[1][1]) - Math.min(b.segment[0][1], b.segment[1][1])\n  })\n  var tree = createRBTree(orderSegments)\n  var slabs = []\n  var lines = []\n  var horizontal = []\n  var lastX = -Infinity\n  for(var i=0; i<numEvents; ) {\n    var x = events[i].x\n    var horiz = []\n    while(i < numEvents) {\n      var e = events[i]\n      if(e.x !== x) {\n        break\n      }\n      i += 1\n      if(e.segment[0][0] === e.x && e.segment[1][0] === e.x) {\n        if(e.create) {\n          if(e.segment[0][1] < e.segment[1][1]) {\n            horiz.push(new IntervalSegment(\n                e.segment[0][1],\n                e.index,\n                true,\n                true))\n            horiz.push(new IntervalSegment(\n                e.segment[1][1],\n                e.index,\n                false,\n                false))\n          } else {\n            horiz.push(new IntervalSegment(\n                e.segment[1][1],\n                e.index,\n                true,\n                false))\n            horiz.push(new IntervalSegment(\n                e.segment[0][1],\n                e.index,\n                false,\n                true))\n          }\n        }\n      } else {\n        if(e.create) {\n          tree = tree.insert(e.segment, e.index)\n        } else {\n          tree = tree.remove(e.segment)\n        }\n      }\n    }\n    slabs.push(tree.root)\n    lines.push(x)\n    horizontal.push(horiz)\n  }\n  return new SlabDecomposition(slabs, lines, horizontal)\n}"},"lineCount":230}},"hash":"faf3058999afa2a7977e7b80f9c171bd","cacheData":{"env":{}}}