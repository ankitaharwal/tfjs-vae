{"dependencies":[{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\package.json","includedInParent":true,"mtime":1528206326997},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\.babelrc","includedInParent":true,"mtime":1528197961732},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\gl-axes3d\\package.json","includedInParent":true,"mtime":1517604952000},{"name":"extract-frustum-planes","loc":{"line":5,"column":26}},{"name":"split-polygon","loc":{"line":6,"column":26}},{"name":"./lib/cube.js","loc":{"line":7,"column":26}},{"name":"gl-mat4/multiply","loc":{"line":8,"column":26}},{"name":"gl-mat4/transpose","loc":{"line":9,"column":26}},{"name":"gl-vec4/transformMat4","loc":{"line":10,"column":30}}],"generated":{"js":"\"use strict\"\r\n\r\nmodule.exports = axesProperties\r\n\r\nvar getPlanes   = require(\"extract-frustum-planes\")\r\nvar splitPoly   = require(\"split-polygon\")\r\nvar cubeParams  = require(\"./lib/cube.js\")\r\nvar m4mul       = require(\"gl-mat4/multiply\")\r\nvar m4transpose = require(\"gl-mat4/transpose\")\r\nvar v4transformMat4 = require(\"gl-vec4/transformMat4\")\r\n\r\nvar identity    = new Float32Array([\r\n    1, 0, 0, 0,\r\n    0, 1, 0, 0,\r\n    0, 0, 1, 0,\r\n    0, 0, 0, 1\r\n  ])\r\n\r\nvar mvp         = new Float32Array(16)\r\n\r\nfunction AxesRange3D(lo, hi, pixelsPerDataUnit) {\r\n  this.lo = lo\r\n  this.hi = hi\r\n  this.pixelsPerDataUnit = pixelsPerDataUnit\r\n}\r\n\r\nvar SCRATCH_P = [0,0,0,1]\r\nvar SCRATCH_Q = [0,0,0,1]\r\n\r\nfunction gradient(result, M, v, width, height) {\r\n  for(var i=0; i<3; ++i) {\r\n    var p = SCRATCH_P\r\n    var q = SCRATCH_Q\r\n    for(var j=0; j<3; ++j) {\r\n      q[j] = p[j] = v[j]\r\n    }\r\n    q[3] = p[3] = 1\r\n\r\n    q[i] += 1\r\n    v4transformMat4(q, q, M)\r\n    if(q[3] < 0) {\r\n      result[i] = Infinity\r\n    }\r\n\r\n    p[i] -= 1\r\n    v4transformMat4(p, p, M)\r\n    if(p[3] < 0) {\r\n      result[i] = Infinity\r\n    }\r\n\r\n    var dx = (p[0]/p[3] - q[0]/q[3]) * width\r\n    var dy = (p[1]/p[3] - q[1]/q[3]) * height\r\n\r\n    result[i] = 0.25 * Math.sqrt(dx*dx + dy*dy)\r\n  }\r\n  return result\r\n}\r\n\r\nvar RANGES = [\r\n  new AxesRange3D(Infinity, -Infinity, Infinity),\r\n  new AxesRange3D(Infinity, -Infinity, Infinity),\r\n  new AxesRange3D(Infinity, -Infinity, Infinity)\r\n]\r\n\r\nvar SCRATCH_X = [0,0,0]\r\n\r\nfunction axesProperties(axes, camera, width, height, params) {\r\n  var model       = camera.model || identity\r\n  var view        = camera.view || identity\r\n  var projection  = camera.projection || identity\r\n  var bounds      = axes.bounds\r\n  var params      = params || cubeParams(model, view, projection, bounds)\r\n  var axis        = params.axis\r\n  var edges       = params.edges\r\n\r\n  m4mul(mvp, view, model)\r\n  m4mul(mvp, projection, mvp)\r\n\r\n  //Calculate the following properties for each axis:\r\n  //\r\n  // * lo - start of visible range for each axis in tick coordinates\r\n  // * hi - end of visible range for each axis in tick coordinates\r\n  // * ticksPerPixel - pixel density of tick marks for the axis\r\n  //\r\n  var ranges = RANGES\r\n  for(var i=0; i<3; ++i) {\r\n    ranges[i].lo = Infinity\r\n    ranges[i].hi = -Infinity\r\n    ranges[i].pixelsPerDataUnit = Infinity\r\n  }\r\n\r\n  //Compute frustum planes, intersect with box\r\n  var frustum = getPlanes(m4transpose(mvp, mvp))\r\n  m4transpose(mvp, mvp)\r\n\r\n  //Loop over vertices of viewable box\r\n  for(var d=0; d<3; ++d) {\r\n    var u = (d+1)%3\r\n    var v = (d+2)%3\r\n    var x = SCRATCH_X\r\ni_loop:\r\n    for(var i=0; i<2; ++i) {\r\n      var poly = []\r\n\r\n      if((axis[d] < 0) === !!i) {\r\n        continue\r\n      }\r\n\r\n      x[d] = bounds[i][d]\r\n      for(var j=0; j<2; ++j) {\r\n        x[u] = bounds[j^i][u]\r\n        for(var k=0; k<2; ++k) {\r\n          x[v] = bounds[k^j^i][v]\r\n          poly.push(x.slice())\r\n        }\r\n      }\r\n      for(var j=0; j<frustum.length; ++j) {\r\n        if(poly.length === 0) {\r\n          continue i_loop\r\n        }\r\n        poly = splitPoly.positive(poly, frustum[j])\r\n      }\r\n\r\n      //Loop over vertices of polygon to find extremal points\r\n      for(var j=0; j<poly.length; ++j) {\r\n        var v = poly[j]\r\n        var grad = gradient(SCRATCH_X, mvp, v, width, height)\r\n        for(var k=0; k<3; ++k) {\r\n          ranges[k].lo = Math.min(ranges[k].lo, v[k])\r\n          ranges[k].hi = Math.max(ranges[k].hi, v[k])\r\n          if(k !== d) {\r\n            ranges[k].pixelsPerDataUnit = Math.min(ranges[k].pixelsPerDataUnit, Math.abs(grad[k]))\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return ranges\r\n}\r\n","map":{"mappings":[{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules\\gl-axes3d\\properties.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}}],"sources":{"node_modules\\gl-axes3d\\properties.js":"\"use strict\"\r\n\r\nmodule.exports = axesProperties\r\n\r\nvar getPlanes   = require(\"extract-frustum-planes\")\r\nvar splitPoly   = require(\"split-polygon\")\r\nvar cubeParams  = require(\"./lib/cube.js\")\r\nvar m4mul       = require(\"gl-mat4/multiply\")\r\nvar m4transpose = require(\"gl-mat4/transpose\")\r\nvar v4transformMat4 = require(\"gl-vec4/transformMat4\")\r\n\r\nvar identity    = new Float32Array([\r\n    1, 0, 0, 0,\r\n    0, 1, 0, 0,\r\n    0, 0, 1, 0,\r\n    0, 0, 0, 1\r\n  ])\r\n\r\nvar mvp         = new Float32Array(16)\r\n\r\nfunction AxesRange3D(lo, hi, pixelsPerDataUnit) {\r\n  this.lo = lo\r\n  this.hi = hi\r\n  this.pixelsPerDataUnit = pixelsPerDataUnit\r\n}\r\n\r\nvar SCRATCH_P = [0,0,0,1]\r\nvar SCRATCH_Q = [0,0,0,1]\r\n\r\nfunction gradient(result, M, v, width, height) {\r\n  for(var i=0; i<3; ++i) {\r\n    var p = SCRATCH_P\r\n    var q = SCRATCH_Q\r\n    for(var j=0; j<3; ++j) {\r\n      q[j] = p[j] = v[j]\r\n    }\r\n    q[3] = p[3] = 1\r\n\r\n    q[i] += 1\r\n    v4transformMat4(q, q, M)\r\n    if(q[3] < 0) {\r\n      result[i] = Infinity\r\n    }\r\n\r\n    p[i] -= 1\r\n    v4transformMat4(p, p, M)\r\n    if(p[3] < 0) {\r\n      result[i] = Infinity\r\n    }\r\n\r\n    var dx = (p[0]/p[3] - q[0]/q[3]) * width\r\n    var dy = (p[1]/p[3] - q[1]/q[3]) * height\r\n\r\n    result[i] = 0.25 * Math.sqrt(dx*dx + dy*dy)\r\n  }\r\n  return result\r\n}\r\n\r\nvar RANGES = [\r\n  new AxesRange3D(Infinity, -Infinity, Infinity),\r\n  new AxesRange3D(Infinity, -Infinity, Infinity),\r\n  new AxesRange3D(Infinity, -Infinity, Infinity)\r\n]\r\n\r\nvar SCRATCH_X = [0,0,0]\r\n\r\nfunction axesProperties(axes, camera, width, height, params) {\r\n  var model       = camera.model || identity\r\n  var view        = camera.view || identity\r\n  var projection  = camera.projection || identity\r\n  var bounds      = axes.bounds\r\n  var params      = params || cubeParams(model, view, projection, bounds)\r\n  var axis        = params.axis\r\n  var edges       = params.edges\r\n\r\n  m4mul(mvp, view, model)\r\n  m4mul(mvp, projection, mvp)\r\n\r\n  //Calculate the following properties for each axis:\r\n  //\r\n  // * lo - start of visible range for each axis in tick coordinates\r\n  // * hi - end of visible range for each axis in tick coordinates\r\n  // * ticksPerPixel - pixel density of tick marks for the axis\r\n  //\r\n  var ranges = RANGES\r\n  for(var i=0; i<3; ++i) {\r\n    ranges[i].lo = Infinity\r\n    ranges[i].hi = -Infinity\r\n    ranges[i].pixelsPerDataUnit = Infinity\r\n  }\r\n\r\n  //Compute frustum planes, intersect with box\r\n  var frustum = getPlanes(m4transpose(mvp, mvp))\r\n  m4transpose(mvp, mvp)\r\n\r\n  //Loop over vertices of viewable box\r\n  for(var d=0; d<3; ++d) {\r\n    var u = (d+1)%3\r\n    var v = (d+2)%3\r\n    var x = SCRATCH_X\r\ni_loop:\r\n    for(var i=0; i<2; ++i) {\r\n      var poly = []\r\n\r\n      if((axis[d] < 0) === !!i) {\r\n        continue\r\n      }\r\n\r\n      x[d] = bounds[i][d]\r\n      for(var j=0; j<2; ++j) {\r\n        x[u] = bounds[j^i][u]\r\n        for(var k=0; k<2; ++k) {\r\n          x[v] = bounds[k^j^i][v]\r\n          poly.push(x.slice())\r\n        }\r\n      }\r\n      for(var j=0; j<frustum.length; ++j) {\r\n        if(poly.length === 0) {\r\n          continue i_loop\r\n        }\r\n        poly = splitPoly.positive(poly, frustum[j])\r\n      }\r\n\r\n      //Loop over vertices of polygon to find extremal points\r\n      for(var j=0; j<poly.length; ++j) {\r\n        var v = poly[j]\r\n        var grad = gradient(SCRATCH_X, mvp, v, width, height)\r\n        for(var k=0; k<3; ++k) {\r\n          ranges[k].lo = Math.min(ranges[k].lo, v[k])\r\n          ranges[k].hi = Math.max(ranges[k].hi, v[k])\r\n          if(k !== d) {\r\n            ranges[k].pixelsPerDataUnit = Math.min(ranges[k].pixelsPerDataUnit, Math.abs(grad[k]))\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return ranges\r\n}\r\n"},"lineCount":141}},"hash":"1859c05110b8a63339829dfba43723cb","cacheData":{"env":{}}}