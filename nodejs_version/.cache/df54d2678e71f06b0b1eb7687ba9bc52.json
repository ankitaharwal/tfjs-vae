{"dependencies":[{"name":"C:\\Users\\qison\\package.json","includedInParent":true,"mtime":1526331035212},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\planar-dual\\package.json","includedInParent":true,"mtime":1398780365000},{"name":"compare-angle","loc":{"line":5,"column":27}}],"generated":{"js":"\"use strict\"\n\nmodule.exports = planarDual\n\nvar compareAngle = require(\"compare-angle\")\n\nfunction planarDual(cells, positions) {\n\n  var numVertices = positions.length|0\n  var numEdges = cells.length\n  var adj = [new Array(numVertices), new Array(numVertices)]\n  for(var i=0; i<numVertices; ++i) {\n    adj[0][i] = []\n    adj[1][i] = []\n  }\n  for(var i=0; i<numEdges; ++i) {\n    var c = cells[i]\n    adj[0][c[0]].push(c)\n    adj[1][c[1]].push(c)\n  }\n\n  var cycles = []\n\n  //Add isolated vertices as trivial case\n  for(var i=0; i<numVertices; ++i) {\n    if(adj[0][i].length + adj[1][i].length === 0) {\n      cycles.push( [i] )\n    }\n  }\n\n  //Remove a half edge\n  function cut(c, i) {\n    var a = adj[i][c[i]]\n    a.splice(a.indexOf(c), 1)\n  }\n\n  //Find next vertex and cut edge\n  function next(a, b, noCut) {\n    var nextCell, nextVertex, nextDir\n    for(var i=0; i<2; ++i) {\n      if(adj[i][b].length > 0) {\n        nextCell = adj[i][b][0]\n        nextDir = i\n        break\n      }\n    }\n    nextVertex = nextCell[nextDir^1]\n\n    for(var dir=0; dir<2; ++dir) {\n      var nbhd = adj[dir][b]\n      for(var k=0; k<nbhd.length; ++k) {\n        var e = nbhd[k]\n        var p = e[dir^1]\n        var cmp = compareAngle(\n            positions[a], \n            positions[b], \n            positions[nextVertex],\n            positions[p])\n        if(cmp > 0) {\n          nextCell = e\n          nextVertex = p\n          nextDir = dir\n        }\n      }\n    }\n    if(noCut) {\n      return nextVertex\n    }\n    if(nextCell) {\n      cut(nextCell, nextDir)\n    }\n    return nextVertex\n  }\n\n  function extractCycle(v, dir) {\n    var e0 = adj[dir][v][0]\n    var cycle = [v]\n    cut(e0, dir)\n    var u = e0[dir^1]\n    var d0 = dir\n    while(true) {\n      while(u !== v) {\n        cycle.push(u)\n        u = next(cycle[cycle.length-2], u, false)\n      }\n      if(adj[0][v].length + adj[1][v].length === 0) {\n        break\n      }\n      var a = cycle[cycle.length-1]\n      var b = v\n      var c = cycle[1]\n      var d = next(a, b, true)\n      if(compareAngle(positions[a], positions[b], positions[c], positions[d]) < 0) {\n        break\n      }\n      cycle.push(v)\n      u = next(a, b)\n    }\n    return cycle\n  }\n\n  function shouldGlue(pcycle, ncycle) {\n    return (ncycle[1] === ncycle[ncycle.length-1])\n  }\n\n  for(var i=0; i<numVertices; ++i) {\n    for(var j=0; j<2; ++j) {\n      var pcycle = []\n      while(adj[j][i].length > 0) {\n        var ni = adj[0][i].length\n        var ncycle = extractCycle(i,j)\n        if(shouldGlue(pcycle, ncycle)) {\n          //Glue together trivial cycles\n          pcycle.push.apply(pcycle, ncycle)\n        } else {\n          if(pcycle.length > 0) {\n            cycles.push(pcycle)\n          }\n          pcycle = ncycle\n        }\n      }\n      if(pcycle.length > 0) {\n        cycles.push(pcycle)\n      }\n    }\n  }\n\n  //Combine paths and loops together\n  return cycles\n}","map":{"mappings":[{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"nodejs_version\\node_modules\\planar-dual\\loops.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}}],"sources":{"nodejs_version\\node_modules\\planar-dual\\loops.js":"\"use strict\"\n\nmodule.exports = planarDual\n\nvar compareAngle = require(\"compare-angle\")\n\nfunction planarDual(cells, positions) {\n\n  var numVertices = positions.length|0\n  var numEdges = cells.length\n  var adj = [new Array(numVertices), new Array(numVertices)]\n  for(var i=0; i<numVertices; ++i) {\n    adj[0][i] = []\n    adj[1][i] = []\n  }\n  for(var i=0; i<numEdges; ++i) {\n    var c = cells[i]\n    adj[0][c[0]].push(c)\n    adj[1][c[1]].push(c)\n  }\n\n  var cycles = []\n\n  //Add isolated vertices as trivial case\n  for(var i=0; i<numVertices; ++i) {\n    if(adj[0][i].length + adj[1][i].length === 0) {\n      cycles.push( [i] )\n    }\n  }\n\n  //Remove a half edge\n  function cut(c, i) {\n    var a = adj[i][c[i]]\n    a.splice(a.indexOf(c), 1)\n  }\n\n  //Find next vertex and cut edge\n  function next(a, b, noCut) {\n    var nextCell, nextVertex, nextDir\n    for(var i=0; i<2; ++i) {\n      if(adj[i][b].length > 0) {\n        nextCell = adj[i][b][0]\n        nextDir = i\n        break\n      }\n    }\n    nextVertex = nextCell[nextDir^1]\n\n    for(var dir=0; dir<2; ++dir) {\n      var nbhd = adj[dir][b]\n      for(var k=0; k<nbhd.length; ++k) {\n        var e = nbhd[k]\n        var p = e[dir^1]\n        var cmp = compareAngle(\n            positions[a], \n            positions[b], \n            positions[nextVertex],\n            positions[p])\n        if(cmp > 0) {\n          nextCell = e\n          nextVertex = p\n          nextDir = dir\n        }\n      }\n    }\n    if(noCut) {\n      return nextVertex\n    }\n    if(nextCell) {\n      cut(nextCell, nextDir)\n    }\n    return nextVertex\n  }\n\n  function extractCycle(v, dir) {\n    var e0 = adj[dir][v][0]\n    var cycle = [v]\n    cut(e0, dir)\n    var u = e0[dir^1]\n    var d0 = dir\n    while(true) {\n      while(u !== v) {\n        cycle.push(u)\n        u = next(cycle[cycle.length-2], u, false)\n      }\n      if(adj[0][v].length + adj[1][v].length === 0) {\n        break\n      }\n      var a = cycle[cycle.length-1]\n      var b = v\n      var c = cycle[1]\n      var d = next(a, b, true)\n      if(compareAngle(positions[a], positions[b], positions[c], positions[d]) < 0) {\n        break\n      }\n      cycle.push(v)\n      u = next(a, b)\n    }\n    return cycle\n  }\n\n  function shouldGlue(pcycle, ncycle) {\n    return (ncycle[1] === ncycle[ncycle.length-1])\n  }\n\n  for(var i=0; i<numVertices; ++i) {\n    for(var j=0; j<2; ++j) {\n      var pcycle = []\n      while(adj[j][i].length > 0) {\n        var ni = adj[0][i].length\n        var ncycle = extractCycle(i,j)\n        if(shouldGlue(pcycle, ncycle)) {\n          //Glue together trivial cycles\n          pcycle.push.apply(pcycle, ncycle)\n        } else {\n          if(pcycle.length > 0) {\n            cycles.push(pcycle)\n          }\n          pcycle = ncycle\n        }\n      }\n      if(pcycle.length > 0) {\n        cycles.push(pcycle)\n      }\n    }\n  }\n\n  //Combine paths and loops together\n  return cycles\n}"},"lineCount":130}},"hash":"e9a0cefce1c185f9fc228a05887d7fc5","cacheData":{"env":{}}}