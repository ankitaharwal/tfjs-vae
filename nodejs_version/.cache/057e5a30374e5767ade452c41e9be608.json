{"dependencies":[{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\package.json","includedInParent":true,"mtime":1528206326997},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\.babelrc","includedInParent":true,"mtime":1528197961732},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\array-bounds\\package.json","includedInParent":true,"mtime":1496943393000}],"generated":{"js":"'use strict'\r\n\r\nmodule.exports = normalize;\r\n\r\nfunction normalize (arr, dim) {\r\n\tif (!arr || arr.length == null) throw Error('Argument should be an array')\r\n\r\n\tif (dim == null) dim = 1\r\n\telse dim = Math.floor(dim)\r\n\r\n\tvar bounds = Array(dim * 2)\r\n\r\n\tfor (var offset = 0; offset < dim; offset++) {\r\n\t\tvar max = -Infinity, min = Infinity, i = offset, l = arr.length;\r\n\r\n\t\tfor (; i < l; i+=dim) {\r\n\t\t\tif (arr[i] > max) max = arr[i];\r\n\t\t\tif (arr[i] < min) min = arr[i];\r\n\t\t}\r\n\r\n\t\tbounds[offset] = min\r\n\t\tbounds[dim + offset] = max\r\n\t}\r\n\r\n\treturn bounds;\r\n}\r\n","map":{"mappings":[{"source":"node_modules\\array-bounds\\index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\array-bounds\\index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}}],"sources":{"node_modules\\array-bounds\\index.js":"'use strict'\r\n\r\nmodule.exports = normalize;\r\n\r\nfunction normalize (arr, dim) {\r\n\tif (!arr || arr.length == null) throw Error('Argument should be an array')\r\n\r\n\tif (dim == null) dim = 1\r\n\telse dim = Math.floor(dim)\r\n\r\n\tvar bounds = Array(dim * 2)\r\n\r\n\tfor (var offset = 0; offset < dim; offset++) {\r\n\t\tvar max = -Infinity, min = Infinity, i = offset, l = arr.length;\r\n\r\n\t\tfor (; i < l; i+=dim) {\r\n\t\t\tif (arr[i] > max) max = arr[i];\r\n\t\t\tif (arr[i] < min) min = arr[i];\r\n\t\t}\r\n\r\n\t\tbounds[offset] = min\r\n\t\tbounds[dim + offset] = max\r\n\t}\r\n\r\n\treturn bounds;\r\n}\r\n"},"lineCount":27}},"hash":"faa7e8f452c2dbda1185e6dd76a9d9bb","cacheData":{"env":{}}}