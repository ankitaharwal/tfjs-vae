{"dependencies":[{"name":"C:\\Users\\qison\\package.json","includedInParent":true,"mtime":1526331035212},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\plotly.js\\package.json","includedInParent":true,"mtime":499162500000},{"name":"fast-isnumeric","loc":{"line":12,"column":24}},{"name":"./loggers","loc":{"line":13,"column":22}}],"generated":{"js":"/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar loggers = require('./loggers');\n\n// don't trust floating point equality - fraction of bin size to call\n// \"on the line\" and ensure that they go the right way specified by\n// linelow\nvar roundingError = 1e-9;\n\n\n/**\n * findBin - find the bin for val - note that it can return outside the\n * bin range any pos. or neg. integer for linear bins, or -1 or\n * bins.length-1 for explicit.\n * bins is either an object {start,size,end} or an array length #bins+1\n * bins can be either increasing or decreasing but must be monotonic\n * for linear bins, we can just calculate. For listed bins, run a binary\n * search linelow (truthy) says the bin boundary should be attributed to\n * the lower bin rather than the default upper bin\n */\nexports.findBin = function(val, bins, linelow) {\n    if(isNumeric(bins.start)) {\n        return linelow ?\n            Math.ceil((val - bins.start) / bins.size - roundingError) - 1 :\n            Math.floor((val - bins.start) / bins.size + roundingError);\n    }\n    else {\n        var n1 = 0;\n        var n2 = bins.length;\n        var c = 0;\n        var binSize = (n2 > 1) ? (bins[n2 - 1] - bins[0]) / (n2 - 1) : 1;\n        var n, test;\n        if(binSize >= 0) {\n            test = linelow ? lessThan : lessOrEqual;\n        } else {\n            test = linelow ? greaterOrEqual : greaterThan;\n        }\n        val += binSize * roundingError * (linelow ? -1 : 1) * (binSize >= 0 ? 1 : -1);\n        // c is just to avoid infinite loops if there's an error\n        while(n1 < n2 && c++ < 100) {\n            n = Math.floor((n1 + n2) / 2);\n            if(test(bins[n], val)) n1 = n + 1;\n            else n2 = n;\n        }\n        if(c > 90) loggers.log('Long binary search...');\n        return n1 - 1;\n    }\n};\n\nfunction lessThan(a, b) { return a < b; }\nfunction lessOrEqual(a, b) { return a <= b; }\nfunction greaterThan(a, b) { return a > b; }\nfunction greaterOrEqual(a, b) { return a >= b; }\n\nexports.sorterAsc = function(a, b) { return a - b; };\nexports.sorterDes = function(a, b) { return b - a; };\n\n/**\n * find distinct values in an array, lumping together ones that appear to\n * just be off by a rounding error\n * return the distinct values and the minimum difference between any two\n */\nexports.distinctVals = function(valsIn) {\n    var vals = valsIn.slice();  // otherwise we sort the original array...\n    vals.sort(exports.sorterAsc);\n\n    var l = vals.length - 1,\n        minDiff = (vals[l] - vals[0]) || 1,\n        errDiff = minDiff / (l || 1) / 10000,\n        v2 = [vals[0]];\n\n    for(var i = 0; i < l; i++) {\n        // make sure values aren't just off by a rounding error\n        if(vals[i + 1] > vals[i] + errDiff) {\n            minDiff = Math.min(minDiff, vals[i + 1] - vals[i]);\n            v2.push(vals[i + 1]);\n        }\n    }\n\n    return {vals: v2, minDiff: minDiff};\n};\n\n/**\n * return the smallest element from (sorted) array arrayIn that's bigger than val,\n * or (reverse) the largest element smaller than val\n * used to find the best tick given the minimum (non-rounded) tick\n * particularly useful for date/time where things are not powers of 10\n * binary search is probably overkill here...\n */\nexports.roundUp = function(val, arrayIn, reverse) {\n    var low = 0,\n        high = arrayIn.length - 1,\n        mid,\n        c = 0,\n        dlow = reverse ? 0 : 1,\n        dhigh = reverse ? 1 : 0,\n        rounded = reverse ? Math.ceil : Math.floor;\n    // c is just to avoid infinite loops if there's an error\n    while(low < high && c++ < 100) {\n        mid = rounded((low + high) / 2);\n        if(arrayIn[mid] <= val) low = mid + dlow;\n        else high = mid - dhigh;\n    }\n    return arrayIn[low];\n};\n","map":{"mappings":[{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}}],"sources":{"nodejs_version\\node_modules\\plotly.js\\src\\lib\\search.js":"/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar loggers = require('./loggers');\n\n// don't trust floating point equality - fraction of bin size to call\n// \"on the line\" and ensure that they go the right way specified by\n// linelow\nvar roundingError = 1e-9;\n\n\n/**\n * findBin - find the bin for val - note that it can return outside the\n * bin range any pos. or neg. integer for linear bins, or -1 or\n * bins.length-1 for explicit.\n * bins is either an object {start,size,end} or an array length #bins+1\n * bins can be either increasing or decreasing but must be monotonic\n * for linear bins, we can just calculate. For listed bins, run a binary\n * search linelow (truthy) says the bin boundary should be attributed to\n * the lower bin rather than the default upper bin\n */\nexports.findBin = function(val, bins, linelow) {\n    if(isNumeric(bins.start)) {\n        return linelow ?\n            Math.ceil((val - bins.start) / bins.size - roundingError) - 1 :\n            Math.floor((val - bins.start) / bins.size + roundingError);\n    }\n    else {\n        var n1 = 0;\n        var n2 = bins.length;\n        var c = 0;\n        var binSize = (n2 > 1) ? (bins[n2 - 1] - bins[0]) / (n2 - 1) : 1;\n        var n, test;\n        if(binSize >= 0) {\n            test = linelow ? lessThan : lessOrEqual;\n        } else {\n            test = linelow ? greaterOrEqual : greaterThan;\n        }\n        val += binSize * roundingError * (linelow ? -1 : 1) * (binSize >= 0 ? 1 : -1);\n        // c is just to avoid infinite loops if there's an error\n        while(n1 < n2 && c++ < 100) {\n            n = Math.floor((n1 + n2) / 2);\n            if(test(bins[n], val)) n1 = n + 1;\n            else n2 = n;\n        }\n        if(c > 90) loggers.log('Long binary search...');\n        return n1 - 1;\n    }\n};\n\nfunction lessThan(a, b) { return a < b; }\nfunction lessOrEqual(a, b) { return a <= b; }\nfunction greaterThan(a, b) { return a > b; }\nfunction greaterOrEqual(a, b) { return a >= b; }\n\nexports.sorterAsc = function(a, b) { return a - b; };\nexports.sorterDes = function(a, b) { return b - a; };\n\n/**\n * find distinct values in an array, lumping together ones that appear to\n * just be off by a rounding error\n * return the distinct values and the minimum difference between any two\n */\nexports.distinctVals = function(valsIn) {\n    var vals = valsIn.slice();  // otherwise we sort the original array...\n    vals.sort(exports.sorterAsc);\n\n    var l = vals.length - 1,\n        minDiff = (vals[l] - vals[0]) || 1,\n        errDiff = minDiff / (l || 1) / 10000,\n        v2 = [vals[0]];\n\n    for(var i = 0; i < l; i++) {\n        // make sure values aren't just off by a rounding error\n        if(vals[i + 1] > vals[i] + errDiff) {\n            minDiff = Math.min(minDiff, vals[i + 1] - vals[i]);\n            v2.push(vals[i + 1]);\n        }\n    }\n\n    return {vals: v2, minDiff: minDiff};\n};\n\n/**\n * return the smallest element from (sorted) array arrayIn that's bigger than val,\n * or (reverse) the largest element smaller than val\n * used to find the best tick given the minimum (non-rounded) tick\n * particularly useful for date/time where things are not powers of 10\n * binary search is probably overkill here...\n */\nexports.roundUp = function(val, arrayIn, reverse) {\n    var low = 0,\n        high = arrayIn.length - 1,\n        mid,\n        c = 0,\n        dlow = reverse ? 0 : 1,\n        dhigh = reverse ? 1 : 0,\n        rounded = reverse ? Math.ceil : Math.floor;\n    // c is just to avoid infinite loops if there's an error\n    while(low < high && c++ < 100) {\n        mid = rounded((low + high) / 2);\n        if(arrayIn[mid] <= val) low = mid + dlow;\n        else high = mid - dhigh;\n    }\n    return arrayIn[low];\n};\n"},"lineCount":116}},"hash":"f75efe76bf7c2e2682e826e8174563de","cacheData":{"env":{}}}