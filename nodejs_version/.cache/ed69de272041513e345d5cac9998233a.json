{"dependencies":[{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\package.json","includedInParent":true,"mtime":1528206326997},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\.babelrc","includedInParent":true,"mtime":1528197961732},{"name":"C:\\Users\\qison\\Google Drive\\tfjs_vae\\nodejs_version\\node_modules\\gl-axes3d\\package.json","includedInParent":true,"mtime":1517604952000},{"name":"bit-twiddle","loc":{"line":5,"column":24}},{"name":"gl-mat4/multiply","loc":{"line":6,"column":24}},{"name":"gl-mat4/invert","loc":{"line":7,"column":24}},{"name":"split-polygon","loc":{"line":8,"column":24}},{"name":"robust-orientation","loc":{"line":9,"column":24}}],"generated":{"js":"\"use strict\"\r\n\r\nmodule.exports = getCubeEdges\r\n\r\nvar bits      = require('bit-twiddle')\r\nvar multiply  = require('gl-mat4/multiply')\r\nvar invert    = require('gl-mat4/invert')\r\nvar splitPoly = require('split-polygon')\r\nvar orient    = require('robust-orientation')\r\n\r\nvar mvp        = new Array(16)\r\nvar imvp       = new Array(16)\r\nvar pCubeVerts = new Array(8)\r\nvar cubeVerts  = new Array(8)\r\nvar x          = new Array(3)\r\nvar zero3      = [0,0,0]\r\n\r\n;(function() {\r\n  for(var i=0; i<8; ++i) {\r\n    pCubeVerts[i] =[1,1,1,1]\r\n    cubeVerts[i] = [1,1,1]\r\n  }\r\n})()\r\n\r\n\r\nfunction transformHg(result, x, mat) {\r\n  for(var i=0; i<4; ++i) {\r\n    result[i] = mat[12+i]\r\n    for(var j=0; j<3; ++j) {\r\n      result[i] += x[j]*mat[4*j+i]\r\n    }\r\n  }\r\n}\r\n\r\nvar FRUSTUM_PLANES = [\r\n  [ 0, 0, 1, 0, 0],\r\n  [ 0, 0,-1, 1, 0],\r\n  [ 0,-1, 0, 1, 0],\r\n  [ 0, 1, 0, 1, 0],\r\n  [-1, 0, 0, 1, 0],\r\n  [ 1, 0, 0, 1, 0]\r\n]\r\n\r\nfunction polygonArea(p) {\r\n  for(var i=0; i<FRUSTUM_PLANES.length; ++i) {\r\n    p = splitPoly.positive(p, FRUSTUM_PLANES[i])\r\n    if(p.length < 3) {\r\n      return 0\r\n    }\r\n  }\r\n\r\n  var base = p[0]\r\n  var ax = base[0] / base[3]\r\n  var ay = base[1] / base[3]\r\n  var area = 0.0\r\n  for(var i=1; i+1<p.length; ++i) {\r\n    var b = p[i]\r\n    var c = p[i+1]\r\n\r\n    var bx = b[0]/b[3]\r\n    var by = b[1]/b[3]\r\n    var cx = c[0]/c[3]\r\n    var cy = c[1]/c[3]\r\n\r\n    var ux = bx - ax\r\n    var uy = by - ay\r\n\r\n    var vx = cx - ax\r\n    var vy = cy - ay\r\n\r\n    area += Math.abs(ux * vy - uy * vx)\r\n  }\r\n\r\n  return area\r\n}\r\n\r\nvar CUBE_EDGES = [1,1,1]\r\nvar CUBE_AXIS  = [0,0,0]\r\nvar CUBE_RESULT = {\r\n  cubeEdges: CUBE_EDGES,\r\n  axis: CUBE_AXIS\r\n}\r\n\r\nfunction getCubeEdges(model, view, projection, bounds) {\r\n\r\n  //Concatenate matrices\r\n  multiply(mvp, view, model)\r\n  multiply(mvp, projection, mvp)\r\n  \r\n  //First project cube vertices\r\n  var ptr = 0\r\n  for(var i=0; i<2; ++i) {\r\n    x[2] = bounds[i][2]\r\n    for(var j=0; j<2; ++j) {\r\n      x[1] = bounds[j][1]\r\n      for(var k=0; k<2; ++k) {\r\n        x[0] = bounds[k][0]\r\n        transformHg(pCubeVerts[ptr], x, mvp)\r\n        ptr += 1\r\n      }\r\n    }\r\n  }\r\n\r\n  //Classify camera against cube faces\r\n  var closest = -1\r\n\r\n  for(var i=0; i<8; ++i) {\r\n    var w = pCubeVerts[i][3]\r\n    for(var l=0; l<3; ++l) {\r\n      cubeVerts[i][l] = pCubeVerts[i][l] / w\r\n    }\r\n    if(w < 0) {\r\n      if(closest < 0) {\r\n        closest = i\r\n      } else if(cubeVerts[i][2] < cubeVerts[closest][2]) {\r\n        closest = i\r\n      }\r\n    }    \r\n  }\r\n\r\n  if(closest < 0) {\r\n    closest = 0\r\n    for(var d=0; d<3; ++d) {\r\n      var u = (d+2) % 3\r\n      var v = (d+1) % 3\r\n      var o0 = -1\r\n      var o1 = -1\r\n      for(var s=0; s<2; ++s) {\r\n        var f0 = (s<<d)\r\n        var f1 = f0 + (s << u) + ((1-s) << v)\r\n        var f2 = f0 + ((1-s) << u) + (s << v)\r\n        if(orient(cubeVerts[f0], cubeVerts[f1], cubeVerts[f2], zero3) < 0) {\r\n          continue\r\n        }\r\n        if(s) {\r\n          o0 = 1\r\n        } else {\r\n          o1 = 1\r\n        }\r\n      }\r\n      if(o0 < 0 || o1 < 0) {\r\n        if(o1 > o0) {\r\n          closest |= 1<<d\r\n        }\r\n        continue\r\n      } \r\n      for(var s=0; s<2; ++s) {\r\n        var f0 = (s<<d)\r\n        var f1 = f0 + (s << u) + ((1-s) << v)\r\n        var f2 = f0 + ((1-s) << u) + (s << v)    \r\n        var o = polygonArea([\r\n            pCubeVerts[f0], \r\n            pCubeVerts[f1], \r\n            pCubeVerts[f2], \r\n            pCubeVerts[f0+(1<<u)+(1<<v)]])\r\n        if(s) {\r\n          o0 = o\r\n        } else {\r\n          o1 = o\r\n        }\r\n      }\r\n      if(o1 > o0) {\r\n        closest |= 1<<d\r\n        continue\r\n      }\r\n    }\r\n  }\r\n\r\n  var farthest = 7^closest\r\n\r\n  //Find lowest vertex which is not closest closest\r\n  var bottom = -1\r\n  for(var i=0; i<8; ++i) {\r\n    if(i === closest || i === farthest) {\r\n      continue\r\n    }\r\n    if(bottom < 0) {\r\n      bottom = i\r\n    } else if(cubeVerts[bottom][1] > cubeVerts[i][1]) {\r\n      bottom = i\r\n    }\r\n  }\r\n\r\n  //Find left/right neighbors of bottom vertex\r\n  var left = -1\r\n  for(var i=0; i<3; ++i) {\r\n    var idx = bottom ^ (1<<i)\r\n    if(idx === closest || idx === farthest) {\r\n      continue\r\n    }\r\n    if(left < 0) {\r\n      left = idx\r\n    }\r\n    var v = cubeVerts[idx]\r\n    if(v[0] < cubeVerts[left][0]) {\r\n      left = idx\r\n    }\r\n  }\r\n  var right = -1\r\n  for(var i=0; i<3; ++i) {\r\n    var idx = bottom ^ (1<<i)\r\n    if(idx === closest || idx === farthest || idx === left) {\r\n      continue\r\n    }\r\n    if(right < 0) {\r\n      right = idx\r\n    }\r\n    var v = cubeVerts[idx]\r\n    if(v[0] > cubeVerts[right][0]) {\r\n      right = idx\r\n    }\r\n  }\r\n\r\n  //Determine edge axis coordinates\r\n  var cubeEdges = CUBE_EDGES\r\n  cubeEdges[0] = cubeEdges[1] = cubeEdges[2] = 0\r\n  cubeEdges[bits.log2(left^bottom)] = bottom&left\r\n  cubeEdges[bits.log2(bottom^right)] = bottom&right\r\n  var top = right ^ 7\r\n  if(top === closest || top === farthest) {\r\n    top = left ^ 7\r\n    cubeEdges[bits.log2(right^top)] = top&right\r\n  } else {\r\n    cubeEdges[bits.log2(left^top)] = top&left\r\n  }\r\n\r\n  //Determine visible faces\r\n  var axis = CUBE_AXIS\r\n  var cutCorner = closest\r\n  for(var d=0; d<3; ++d) {\r\n    if(cutCorner & (1<<d)) {\r\n      axis[d] = -1\r\n    } else {\r\n      axis[d] = 1\r\n    }\r\n  }\r\n\r\n  //Return result\r\n  return CUBE_RESULT\r\n}","map":{"mappings":[{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules\\gl-axes3d\\lib\\cube.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}}],"sources":{"node_modules\\gl-axes3d\\lib\\cube.js":"\"use strict\"\r\n\r\nmodule.exports = getCubeEdges\r\n\r\nvar bits      = require('bit-twiddle')\r\nvar multiply  = require('gl-mat4/multiply')\r\nvar invert    = require('gl-mat4/invert')\r\nvar splitPoly = require('split-polygon')\r\nvar orient    = require('robust-orientation')\r\n\r\nvar mvp        = new Array(16)\r\nvar imvp       = new Array(16)\r\nvar pCubeVerts = new Array(8)\r\nvar cubeVerts  = new Array(8)\r\nvar x          = new Array(3)\r\nvar zero3      = [0,0,0]\r\n\r\n;(function() {\r\n  for(var i=0; i<8; ++i) {\r\n    pCubeVerts[i] =[1,1,1,1]\r\n    cubeVerts[i] = [1,1,1]\r\n  }\r\n})()\r\n\r\n\r\nfunction transformHg(result, x, mat) {\r\n  for(var i=0; i<4; ++i) {\r\n    result[i] = mat[12+i]\r\n    for(var j=0; j<3; ++j) {\r\n      result[i] += x[j]*mat[4*j+i]\r\n    }\r\n  }\r\n}\r\n\r\nvar FRUSTUM_PLANES = [\r\n  [ 0, 0, 1, 0, 0],\r\n  [ 0, 0,-1, 1, 0],\r\n  [ 0,-1, 0, 1, 0],\r\n  [ 0, 1, 0, 1, 0],\r\n  [-1, 0, 0, 1, 0],\r\n  [ 1, 0, 0, 1, 0]\r\n]\r\n\r\nfunction polygonArea(p) {\r\n  for(var i=0; i<FRUSTUM_PLANES.length; ++i) {\r\n    p = splitPoly.positive(p, FRUSTUM_PLANES[i])\r\n    if(p.length < 3) {\r\n      return 0\r\n    }\r\n  }\r\n\r\n  var base = p[0]\r\n  var ax = base[0] / base[3]\r\n  var ay = base[1] / base[3]\r\n  var area = 0.0\r\n  for(var i=1; i+1<p.length; ++i) {\r\n    var b = p[i]\r\n    var c = p[i+1]\r\n\r\n    var bx = b[0]/b[3]\r\n    var by = b[1]/b[3]\r\n    var cx = c[0]/c[3]\r\n    var cy = c[1]/c[3]\r\n\r\n    var ux = bx - ax\r\n    var uy = by - ay\r\n\r\n    var vx = cx - ax\r\n    var vy = cy - ay\r\n\r\n    area += Math.abs(ux * vy - uy * vx)\r\n  }\r\n\r\n  return area\r\n}\r\n\r\nvar CUBE_EDGES = [1,1,1]\r\nvar CUBE_AXIS  = [0,0,0]\r\nvar CUBE_RESULT = {\r\n  cubeEdges: CUBE_EDGES,\r\n  axis: CUBE_AXIS\r\n}\r\n\r\nfunction getCubeEdges(model, view, projection, bounds) {\r\n\r\n  //Concatenate matrices\r\n  multiply(mvp, view, model)\r\n  multiply(mvp, projection, mvp)\r\n  \r\n  //First project cube vertices\r\n  var ptr = 0\r\n  for(var i=0; i<2; ++i) {\r\n    x[2] = bounds[i][2]\r\n    for(var j=0; j<2; ++j) {\r\n      x[1] = bounds[j][1]\r\n      for(var k=0; k<2; ++k) {\r\n        x[0] = bounds[k][0]\r\n        transformHg(pCubeVerts[ptr], x, mvp)\r\n        ptr += 1\r\n      }\r\n    }\r\n  }\r\n\r\n  //Classify camera against cube faces\r\n  var closest = -1\r\n\r\n  for(var i=0; i<8; ++i) {\r\n    var w = pCubeVerts[i][3]\r\n    for(var l=0; l<3; ++l) {\r\n      cubeVerts[i][l] = pCubeVerts[i][l] / w\r\n    }\r\n    if(w < 0) {\r\n      if(closest < 0) {\r\n        closest = i\r\n      } else if(cubeVerts[i][2] < cubeVerts[closest][2]) {\r\n        closest = i\r\n      }\r\n    }    \r\n  }\r\n\r\n  if(closest < 0) {\r\n    closest = 0\r\n    for(var d=0; d<3; ++d) {\r\n      var u = (d+2) % 3\r\n      var v = (d+1) % 3\r\n      var o0 = -1\r\n      var o1 = -1\r\n      for(var s=0; s<2; ++s) {\r\n        var f0 = (s<<d)\r\n        var f1 = f0 + (s << u) + ((1-s) << v)\r\n        var f2 = f0 + ((1-s) << u) + (s << v)\r\n        if(orient(cubeVerts[f0], cubeVerts[f1], cubeVerts[f2], zero3) < 0) {\r\n          continue\r\n        }\r\n        if(s) {\r\n          o0 = 1\r\n        } else {\r\n          o1 = 1\r\n        }\r\n      }\r\n      if(o0 < 0 || o1 < 0) {\r\n        if(o1 > o0) {\r\n          closest |= 1<<d\r\n        }\r\n        continue\r\n      } \r\n      for(var s=0; s<2; ++s) {\r\n        var f0 = (s<<d)\r\n        var f1 = f0 + (s << u) + ((1-s) << v)\r\n        var f2 = f0 + ((1-s) << u) + (s << v)    \r\n        var o = polygonArea([\r\n            pCubeVerts[f0], \r\n            pCubeVerts[f1], \r\n            pCubeVerts[f2], \r\n            pCubeVerts[f0+(1<<u)+(1<<v)]])\r\n        if(s) {\r\n          o0 = o\r\n        } else {\r\n          o1 = o\r\n        }\r\n      }\r\n      if(o1 > o0) {\r\n        closest |= 1<<d\r\n        continue\r\n      }\r\n    }\r\n  }\r\n\r\n  var farthest = 7^closest\r\n\r\n  //Find lowest vertex which is not closest closest\r\n  var bottom = -1\r\n  for(var i=0; i<8; ++i) {\r\n    if(i === closest || i === farthest) {\r\n      continue\r\n    }\r\n    if(bottom < 0) {\r\n      bottom = i\r\n    } else if(cubeVerts[bottom][1] > cubeVerts[i][1]) {\r\n      bottom = i\r\n    }\r\n  }\r\n\r\n  //Find left/right neighbors of bottom vertex\r\n  var left = -1\r\n  for(var i=0; i<3; ++i) {\r\n    var idx = bottom ^ (1<<i)\r\n    if(idx === closest || idx === farthest) {\r\n      continue\r\n    }\r\n    if(left < 0) {\r\n      left = idx\r\n    }\r\n    var v = cubeVerts[idx]\r\n    if(v[0] < cubeVerts[left][0]) {\r\n      left = idx\r\n    }\r\n  }\r\n  var right = -1\r\n  for(var i=0; i<3; ++i) {\r\n    var idx = bottom ^ (1<<i)\r\n    if(idx === closest || idx === farthest || idx === left) {\r\n      continue\r\n    }\r\n    if(right < 0) {\r\n      right = idx\r\n    }\r\n    var v = cubeVerts[idx]\r\n    if(v[0] > cubeVerts[right][0]) {\r\n      right = idx\r\n    }\r\n  }\r\n\r\n  //Determine edge axis coordinates\r\n  var cubeEdges = CUBE_EDGES\r\n  cubeEdges[0] = cubeEdges[1] = cubeEdges[2] = 0\r\n  cubeEdges[bits.log2(left^bottom)] = bottom&left\r\n  cubeEdges[bits.log2(bottom^right)] = bottom&right\r\n  var top = right ^ 7\r\n  if(top === closest || top === farthest) {\r\n    top = left ^ 7\r\n    cubeEdges[bits.log2(right^top)] = top&right\r\n  } else {\r\n    cubeEdges[bits.log2(left^top)] = top&left\r\n  }\r\n\r\n  //Determine visible faces\r\n  var axis = CUBE_AXIS\r\n  var cutCorner = closest\r\n  for(var d=0; d<3; ++d) {\r\n    if(cutCorner & (1<<d)) {\r\n      axis[d] = -1\r\n    } else {\r\n      axis[d] = 1\r\n    }\r\n  }\r\n\r\n  //Return result\r\n  return CUBE_RESULT\r\n}"},"lineCount":240}},"hash":"8f365f32c25182eb9e1f4ffdb5c90593","cacheData":{"env":{}}}